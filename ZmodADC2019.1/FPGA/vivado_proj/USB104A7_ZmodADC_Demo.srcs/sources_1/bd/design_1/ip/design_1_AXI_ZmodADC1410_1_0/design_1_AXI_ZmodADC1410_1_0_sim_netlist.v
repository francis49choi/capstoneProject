// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
// Date        : Mon Jan 10 17:57:25 2022
// Host        : DESKTOP-DH2EH4H running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim {C:/Users/Francis
//               Choi/Desktop/Capstone/USB104A7-ZmodADC-v2019.1-1/FPGA/vivado_proj/USB104A7_ZmodADC_Demo.srcs/sources_1/bd/design_1/ip/design_1_AXI_ZmodADC1410_1_0/design_1_AXI_ZmodADC1410_1_0_sim_netlist.v}
// Design      : design_1_AXI_ZmodADC1410_1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a100tcsg324-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_AXI_ZmodADC1410_1_0,AXI_ZmodADC1410_v1_0,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "AXI_ZmodADC1410_v1_0,Vivado 2019.1.3" *) 
(* NotValidForBitStream *)
module design_1_AXI_ZmodADC1410_1_0
   (SysClk,
    AxiStreamClk,
    lRst_n,
    sZmodControllerRst_n,
    lIrqOut,
    sInitDone_n,
    sSync,
    sCh1LgMultCoef,
    sCh1LgAddCoef,
    sCh1HgMultCoef,
    sCh1HgAddCoef,
    sCh2LgMultCoef,
    sCh2LgAddCoef,
    sCh2HgMultCoef,
    sCh2HgAddCoef,
    sCh1CouplingSelect,
    sCh2CouplingSelect,
    sCh1GainSelect,
    sCh2GainSelect,
    sTestMode,
    sCh1In,
    sCh2In,
    sAdcSPI_Idle,
    sADC_SPI_CmdDone,
    sSPI_TxRdEn,
    sSPI_TxRdEnRdy,
    sSPI_TxDout,
    sSPI_TxValid,
    sSPI_EnTx,
    sSPI_EnRx,
    sSPI_RxWrEn,
    sSPI_RxDin,
    s_axis_s2mm_tdata,
    s_axis_s2mm_tkeep,
    s_axis_s2mm_tvalid,
    s_axis_s2mm_tready,
    s_axis_s2mm_tlast,
    s00_lAxiAwaddrLoc,
    s00_axi_awprot,
    s00_axi_awvalid,
    s00_lAxiAwreadyLoc,
    s00_axi_wdata,
    s00_axi_wstrb,
    s00_axi_wvalid,
    s00_lAxiWready,
    s00_lAxiBrespLoc,
    s00_lAxiBvalidLoc,
    s00_axi_bready,
    s00_lAxiAraddrLoc,
    s00_axi_arprot,
    s00_axi_arvalid,
    s00_lAxiArready,
    s00_lAxiRdata,
    s00_lAxiRdataLoc,
    s00_lAxiRvalid,
    s00_axi_rready,
    s00_axi_aclk);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 SysClk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME SysClk, ASSOCIATED_BUSIF mSPI_IAP, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input SysClk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 AxiStreamClk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME AxiStreamClk, ASSOCIATED_BUSIF AXI_S2MM, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input AxiStreamClk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 S00_AXI_RST RST" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AXI_RST, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input lRst_n;
  output sZmodControllerRst_n;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 IRQ_OUT INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME IRQ_OUT, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output lIrqOut;
  input sInitDone_n;
  output [3:0]sSync;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh1 LgMultCoef" *) output [17:0]sCh1LgMultCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh1 LgAddCoef" *) output [17:0]sCh1LgAddCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh1 HgMultCoef" *) output [17:0]sCh1HgMultCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh1 HgAddCoef" *) output [17:0]sCh1HgAddCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh2 LgMultCoef" *) output [17:0]sCh2LgMultCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh2 LgAddCoef" *) output [17:0]sCh2LgAddCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh2 HgMultCoef" *) output [17:0]sCh2HgMultCoef;
  (* x_interface_info = "Digilent:user:calib_coef:1.0 mCalibCh2 HgAddCoef" *) output [17:0]sCh2HgAddCoef;
  output sCh1CouplingSelect;
  output sCh2CouplingSelect;
  output sCh1GainSelect;
  output sCh2GainSelect;
  output sTestMode;
  input [13:0]sCh1In;
  input [13:0]sCh2In;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP Idle" *) input sAdcSPI_Idle;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP CmdDone" *) input sADC_SPI_CmdDone;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP TxRdEn" *) input sSPI_TxRdEn;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP TxRdEnRdy" *) output sSPI_TxRdEnRdy;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP TxDout" *) output [23:0]sSPI_TxDout;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP TxValid" *) output sSPI_TxValid;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP EnTx" *) output sSPI_EnTx;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP EnRx" *) output sSPI_EnRx;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP RxWrEn" *) input sSPI_RxWrEn;
  (* x_interface_info = "Digilent:user:spi_ctl:1.0 mSPI_IAP RxDin" *) input [7:0]sSPI_RxDin;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 AXI_S2MM TDATA" *) (* x_interface_parameter = "XIL_INTERFACENAME AXI_S2MM, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, LAYERED_METADATA undef, INSERT_VIP 0" *) output [31:0]s_axis_s2mm_tdata;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 AXI_S2MM TKEEP" *) output [3:0]s_axis_s2mm_tkeep;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 AXI_S2MM TVALID" *) output s_axis_s2mm_tvalid;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 AXI_S2MM TREADY" *) input s_axis_s2mm_tready;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 AXI_S2MM TLAST" *) output s_axis_s2mm_tlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AXI, WIZ_DATA_WIDTH 32, WIZ_NUM_REG 8, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 7, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [6:0]s00_lAxiAwaddrLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s00_axi_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input s00_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output s00_lAxiAwreadyLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s00_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s00_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input s00_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output s00_lAxiWready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s00_lAxiBrespLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output s00_lAxiBvalidLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input s00_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [6:0]s00_lAxiAraddrLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s00_axi_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input s00_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output s00_lAxiArready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s00_lAxiRdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s00_lAxiRdataLoc;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output s00_lAxiRvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) input s00_axi_rready;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 S00_AxiLiteClk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AxiLiteClk, ASSOCIATED_BUSIF S00_AXI, ASSOCIATED_RESET lRst_n, FREQ_HZ 100000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input s00_axi_aclk;

  wire \<const0> ;
  wire AxiStreamClk;
  wire SysClk;
  wire lIrqOut;
  wire lRst_n;
  wire s00_axi_aclk;
  wire s00_axi_arvalid;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_rready;
  wire [31:0]s00_axi_wdata;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;
  wire [6:0]s00_lAxiAraddrLoc;
  wire s00_lAxiArready;
  wire [6:0]s00_lAxiAwaddrLoc;
  wire s00_lAxiAwreadyLoc;
  wire s00_lAxiBvalidLoc;
  wire [31:0]s00_lAxiRdata;
  wire s00_lAxiRvalid;
  wire s00_lAxiWready;
  wire sADC_SPI_CmdDone;
  wire sAdcSPI_Idle;
  wire sCh1CouplingSelect;
  wire sCh1GainSelect;
  wire [17:0]sCh1HgAddCoef;
  wire [17:0]sCh1HgMultCoef;
  wire [13:0]sCh1In;
  wire [17:0]sCh1LgAddCoef;
  wire [17:0]sCh1LgMultCoef;
  wire sCh2CouplingSelect;
  wire sCh2GainSelect;
  wire [17:0]sCh2HgAddCoef;
  wire [17:0]sCh2HgMultCoef;
  wire [13:0]sCh2In;
  wire [17:0]sCh2LgAddCoef;
  wire [17:0]sCh2LgMultCoef;
  wire sInitDone_n;
  wire sSPI_EnRx;
  wire sSPI_EnTx;
  wire [7:0]sSPI_RxDin;
  wire sSPI_RxWrEn;
  wire [23:0]sSPI_TxDout;
  wire sSPI_TxRdEn;
  wire sSPI_TxRdEnRdy;
  wire sSPI_TxValid;
  wire [3:0]sSync;
  wire sTestMode;
  wire sZmodControllerRst_n;
  wire [31:2]\^s_axis_s2mm_tdata ;
  wire [2:2]\^s_axis_s2mm_tkeep ;
  wire s_axis_s2mm_tlast;
  wire s_axis_s2mm_tready;
  wire s_axis_s2mm_tvalid;

  assign s00_lAxiBrespLoc[1] = \<const0> ;
  assign s00_lAxiBrespLoc[0] = \<const0> ;
  assign s00_lAxiRdataLoc[1] = \<const0> ;
  assign s00_lAxiRdataLoc[0] = \<const0> ;
  assign s_axis_s2mm_tdata[31:18] = \^s_axis_s2mm_tdata [31:18];
  assign s_axis_s2mm_tdata[17] = \<const0> ;
  assign s_axis_s2mm_tdata[16] = \<const0> ;
  assign s_axis_s2mm_tdata[15:2] = \^s_axis_s2mm_tdata [15:2];
  assign s_axis_s2mm_tdata[1] = \<const0> ;
  assign s_axis_s2mm_tdata[0] = \<const0> ;
  assign s_axis_s2mm_tkeep[3] = \^s_axis_s2mm_tkeep [2];
  assign s_axis_s2mm_tkeep[2] = \^s_axis_s2mm_tkeep [2];
  assign s_axis_s2mm_tkeep[1] = \^s_axis_s2mm_tkeep [2];
  assign s_axis_s2mm_tkeep[0] = \^s_axis_s2mm_tkeep [2];
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_AXI_ZmodADC1410_v1_0 U0
       (.AxiStreamClk(AxiStreamClk),
        .Q({sSync,sCh2GainSelect,sCh1GainSelect,sCh2CouplingSelect,sCh1CouplingSelect}),
        .SysClk(SysClk),
        .lAxiRvalidLoc_reg(s00_lAxiRvalid),
        .lIrqOut(lIrqOut),
        .lRst_n(lRst_n),
        .s00_axi_aclk(s00_axi_aclk),
        .s00_axi_arvalid(s00_axi_arvalid),
        .s00_axi_awvalid(s00_axi_awvalid),
        .s00_axi_bready(s00_axi_bready),
        .s00_axi_rready(s00_axi_rready),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wstrb(s00_axi_wstrb),
        .s00_axi_wvalid(s00_axi_wvalid),
        .s00_lAxiAraddrLoc(s00_lAxiAraddrLoc[6:2]),
        .s00_lAxiArready(s00_lAxiArready),
        .s00_lAxiAwaddrLoc(s00_lAxiAwaddrLoc[6:2]),
        .s00_lAxiAwreadyLoc(s00_lAxiAwreadyLoc),
        .s00_lAxiBvalidLoc(s00_lAxiBvalidLoc),
        .s00_lAxiRdata(s00_lAxiRdata),
        .s00_lAxiWready(s00_lAxiWready),
        .sADC_SPI_CmdDone(sADC_SPI_CmdDone),
        .sAdcSPI_Idle(sAdcSPI_Idle),
        .sCh1HgAddCoef(sCh1HgAddCoef),
        .sCh1HgMultCoef(sCh1HgMultCoef),
        .sCh1In(sCh1In),
        .sCh1LgAddCoef(sCh1LgAddCoef),
        .sCh1LgMultCoef(sCh1LgMultCoef),
        .sCh2HgAddCoef(sCh2HgAddCoef),
        .sCh2HgMultCoef(sCh2HgMultCoef),
        .sCh2In(sCh2In),
        .sCh2LgAddCoef(sCh2LgAddCoef),
        .sCh2LgMultCoef(sCh2LgMultCoef),
        .sInitDone_n(sInitDone_n),
        .\sRegisters_reg[0][5]_0 ({sTestMode,sSPI_EnRx,sSPI_EnTx}),
        .sSPI_RxDin(sSPI_RxDin),
        .sSPI_RxWrEn(sSPI_RxWrEn),
        .sSPI_TxDout(sSPI_TxDout),
        .sSPI_TxRdEn(sSPI_TxRdEn),
        .sSPI_TxRdEnRdy(sSPI_TxRdEnRdy),
        .sSPI_TxValid(sSPI_TxValid),
        .sZmodControllerRst_n(sZmodControllerRst_n),
        .s_axis_s2mm_tdata({\^s_axis_s2mm_tdata [31:18],\^s_axis_s2mm_tdata [15:2]}),
        .s_axis_s2mm_tkeep(\^s_axis_s2mm_tkeep ),
        .s_axis_s2mm_tlast(s_axis_s2mm_tlast),
        .s_axis_s2mm_tready(s_axis_s2mm_tready),
        .s_axis_s2mm_tvalid(s_axis_s2mm_tvalid));
endmodule

(* ORIG_REF_NAME = "AXI_ZmodADC1410_v1_0" *) 
module design_1_AXI_ZmodADC1410_1_0_AXI_ZmodADC1410_v1_0
   (sZmodControllerRst_n,
    s00_lAxiWready,
    s00_lAxiAwreadyLoc,
    s00_lAxiArready,
    s00_lAxiRdata,
    s_axis_s2mm_tvalid,
    s_axis_s2mm_tdata,
    sSPI_TxDout,
    sSPI_TxValid,
    sSPI_TxRdEnRdy,
    Q,
    sCh1LgMultCoef,
    sCh1LgAddCoef,
    sCh1HgMultCoef,
    sCh1HgAddCoef,
    sCh2LgMultCoef,
    sCh2LgAddCoef,
    sCh2HgMultCoef,
    sCh2HgAddCoef,
    \sRegisters_reg[0][5]_0 ,
    lAxiRvalidLoc_reg,
    s00_lAxiBvalidLoc,
    s_axis_s2mm_tlast,
    s_axis_s2mm_tkeep,
    lIrqOut,
    s00_axi_wstrb,
    s00_axi_wdata,
    lRst_n,
    sCh1In,
    sCh2In,
    s00_axi_aclk,
    s00_lAxiAwaddrLoc,
    s00_lAxiAraddrLoc,
    SysClk,
    AxiStreamClk,
    s_axis_s2mm_tready,
    sSPI_RxDin,
    sSPI_RxWrEn,
    sSPI_TxRdEn,
    sADC_SPI_CmdDone,
    sAdcSPI_Idle,
    s00_axi_wvalid,
    s00_axi_awvalid,
    s00_axi_arvalid,
    sInitDone_n,
    s00_axi_bready,
    s00_axi_rready);
  output sZmodControllerRst_n;
  output s00_lAxiWready;
  output s00_lAxiAwreadyLoc;
  output s00_lAxiArready;
  output [31:0]s00_lAxiRdata;
  output s_axis_s2mm_tvalid;
  output [27:0]s_axis_s2mm_tdata;
  output [23:0]sSPI_TxDout;
  output sSPI_TxValid;
  output sSPI_TxRdEnRdy;
  output [7:0]Q;
  output [17:0]sCh1LgMultCoef;
  output [17:0]sCh1LgAddCoef;
  output [17:0]sCh1HgMultCoef;
  output [17:0]sCh1HgAddCoef;
  output [17:0]sCh2LgMultCoef;
  output [17:0]sCh2LgAddCoef;
  output [17:0]sCh2HgMultCoef;
  output [17:0]sCh2HgAddCoef;
  output [2:0]\sRegisters_reg[0][5]_0 ;
  output lAxiRvalidLoc_reg;
  output s00_lAxiBvalidLoc;
  output s_axis_s2mm_tlast;
  output [0:0]s_axis_s2mm_tkeep;
  output lIrqOut;
  input [3:0]s00_axi_wstrb;
  input [31:0]s00_axi_wdata;
  input lRst_n;
  input [13:0]sCh1In;
  input [13:0]sCh2In;
  input s00_axi_aclk;
  input [4:0]s00_lAxiAwaddrLoc;
  input [4:0]s00_lAxiAraddrLoc;
  input SysClk;
  input AxiStreamClk;
  input s_axis_s2mm_tready;
  input [7:0]sSPI_RxDin;
  input sSPI_RxWrEn;
  input sSPI_TxRdEn;
  input sADC_SPI_CmdDone;
  input sAdcSPI_Idle;
  input s00_axi_wvalid;
  input s00_axi_awvalid;
  input s00_axi_arvalid;
  input sInitDone_n;
  input s00_axi_bready;
  input s00_axi_rready;

  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_100;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_101;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_102;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_103;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_104;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_105;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_106;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_107;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_108;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_109;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_110;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_111;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_112;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_113;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_116;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_128;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_129;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_130;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_131;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_164;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_165;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_166;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_167;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_168;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_169;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_170;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_171;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_172;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_173;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_174;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_175;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_176;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_177;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_178;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_179;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_180;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_181;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_182;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_183;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_184;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_185;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_186;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_187;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_188;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_189;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_190;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_191;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_192;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_225;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_226;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_227;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_228;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_229;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_230;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_231;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_232;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_233;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_234;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_235;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_236;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_237;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_238;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_239;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_240;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_241;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_242;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_243;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_244;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_245;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_246;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_279;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_280;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_281;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_282;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_283;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_284;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_285;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_286;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_287;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_288;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_289;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_322;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_323;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_324;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_325;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_326;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_327;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_328;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_329;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_330;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_331;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_332;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_365;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_366;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_367;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_368;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_369;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_370;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_371;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_372;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_373;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_374;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_375;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_408;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_409;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_410;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_411;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_412;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_413;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_414;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_415;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_416;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_417;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_418;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_451;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_452;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_453;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_454;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_455;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_456;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_457;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_458;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_459;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_460;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_461;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_494;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_495;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_496;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_497;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_498;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_499;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_500;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_501;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_502;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_503;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_504;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_537;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_538;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_539;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_540;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_541;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_542;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_543;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_544;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_545;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_546;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_547;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_580;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_581;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_582;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_583;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_584;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_585;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_586;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_59;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_60;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_61;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_611;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_612;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_613;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_614;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_615;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_616;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_617;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_618;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_619;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_62;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_620;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_621;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_622;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_623;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_624;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_625;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_626;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_627;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_628;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_629;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_95;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_96;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_97;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_98;
  wire AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_99;
  wire AxiStreamClk;
  wire Circular_Buffer_inst_n_1;
  wire \FSM_sequential_sCurrentState[0]_i_20_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_21_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_22_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_23_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_24_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_25_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_26_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_27_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_28_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_29_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_30_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_31_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_32_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_16_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_16_n_1 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_16_n_2 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_16_n_3 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_18_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_18_n_1 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_18_n_2 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_18_n_3 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_19_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_19_n_1 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_19_n_2 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_19_n_3 ;
  wire \GenerateHanshake[0].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[0].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[0].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[0].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[0].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[10].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[11].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[12].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[2].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_20 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_21 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_22 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_23 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_24 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_25 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_26 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_27 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[3].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[5].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[6].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[7].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[8].InstSyncHandshake_n_9 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_0 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_10 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_11 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_12 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_13 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_14 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_15 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_16 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_17 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_18 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_19 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_2 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_3 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_4 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_5 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_6 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_7 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_8 ;
  wire \GenerateHanshake[9].InstSyncHandshake_n_9 ;
  wire InstIdleHandshake_n_1;
  wire InstSaxiResetHandshake_n_1;
  wire InstSaxiResetHandshake_n_2;
  wire InstStreamTLHandshake_n_1;
  wire InstStreamTLHandshake_n_2;
  wire [7:0]Q;
  wire SysClk;
  wire eqOp4_out;
  wire iPush0_in;
  wire iPush10_in;
  wire iPush11_in;
  wire iPush12_in;
  wire iPush1_in;
  wire iPush2_in;
  wire iPush3_in;
  wire iPush4_in;
  wire iPush5_in;
  wire iPush6_in;
  wire iPush7_in;
  wire iPush8_in;
  wire iPush9_in;
  wire lAdcSPI_Idle;
  wire lAxiRvalidLoc_reg;
  wire lBufferFull;
  wire lIpushTL;
  wire lIrqOut;
  wire [23:0]lReg3Rd;
  wire lRegRstR;
  wire [5:1]\lRegistersDin_reg[0]_22 ;
  wire [17:0]\lRegistersDin_reg[10]_19 ;
  wire [17:0]\lRegistersDin_reg[11]_20 ;
  wire [17:0]\lRegistersDin_reg[12]_21 ;
  wire [15:2]\lRegistersDin_reg[2]_36 ;
  wire [26:0]\lRegistersDin_reg[3]_13 ;
  wire [17:0]\lRegistersDin_reg[5]_14 ;
  wire [17:0]\lRegistersDin_reg[6]_15 ;
  wire [17:0]\lRegistersDin_reg[7]_16 ;
  wire [17:0]\lRegistersDin_reg[8]_17 ;
  wire [17:0]\lRegistersDin_reg[9]_18 ;
  wire [30:0]\lRegistersR_reg[0]_24 ;
  wire [31:0]\lRegistersR_reg[10]_33 ;
  wire [31:0]\lRegistersR_reg[11]_34 ;
  wire [31:0]\lRegistersR_reg[12]_35 ;
  wire [22:0]\lRegistersR_reg[1]_25 ;
  wire [31:0]\lRegistersR_reg[2]_26 ;
  wire [31:0]\lRegistersR_reg[3]_23 ;
  wire [31:0]\lRegistersR_reg[4]_27 ;
  wire [31:0]\lRegistersR_reg[5]_28 ;
  wire [31:0]\lRegistersR_reg[6]_29 ;
  wire [31:0]\lRegistersR_reg[7]_30 ;
  wire [31:0]\lRegistersR_reg[8]_31 ;
  wire [31:0]\lRegistersR_reg[9]_32 ;
  wire [31:0]\lRegisters[0]_0 ;
  wire [31:0]\lRegisters[10]_10 ;
  wire [31:0]\lRegisters[11]_11 ;
  wire [31:0]\lRegisters[12]_12 ;
  wire [22:0]\lRegisters[1]_1 ;
  wire [31:0]\lRegisters[2]_2 ;
  wire [31:0]\lRegisters[3]_3 ;
  wire [31:0]\lRegisters[4]_4 ;
  wire [31:0]\lRegisters[5]_5 ;
  wire [31:0]\lRegisters[6]_6 ;
  wire [31:0]\lRegisters[7]_7 ;
  wire [31:0]\lRegisters[8]_8 ;
  wire [31:0]\lRegisters[9]_9 ;
  wire \lRstIpushReg_reg_n_0_[0] ;
  wire lRst_n;
  wire [7:0]lSPI_CmdRx;
  wire [6:0]lSPI_CmdRxCount;
  wire [6:0]lSPI_CmdTxCount;
  wire lSPI_RxFifoRdEn;
  wire lSPI_TxFifoWrEn;
  wire lSetIpushReg0;
  wire lSetIpushReg011_out;
  wire lSetIpushReg013_out;
  wire lSetIpushReg015_out;
  wire lSetIpushReg017_out;
  wire lSetIpushReg019_out;
  wire lSetIpushReg021_out;
  wire lSetIpushReg023_out;
  wire lSetIpushReg03_out;
  wire lSetIpushReg05_out;
  wire lSetIpushReg09_out;
  wire lSetIpushReg1;
  wire lSetIpushReg10_out;
  wire lSetIpushReg110_out;
  wire lSetIpushReg111_out;
  wire lSetIpushReg112_out;
  wire lSetIpushReg11_out;
  wire lSetIpushReg12_out;
  wire lSetIpushReg13_out;
  wire lSetIpushReg14_out;
  wire lSetIpushReg15_out;
  wire lSetIpushReg16_out;
  wire lSetIpushReg17_out;
  wire lSetIpushReg18_out;
  wire lSetIpushReg19_out;
  wire lSetIpushReg1_carry__0_n_0;
  wire lSetIpushReg1_carry__0_n_1;
  wire lSetIpushReg1_carry__0_n_2;
  wire lSetIpushReg1_carry__0_n_3;
  wire lSetIpushReg1_carry__1_n_2;
  wire lSetIpushReg1_carry__1_n_3;
  wire lSetIpushReg1_carry_n_0;
  wire lSetIpushReg1_carry_n_1;
  wire lSetIpushReg1_carry_n_2;
  wire lSetIpushReg1_carry_n_3;
  wire \lSetIpushReg1_inferred__0/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__0/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__0/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__0/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__0/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__0/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__0/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__0/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__0/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__0/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry_n_0 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry_n_1 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry_n_2 ;
  wire \lSetIpushReg1_inferred__1/i___0_carry_n_3 ;
  wire \lSetIpushReg1_inferred__10/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__10/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__10/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__10/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__10/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__10/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__10/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__10/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__10/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__10/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__11/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__11/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__11/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__11/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__11/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__11/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__11/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__11/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__11/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__11/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__12/i___2_carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__12/i___2_carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__2/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__2/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__2/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__2/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__2/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__2/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__2/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__2/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__2/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__2/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__3/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__3/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__3/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__3/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__3/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__3/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__3/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__3/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__3/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__3/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__4/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__4/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__4/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__4/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__4/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__4/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__4/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__4/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__4/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__4/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__5/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__5/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__5/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__5/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__5/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__5/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__5/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__5/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__5/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__5/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__6/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__6/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__6/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__6/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__6/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__6/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__6/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__6/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__6/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__6/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__7/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__7/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__7/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__7/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__7/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__7/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__7/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__7/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__7/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__7/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__8/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__8/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__8/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__8/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__8/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__8/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__8/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__8/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__8/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__8/i__carry_n_3 ;
  wire \lSetIpushReg1_inferred__9/i__carry__0_n_0 ;
  wire \lSetIpushReg1_inferred__9/i__carry__0_n_1 ;
  wire \lSetIpushReg1_inferred__9/i__carry__0_n_2 ;
  wire \lSetIpushReg1_inferred__9/i__carry__0_n_3 ;
  wire \lSetIpushReg1_inferred__9/i__carry__1_n_2 ;
  wire \lSetIpushReg1_inferred__9/i__carry__1_n_3 ;
  wire \lSetIpushReg1_inferred__9/i__carry_n_0 ;
  wire \lSetIpushReg1_inferred__9/i__carry_n_1 ;
  wire \lSetIpushReg1_inferred__9/i__carry_n_2 ;
  wire \lSetIpushReg1_inferred__9/i__carry_n_3 ;
  wire \lSetIpushReg_reg_n_0_[0] ;
  wire \lSetIpushReg_reg_n_0_[13] ;
  wire lSetIpushTL;
  wire lSetIpushTL_i_1_n_0;
  wire lSetStop;
  wire lSlvReg1125_out__0;
  wire lTxDoneSet;
  wire lTxDoneSetR;
  wire lTxFifoRdEn;
  wire [13:1]minusOp;
  wire neqOp0_out;
  wire [13:0]oData;
  wire oValid;
  wire p_0_in__0;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire p_19_in;
  wire p_20_in;
  wire p_21_in;
  wire p_22_in;
  wire p_23_in;
  wire p_24_in;
  wire p_25_in;
  wire [13:0]p_26_out;
  wire s00_axi_aclk;
  wire s00_axi_arvalid;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_rready;
  wire [31:0]s00_axi_wdata;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;
  wire [4:0]s00_lAxiAraddrLoc;
  wire s00_lAxiArready;
  wire [4:0]s00_lAxiAwaddrLoc;
  wire s00_lAxiAwreadyLoc;
  wire s00_lAxiBvalidLoc;
  wire [31:0]s00_lAxiRdata;
  wire s00_lAxiWready;
  wire sADC_SPI_CmdDone;
  wire sAdcSPI_Idle;
  wire sAdcSPI_IdleDin;
  wire \sAdcSPI_IdleDin[0]_i_1_n_0 ;
  wire sAdcSPI_IdlePush;
  wire sAdcSPI_IdlePush0__0;
  wire sAdcSPI_IdleR;
  wire sAdcSPI_IdleRdy;
  wire sAdcSPI_IdleSetPush;
  wire sAdcSPI_IdleSetPush_i_1_n_0;
  wire [12:0]sAddrTrigger;
  wire sAqRunStop;
  wire [17:0]sCh1HgAddCoef;
  wire [17:0]sCh1HgMultCoef;
  wire [13:0]sCh1In;
  wire [17:0]sCh1LgAddCoef;
  wire [17:0]sCh1LgMultCoef;
  wire [17:0]sCh2HgAddCoef;
  wire [17:0]sCh2HgMultCoef;
  wire [13:0]sCh2In;
  wire [17:0]sCh2LgAddCoef;
  wire [17:0]sCh2LgMultCoef;
  wire sCurrentState0;
  wire sInitDone_n;
  wire [2:0]\sRegisters_reg[0][5]_0 ;
  wire \sRegisters_reg_n_0_[3][0] ;
  wire sRstPushTxFifoEmpty;
  wire [7:0]sSPI_RxDin;
  wire sSPI_RxWrEn;
  wire [23:0]sSPI_TxDout;
  wire sSPI_TxRdEn;
  wire sSPI_TxRdEnRdy;
  wire sSPI_TxValid;
  wire [13:0]sTransferLength;
  wire [13:0]sTrigLevel;
  wire [1:0]sTrigMode;
  wire sTrigRisingFalling;
  wire sTriggerCondition23_in;
  wire sZmodControllerRst_n;
  wire [27:0]s_axis_s2mm_tdata;
  wire [0:0]s_axis_s2mm_tkeep;
  wire s_axis_s2mm_tlast;
  wire s_axis_s2mm_tready;
  wire s_axis_s2mm_tvalid;
  wire xsRst_n;
  wire \xsTransferLength_reg_n_0_[0] ;
  wire \xsTransferLength_reg_n_0_[10] ;
  wire \xsTransferLength_reg_n_0_[11] ;
  wire \xsTransferLength_reg_n_0_[12] ;
  wire \xsTransferLength_reg_n_0_[13] ;
  wire \xsTransferLength_reg_n_0_[1] ;
  wire \xsTransferLength_reg_n_0_[2] ;
  wire \xsTransferLength_reg_n_0_[3] ;
  wire \xsTransferLength_reg_n_0_[4] ;
  wire \xsTransferLength_reg_n_0_[5] ;
  wire \xsTransferLength_reg_n_0_[6] ;
  wire \xsTransferLength_reg_n_0_[7] ;
  wire \xsTransferLength_reg_n_0_[8] ;
  wire \xsTransferLength_reg_n_0_[9] ;
  wire [3:0]\NLW_FSM_sequential_sCurrentState_reg[0]_i_17_CO_UNCONNECTED ;
  wire [3:1]\NLW_FSM_sequential_sCurrentState_reg[0]_i_17_O_UNCONNECTED ;
  wire [3:0]NLW_lSetIpushReg1_carry_O_UNCONNECTED;
  wire [3:0]NLW_lSetIpushReg1_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_lSetIpushReg1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_lSetIpushReg1_carry__1_O_UNCONNECTED;
  wire [3:0]\NLW_lSetIpushReg1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__1/i___0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__1/i___0_carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__1/i___0_carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__1/i___0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__10/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__10/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__10/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__10/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__11/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__11/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__11/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__11/i__carry__1_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__12/i___2_carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__12/i___2_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__2/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__2/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__2/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__2/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__3/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__3/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__3/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__3/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__4/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__4/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__4/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__4/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__5/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__5/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__5/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__5/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__6/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__6/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__6/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__6/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__7/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__7/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__7/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__7/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__8/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__8/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__8/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__8/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__9/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__9/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_lSetIpushReg1_inferred__9/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_lSetIpushReg1_inferred__9/i__carry__1_O_UNCONNECTED ;

  design_1_AXI_ZmodADC1410_1_0_AXI_ZmodADC1410_v1_0_S00_AXI AXI_ZmodADC1410_v1_0_S00_AXI_inst
       (.CO(lSetIpushReg111_out),
        .DI({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_60,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_61,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_62}),
        .E(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_116),
        .Q(sTransferLength[12:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_95,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_96,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_97,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_98}),
        .SR(p_0_in__0),
        .dout(lSPI_CmdRx),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .lAdcSPI_Idle(lAdcSPI_Idle),
        .lAxiArreadyLoc_reg_0(s00_lAxiArready),
        .lAxiAwreadyLoc_reg_0(s00_lAxiAwreadyLoc),
        .lAxiRvalidLoc_reg_0(lAxiRvalidLoc_reg),
        .lAxiWreadyLoc_reg_0(s00_lAxiWready),
        .lBufferFull(lBufferFull),
        .lRegRstR(lRegRstR),
        .lRegRstR_reg(lSetIpushReg023_out),
        .lRegRstR_reg_0(lSetIpushReg021_out),
        .lRegRstR_reg_1(lSetIpushReg019_out),
        .lRegRstR_reg_2(lSetIpushReg017_out),
        .lRegRstR_reg_3(lSetIpushReg015_out),
        .lRegRstR_reg_4(lSetIpushReg013_out),
        .lRegRstR_reg_5(lSetIpushReg011_out),
        .lRegRstR_reg_6(lSetIpushReg09_out),
        .lRegRstR_reg_7(lSetIpushReg03_out),
        .lRegRstR_reg_8(lSetIpushReg0),
        .lRegRstR_reg_9(lSetIpushReg05_out),
        .\lRegistersR_reg[0][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_175,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_176,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_177,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_178}),
        .\lRegistersR_reg[0][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_179,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_180,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_181}),
        .\lRegistersR_reg[0][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_171,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_172,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_173,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_174}),
        .\lRegistersR_reg[10][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_494,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_495,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_496,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_497}),
        .\lRegistersR_reg[10][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_498,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_499,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_500}),
        .\lRegistersR_reg[10][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_458,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_459,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_460,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_461}),
        .\lRegistersR_reg[11][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_537,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_538,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_539,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_540}),
        .\lRegistersR_reg[11][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_541,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_542,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_543}),
        .\lRegistersR_reg[11][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_501,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_502,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_503,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_504}),
        .\lRegistersR_reg[12][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_580,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_581,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_582,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_583}),
        .\lRegistersR_reg[12][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_584,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_585,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_586}),
        .\lRegistersR_reg[12][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_544,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_545,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_546,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_547}),
        .\lRegistersR_reg[1][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_186,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_187,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_188}),
        .\lRegistersR_reg[1][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_182,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_183,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_184,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_185}),
        .\lRegistersR_reg[2][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_225,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_226,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_227,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_228}),
        .\lRegistersR_reg[2][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_229,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_230,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_231}),
        .\lRegistersR_reg[2][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_189,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_190,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_191,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_192}),
        .\lRegistersR_reg[3][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_164,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_165,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_166,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_167}),
        .\lRegistersR_reg[3][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_168,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_169,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_170}),
        .\lRegistersR_reg[3][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_128,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_129,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_130,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_131}),
        .\lRegistersR_reg[4][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_236,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_237,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_238,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_239}),
        .\lRegistersR_reg[4][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_240,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_241,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_242}),
        .\lRegistersR_reg[4][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_232,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_233,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_234,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_235}),
        .\lRegistersR_reg[5][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_279,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_280,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_281,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_282}),
        .\lRegistersR_reg[5][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_283,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_284,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_285}),
        .\lRegistersR_reg[5][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_243,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_244,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_245,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_246}),
        .\lRegistersR_reg[6][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_322,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_323,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_324,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_325}),
        .\lRegistersR_reg[6][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_326,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_327,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_328}),
        .\lRegistersR_reg[6][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_286,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_287,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_288,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_289}),
        .\lRegistersR_reg[7][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_365,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_366,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_367,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_368}),
        .\lRegistersR_reg[7][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_369,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_370,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_371}),
        .\lRegistersR_reg[7][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_329,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_330,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_331,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_332}),
        .\lRegistersR_reg[8][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_408,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_409,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_410,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_411}),
        .\lRegistersR_reg[8][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_412,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_413,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_414}),
        .\lRegistersR_reg[8][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_372,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_373,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_374,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_375}),
        .\lRegistersR_reg[9][21] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_451,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_452,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_453,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_454}),
        .\lRegistersR_reg[9][30] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_455,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_456,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_457}),
        .\lRegistersR_reg[9][9] ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_415,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_416,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_417,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_418}),
        .\lRegisters[0]_0 (\lRegisters[0]_0 ),
        .\lRegisters[1]_1 ({\lRegisters[1]_1 [22:21],\lRegisters[1]_1 [16:2],\lRegisters[1]_1 [0]}),
        .lRst_n(lRst_n),
        .lSetIpushReg1_carry__1(\lRegistersR_reg[3]_23 ),
        .\lSetIpushReg1_inferred__0/i__carry__1 (\lRegistersR_reg[0]_24 ),
        .\lSetIpushReg1_inferred__1/i___0_carry__0 ({\lRegistersR_reg[1]_25 [22:21],\lRegistersR_reg[1]_25 [16:2],\lRegistersR_reg[1]_25 [0]}),
        .\lSetIpushReg1_inferred__10/i__carry__1 (\lRegistersR_reg[11]_34 ),
        .\lSetIpushReg1_inferred__11/i__carry__1 (\lRegistersR_reg[12]_35 ),
        .\lSetIpushReg1_inferred__2/i__carry__1 (\lRegistersR_reg[2]_26 ),
        .\lSetIpushReg1_inferred__3/i__carry__1 (\lRegistersR_reg[4]_27 ),
        .\lSetIpushReg1_inferred__4/i__carry__1 (\lRegistersR_reg[5]_28 ),
        .\lSetIpushReg1_inferred__5/i__carry__1 (\lRegistersR_reg[6]_29 ),
        .\lSetIpushReg1_inferred__6/i__carry__1 (\lRegistersR_reg[7]_30 ),
        .\lSetIpushReg1_inferred__7/i__carry__1 (\lRegistersR_reg[8]_31 ),
        .\lSetIpushReg1_inferred__8/i__carry__1 (\lRegistersR_reg[9]_32 ),
        .\lSetIpushReg1_inferred__9/i__carry__1 (\lRegistersR_reg[10]_33 ),
        .\lSetIpushReg_reg[0] (lSetIpushReg1),
        .\lSetIpushReg_reg[0]_0 (\lSetIpushReg_reg_n_0_[0] ),
        .\lSetIpushReg_reg[10] (lSetIpushReg18_out),
        .\lSetIpushReg_reg[11] (lSetIpushReg19_out),
        .\lSetIpushReg_reg[12] (lSetIpushReg110_out),
        .\lSetIpushReg_reg[13] ({iPush12_in,iPush11_in,iPush10_in,iPush9_in,iPush8_in,iPush7_in,iPush6_in,iPush5_in,iPush4_in,iPush3_in,iPush2_in,iPush1_in,iPush0_in,\lRstIpushReg_reg_n_0_[0] }),
        .\lSetIpushReg_reg[13]_0 (\lSetIpushReg_reg_n_0_[13] ),
        .\lSetIpushReg_reg[1] (lSetIpushReg10_out),
        .\lSetIpushReg_reg[2] (lSetIpushReg112_out),
        .\lSetIpushReg_reg[3] (lSetIpushReg11_out),
        .\lSetIpushReg_reg[4] (lSetIpushReg12_out),
        .\lSetIpushReg_reg[5] (lSetIpushReg13_out),
        .\lSetIpushReg_reg[6] (lSetIpushReg14_out),
        .\lSetIpushReg_reg[7] (lSetIpushReg15_out),
        .\lSetIpushReg_reg[8] (lSetIpushReg16_out),
        .\lSetIpushReg_reg[9] (lSetIpushReg17_out),
        .lSetStop(lSetStop),
        .\lSlvReg0_reg[31]_0 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_59),
        .\lSlvReg0_reg[31]_1 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_99),
        .\lSlvReg0_reg[31]_10 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_108),
        .\lSlvReg0_reg[31]_11 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_109),
        .\lSlvReg0_reg[31]_12 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_110),
        .\lSlvReg0_reg[31]_13 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_111),
        .\lSlvReg0_reg[31]_14 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_112),
        .\lSlvReg0_reg[31]_2 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_100),
        .\lSlvReg0_reg[31]_3 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_101),
        .\lSlvReg0_reg[31]_4 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_102),
        .\lSlvReg0_reg[31]_5 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_103),
        .\lSlvReg0_reg[31]_6 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_104),
        .\lSlvReg0_reg[31]_7 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_105),
        .\lSlvReg0_reg[31]_8 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_106),
        .\lSlvReg0_reg[31]_9 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_107),
        .\lSlvReg0_reg[3]_0 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_629),
        .\lSlvReg10_reg[31]_0 (\lRegisters[6]_6 ),
        .lSlvReg1125_out__0(lSlvReg1125_out__0),
        .\lSlvReg11_reg[31]_0 (\lRegisters[7]_7 ),
        .\lSlvReg12_reg[31]_0 (\lRegisters[8]_8 ),
        .\lSlvReg13_reg[31]_0 (\lRegisters[9]_9 ),
        .\lSlvReg14_reg[31]_0 (\lRegisters[10]_10 ),
        .\lSlvReg15_reg[31]_0 (\lRegisters[11]_11 ),
        .\lSlvReg16_reg[31]_0 (\lRegisters[12]_12 ),
        .\lSlvReg1_reg[16]_0 (lSPI_CmdRxCount),
        .\lSlvReg1_reg[9]_0 (lSPI_CmdTxCount),
        .\lSlvReg3_reg[23]_0 (lReg3Rd),
        .\lSlvReg5_reg[31]_0 (\lRegisters[2]_2 ),
        .\lSlvReg7_reg[31]_0 (\lRegisters[3]_3 ),
        .\lSlvReg8_reg[10]_0 ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_621,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_622,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_623,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_624}),
        .\lSlvReg8_reg[11]_0 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_612),
        .\lSlvReg8_reg[11]_1 ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_625,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_626,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_627,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_628}),
        .\lSlvReg8_reg[12]_0 (neqOp0_out),
        .\lSlvReg8_reg[12]_1 (eqOp4_out),
        .\lSlvReg8_reg[12]_2 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_611),
        .\lSlvReg8_reg[31]_0 (\lRegisters[4]_4 ),
        .\lSlvReg8_reg[6]_0 ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_613,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_614,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_615,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_616}),
        .\lSlvReg8_reg[7]_0 ({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_617,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_618,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_619,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_620}),
        .\lSlvReg9_reg[31]_0 (\lRegisters[5]_5 ),
        .lTxDoneSet(lTxDoneSet),
        .lTxDoneSetR(lTxDoneSetR),
        .lTxFifoRdEn(lTxFifoRdEn),
        .minusOp(minusOp),
        .\minusOp_inferred__1/i__carry__2 (sAddrTrigger),
        .p_14_in(p_14_in),
        .p_15_in(p_15_in),
        .p_16_in(p_16_in),
        .p_17_in(p_17_in),
        .p_18_in(p_18_in),
        .p_19_in(p_19_in),
        .p_20_in(p_20_in),
        .p_21_in(p_21_in),
        .p_22_in(p_22_in),
        .p_23_in(p_23_in),
        .p_24_in(p_24_in),
        .p_25_in(p_25_in),
        .rd_en(lSPI_RxFifoRdEn),
        .s00_axi_aclk(s00_axi_aclk),
        .s00_axi_arvalid(s00_axi_arvalid),
        .s00_axi_awvalid(s00_axi_awvalid),
        .s00_axi_bready(s00_axi_bready),
        .s00_axi_rready(s00_axi_rready),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wstrb(s00_axi_wstrb),
        .s00_axi_wvalid(s00_axi_wvalid),
        .s00_lAxiAraddrLoc(s00_lAxiAraddrLoc),
        .s00_lAxiAwaddrLoc(s00_lAxiAwaddrLoc),
        .s00_lAxiBvalidLoc(s00_lAxiBvalidLoc),
        .s00_lAxiRdata(s00_lAxiRdata),
        .sInitDone_n(sInitDone_n),
        .\sRegisters_reg[3][4] (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_113),
        .sTriggerCondition23_in(sTriggerCondition23_in),
        .wr_en(lSPI_TxFifoWrEn));
  design_1_AXI_ZmodADC1410_1_0_Circular_Buffer Circular_Buffer_inst
       (.AxiStreamClk(AxiStreamClk),
        .D(\lRegisters[1]_1 [21]),
        .DI({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_60,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_61,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_62}),
        .\FSM_sequential_sCurrentState_reg[0]_i_2_0 ({sTrigLevel,sTrigRisingFalling,sTrigMode,\sRegisters_reg_n_0_[3][0] }),
        .\FSM_sequential_sCurrentState_reg[1]_0 (sAqRunStop),
        .\FSM_sequential_sCurrentState_reg[1]_1 (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_113),
        .\FSM_sequential_sCurrentState_reg[3]_0 (sCurrentState0),
        .Q(sAddrTrigger),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_95,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_96,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_97,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_98}),
        .SR(sRstPushTxFifoEmpty),
        .SysClk(SysClk),
        .\eqOp_inferred__6/i__carry__0_0 (sTransferLength),
        .i__carry__0_i_1__0_0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_612),
        .i__carry__0_i_1__0_1(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_611),
        .i__carry_i_2__0_0({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_621,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_622,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_623,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_624}),
        .i__carry_i_2__0_1({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_625,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_626,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_627,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_628}),
        .i__carry_i_3__0_0({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_613,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_614,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_615,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_616}),
        .i__carry_i_3__0_1({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_617,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_618,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_619,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_620}),
        .lBufferFull(lBufferFull),
        .lSetStop(lSetStop),
        .lSlvReg1125_out__0(lSlvReg1125_out__0),
        .\minusOp_inferred__1/i__carry__2_0 (\lRegisters[4]_4 [13:0]),
        .out(xsRst_n),
        .s00_axi_aclk(s00_axi_aclk),
        .\sAddrTrigger_reg[0]_0 (eqOp4_out),
        .\sAddrTrigger_reg[0]_1 (neqOp0_out),
        .sCh1In(sCh1In),
        .sCh2In(sCh2In),
        .sInitDone_n(sInitDone_n),
        .sTriggerCondition23_in(sTriggerCondition23_in),
        .s_axis_s2mm_tdata(s_axis_s2mm_tdata),
        .s_axis_s2mm_tkeep(s_axis_s2mm_tkeep),
        .s_axis_s2mm_tlast(s_axis_s2mm_tlast),
        .s_axis_s2mm_tready(s_axis_s2mm_tready),
        .xsBufEmpty_reg_0(Circular_Buffer_inst_n_1),
        .\xsBufferFullAddr_reg[13]_0 ({\xsTransferLength_reg_n_0_[13] ,\xsTransferLength_reg_n_0_[12] ,\xsTransferLength_reg_n_0_[11] ,\xsTransferLength_reg_n_0_[10] ,\xsTransferLength_reg_n_0_[9] ,\xsTransferLength_reg_n_0_[8] ,\xsTransferLength_reg_n_0_[7] ,\xsTransferLength_reg_n_0_[6] ,\xsTransferLength_reg_n_0_[5] ,\xsTransferLength_reg_n_0_[4] ,\xsTransferLength_reg_n_0_[3] ,\xsTransferLength_reg_n_0_[2] ,\xsTransferLength_reg_n_0_[1] ,\xsTransferLength_reg_n_0_[0] }),
        .xsS2MM_TvalidLoc_reg_0(s_axis_s2mm_tvalid),
        .\xsTdataAux_reg[31]_0 (InstSaxiResetHandshake_n_1),
        .xsTvalidDisable_reg_0(InstSaxiResetHandshake_n_2));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_20 
       (.I0(sTransferLength[12]),
        .O(\FSM_sequential_sCurrentState[0]_i_20_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_21 
       (.I0(sTransferLength[11]),
        .O(\FSM_sequential_sCurrentState[0]_i_21_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_22 
       (.I0(sTransferLength[10]),
        .O(\FSM_sequential_sCurrentState[0]_i_22_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_23 
       (.I0(sTransferLength[9]),
        .O(\FSM_sequential_sCurrentState[0]_i_23_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_24 
       (.I0(sTransferLength[13]),
        .O(\FSM_sequential_sCurrentState[0]_i_24_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_25 
       (.I0(sTransferLength[8]),
        .O(\FSM_sequential_sCurrentState[0]_i_25_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_26 
       (.I0(sTransferLength[7]),
        .O(\FSM_sequential_sCurrentState[0]_i_26_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_27 
       (.I0(sTransferLength[6]),
        .O(\FSM_sequential_sCurrentState[0]_i_27_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_28 
       (.I0(sTransferLength[5]),
        .O(\FSM_sequential_sCurrentState[0]_i_28_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_29 
       (.I0(sTransferLength[4]),
        .O(\FSM_sequential_sCurrentState[0]_i_29_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_30 
       (.I0(sTransferLength[3]),
        .O(\FSM_sequential_sCurrentState[0]_i_30_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_31 
       (.I0(sTransferLength[2]),
        .O(\FSM_sequential_sCurrentState[0]_i_31_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_sCurrentState[0]_i_32 
       (.I0(sTransferLength[1]),
        .O(\FSM_sequential_sCurrentState[0]_i_32_n_0 ));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_16 
       (.CI(\FSM_sequential_sCurrentState_reg[0]_i_18_n_0 ),
        .CO({\FSM_sequential_sCurrentState_reg[0]_i_16_n_0 ,\FSM_sequential_sCurrentState_reg[0]_i_16_n_1 ,\FSM_sequential_sCurrentState_reg[0]_i_16_n_2 ,\FSM_sequential_sCurrentState_reg[0]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI(sTransferLength[12:9]),
        .O(minusOp[12:9]),
        .S({\FSM_sequential_sCurrentState[0]_i_20_n_0 ,\FSM_sequential_sCurrentState[0]_i_21_n_0 ,\FSM_sequential_sCurrentState[0]_i_22_n_0 ,\FSM_sequential_sCurrentState[0]_i_23_n_0 }));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_17 
       (.CI(\FSM_sequential_sCurrentState_reg[0]_i_16_n_0 ),
        .CO(\NLW_FSM_sequential_sCurrentState_reg[0]_i_17_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_FSM_sequential_sCurrentState_reg[0]_i_17_O_UNCONNECTED [3:1],minusOp[13]}),
        .S({1'b0,1'b0,1'b0,\FSM_sequential_sCurrentState[0]_i_24_n_0 }));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_18 
       (.CI(\FSM_sequential_sCurrentState_reg[0]_i_19_n_0 ),
        .CO({\FSM_sequential_sCurrentState_reg[0]_i_18_n_0 ,\FSM_sequential_sCurrentState_reg[0]_i_18_n_1 ,\FSM_sequential_sCurrentState_reg[0]_i_18_n_2 ,\FSM_sequential_sCurrentState_reg[0]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI(sTransferLength[8:5]),
        .O(minusOp[8:5]),
        .S({\FSM_sequential_sCurrentState[0]_i_25_n_0 ,\FSM_sequential_sCurrentState[0]_i_26_n_0 ,\FSM_sequential_sCurrentState[0]_i_27_n_0 ,\FSM_sequential_sCurrentState[0]_i_28_n_0 }));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_19 
       (.CI(1'b0),
        .CO({\FSM_sequential_sCurrentState_reg[0]_i_19_n_0 ,\FSM_sequential_sCurrentState_reg[0]_i_19_n_1 ,\FSM_sequential_sCurrentState_reg[0]_i_19_n_2 ,\FSM_sequential_sCurrentState_reg[0]_i_19_n_3 }),
        .CYINIT(sTransferLength[0]),
        .DI(sTransferLength[4:1]),
        .O(minusOp[4:1]),
        .S({\FSM_sequential_sCurrentState[0]_i_29_n_0 ,\FSM_sequential_sCurrentState[0]_i_30_n_0 ,\FSM_sequential_sCurrentState[0]_i_31_n_0 ,\FSM_sequential_sCurrentState[0]_i_32_n_0 }));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4 \GenerateHanshake[0].InstSyncHandshake 
       (.D(p_26_out[0]),
        .E(\GenerateHanshake[0].InstSyncHandshake_n_0 ),
        .Q(\lRstIpushReg_reg_n_0_[0] ),
        .SysClk(SysClk),
        .\iData_int_reg[5]_0 ({\lRegistersDin_reg[0]_22 [5:4],\lRegistersDin_reg[0]_22 [2:1]}),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\lRstIpushReg_reg[0] (\lSetIpushReg_reg_n_0_[0] ),
        .\oData_reg[5]_0 ({\GenerateHanshake[0].InstSyncHandshake_n_2 ,\GenerateHanshake[0].InstSyncHandshake_n_3 ,\GenerateHanshake[0].InstSyncHandshake_n_4 ,\GenerateHanshake[0].InstSyncHandshake_n_5 }),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_0 \GenerateHanshake[10].InstSyncHandshake 
       (.D(p_26_out[10]),
        .E(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .Q(iPush9_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[10]_19 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[10].InstSyncHandshake_n_2 ,\GenerateHanshake[10].InstSyncHandshake_n_3 ,\GenerateHanshake[10].InstSyncHandshake_n_4 ,\GenerateHanshake[10].InstSyncHandshake_n_5 ,\GenerateHanshake[10].InstSyncHandshake_n_6 ,\GenerateHanshake[10].InstSyncHandshake_n_7 ,\GenerateHanshake[10].InstSyncHandshake_n_8 ,\GenerateHanshake[10].InstSyncHandshake_n_9 ,\GenerateHanshake[10].InstSyncHandshake_n_10 ,\GenerateHanshake[10].InstSyncHandshake_n_11 ,\GenerateHanshake[10].InstSyncHandshake_n_12 ,\GenerateHanshake[10].InstSyncHandshake_n_13 ,\GenerateHanshake[10].InstSyncHandshake_n_14 ,\GenerateHanshake[10].InstSyncHandshake_n_15 ,\GenerateHanshake[10].InstSyncHandshake_n_16 ,\GenerateHanshake[10].InstSyncHandshake_n_17 ,\GenerateHanshake[10].InstSyncHandshake_n_18 ,\GenerateHanshake[10].InstSyncHandshake_n_19 }),
        .p_23_in(p_23_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_1 \GenerateHanshake[11].InstSyncHandshake 
       (.D(p_26_out[11]),
        .E(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .Q(iPush10_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[11]_20 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[11].InstSyncHandshake_n_2 ,\GenerateHanshake[11].InstSyncHandshake_n_3 ,\GenerateHanshake[11].InstSyncHandshake_n_4 ,\GenerateHanshake[11].InstSyncHandshake_n_5 ,\GenerateHanshake[11].InstSyncHandshake_n_6 ,\GenerateHanshake[11].InstSyncHandshake_n_7 ,\GenerateHanshake[11].InstSyncHandshake_n_8 ,\GenerateHanshake[11].InstSyncHandshake_n_9 ,\GenerateHanshake[11].InstSyncHandshake_n_10 ,\GenerateHanshake[11].InstSyncHandshake_n_11 ,\GenerateHanshake[11].InstSyncHandshake_n_12 ,\GenerateHanshake[11].InstSyncHandshake_n_13 ,\GenerateHanshake[11].InstSyncHandshake_n_14 ,\GenerateHanshake[11].InstSyncHandshake_n_15 ,\GenerateHanshake[11].InstSyncHandshake_n_16 ,\GenerateHanshake[11].InstSyncHandshake_n_17 ,\GenerateHanshake[11].InstSyncHandshake_n_18 ,\GenerateHanshake[11].InstSyncHandshake_n_19 }),
        .p_24_in(p_24_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_2 \GenerateHanshake[12].InstSyncHandshake 
       (.D(p_26_out[12]),
        .E(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .Q(iPush11_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[12]_21 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[12].InstSyncHandshake_n_2 ,\GenerateHanshake[12].InstSyncHandshake_n_3 ,\GenerateHanshake[12].InstSyncHandshake_n_4 ,\GenerateHanshake[12].InstSyncHandshake_n_5 ,\GenerateHanshake[12].InstSyncHandshake_n_6 ,\GenerateHanshake[12].InstSyncHandshake_n_7 ,\GenerateHanshake[12].InstSyncHandshake_n_8 ,\GenerateHanshake[12].InstSyncHandshake_n_9 ,\GenerateHanshake[12].InstSyncHandshake_n_10 ,\GenerateHanshake[12].InstSyncHandshake_n_11 ,\GenerateHanshake[12].InstSyncHandshake_n_12 ,\GenerateHanshake[12].InstSyncHandshake_n_13 ,\GenerateHanshake[12].InstSyncHandshake_n_14 ,\GenerateHanshake[12].InstSyncHandshake_n_15 ,\GenerateHanshake[12].InstSyncHandshake_n_16 ,\GenerateHanshake[12].InstSyncHandshake_n_17 ,\GenerateHanshake[12].InstSyncHandshake_n_18 ,\GenerateHanshake[12].InstSyncHandshake_n_19 }),
        .p_25_in(p_25_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_3 \GenerateHanshake[13].InstSyncHandshake 
       (.D(p_26_out[13]),
        .Q(iPush12_in),
        .SysClk(SysClk),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\lRstIpushReg_reg[13] (\lSetIpushReg_reg_n_0_[13] ),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_4 \GenerateHanshake[1].InstSyncHandshake 
       (.D(p_26_out[1]),
        .Q(iPush0_in),
        .SysClk(SysClk),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .p_14_in(p_14_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_5 \GenerateHanshake[2].InstSyncHandshake 
       (.D(p_26_out[2]),
        .E(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .Q(iPush1_in),
        .SysClk(SysClk),
        .\iData_int_reg[15]_0 (\lRegistersDin_reg[2]_36 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[15]_0 ({\GenerateHanshake[2].InstSyncHandshake_n_2 ,\GenerateHanshake[2].InstSyncHandshake_n_3 ,\GenerateHanshake[2].InstSyncHandshake_n_4 ,\GenerateHanshake[2].InstSyncHandshake_n_5 ,\GenerateHanshake[2].InstSyncHandshake_n_6 ,\GenerateHanshake[2].InstSyncHandshake_n_7 ,\GenerateHanshake[2].InstSyncHandshake_n_8 ,\GenerateHanshake[2].InstSyncHandshake_n_9 ,\GenerateHanshake[2].InstSyncHandshake_n_10 ,\GenerateHanshake[2].InstSyncHandshake_n_11 ,\GenerateHanshake[2].InstSyncHandshake_n_12 ,\GenerateHanshake[2].InstSyncHandshake_n_13 ,\GenerateHanshake[2].InstSyncHandshake_n_14 ,\GenerateHanshake[2].InstSyncHandshake_n_15 }),
        .p_15_in(p_15_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_6 \GenerateHanshake[3].InstSyncHandshake 
       (.D(p_26_out[3]),
        .E(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .Q(iPush2_in),
        .SysClk(SysClk),
        .\iData_int_reg[26]_0 ({\lRegistersDin_reg[3]_13 [26:2],\lRegistersDin_reg[3]_13 [0]}),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[26]_0 ({\GenerateHanshake[3].InstSyncHandshake_n_2 ,\GenerateHanshake[3].InstSyncHandshake_n_3 ,\GenerateHanshake[3].InstSyncHandshake_n_4 ,\GenerateHanshake[3].InstSyncHandshake_n_5 ,\GenerateHanshake[3].InstSyncHandshake_n_6 ,\GenerateHanshake[3].InstSyncHandshake_n_7 ,\GenerateHanshake[3].InstSyncHandshake_n_8 ,\GenerateHanshake[3].InstSyncHandshake_n_9 ,\GenerateHanshake[3].InstSyncHandshake_n_10 ,\GenerateHanshake[3].InstSyncHandshake_n_11 ,\GenerateHanshake[3].InstSyncHandshake_n_12 ,\GenerateHanshake[3].InstSyncHandshake_n_13 ,\GenerateHanshake[3].InstSyncHandshake_n_14 ,\GenerateHanshake[3].InstSyncHandshake_n_15 ,\GenerateHanshake[3].InstSyncHandshake_n_16 ,\GenerateHanshake[3].InstSyncHandshake_n_17 ,\GenerateHanshake[3].InstSyncHandshake_n_18 ,\GenerateHanshake[3].InstSyncHandshake_n_19 ,\GenerateHanshake[3].InstSyncHandshake_n_20 ,\GenerateHanshake[3].InstSyncHandshake_n_21 ,\GenerateHanshake[3].InstSyncHandshake_n_22 ,\GenerateHanshake[3].InstSyncHandshake_n_23 ,\GenerateHanshake[3].InstSyncHandshake_n_24 ,\GenerateHanshake[3].InstSyncHandshake_n_25 ,\GenerateHanshake[3].InstSyncHandshake_n_26 ,\GenerateHanshake[3].InstSyncHandshake_n_27 }),
        .p_16_in(p_16_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_7 \GenerateHanshake[4].InstSyncHandshake 
       (.D(p_26_out[4]),
        .Q(iPush3_in),
        .SysClk(SysClk),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .p_17_in(p_17_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_8 \GenerateHanshake[5].InstSyncHandshake 
       (.D(p_26_out[5]),
        .E(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .Q(iPush4_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[5]_14 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[5].InstSyncHandshake_n_2 ,\GenerateHanshake[5].InstSyncHandshake_n_3 ,\GenerateHanshake[5].InstSyncHandshake_n_4 ,\GenerateHanshake[5].InstSyncHandshake_n_5 ,\GenerateHanshake[5].InstSyncHandshake_n_6 ,\GenerateHanshake[5].InstSyncHandshake_n_7 ,\GenerateHanshake[5].InstSyncHandshake_n_8 ,\GenerateHanshake[5].InstSyncHandshake_n_9 ,\GenerateHanshake[5].InstSyncHandshake_n_10 ,\GenerateHanshake[5].InstSyncHandshake_n_11 ,\GenerateHanshake[5].InstSyncHandshake_n_12 ,\GenerateHanshake[5].InstSyncHandshake_n_13 ,\GenerateHanshake[5].InstSyncHandshake_n_14 ,\GenerateHanshake[5].InstSyncHandshake_n_15 ,\GenerateHanshake[5].InstSyncHandshake_n_16 ,\GenerateHanshake[5].InstSyncHandshake_n_17 ,\GenerateHanshake[5].InstSyncHandshake_n_18 ,\GenerateHanshake[5].InstSyncHandshake_n_19 }),
        .p_18_in(p_18_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_9 \GenerateHanshake[6].InstSyncHandshake 
       (.D(p_26_out[6]),
        .E(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .Q(iPush5_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[6]_15 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[6].InstSyncHandshake_n_2 ,\GenerateHanshake[6].InstSyncHandshake_n_3 ,\GenerateHanshake[6].InstSyncHandshake_n_4 ,\GenerateHanshake[6].InstSyncHandshake_n_5 ,\GenerateHanshake[6].InstSyncHandshake_n_6 ,\GenerateHanshake[6].InstSyncHandshake_n_7 ,\GenerateHanshake[6].InstSyncHandshake_n_8 ,\GenerateHanshake[6].InstSyncHandshake_n_9 ,\GenerateHanshake[6].InstSyncHandshake_n_10 ,\GenerateHanshake[6].InstSyncHandshake_n_11 ,\GenerateHanshake[6].InstSyncHandshake_n_12 ,\GenerateHanshake[6].InstSyncHandshake_n_13 ,\GenerateHanshake[6].InstSyncHandshake_n_14 ,\GenerateHanshake[6].InstSyncHandshake_n_15 ,\GenerateHanshake[6].InstSyncHandshake_n_16 ,\GenerateHanshake[6].InstSyncHandshake_n_17 ,\GenerateHanshake[6].InstSyncHandshake_n_18 ,\GenerateHanshake[6].InstSyncHandshake_n_19 }),
        .p_19_in(p_19_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_10 \GenerateHanshake[7].InstSyncHandshake 
       (.D(p_26_out[7]),
        .E(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .Q(iPush6_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[7]_16 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[7].InstSyncHandshake_n_2 ,\GenerateHanshake[7].InstSyncHandshake_n_3 ,\GenerateHanshake[7].InstSyncHandshake_n_4 ,\GenerateHanshake[7].InstSyncHandshake_n_5 ,\GenerateHanshake[7].InstSyncHandshake_n_6 ,\GenerateHanshake[7].InstSyncHandshake_n_7 ,\GenerateHanshake[7].InstSyncHandshake_n_8 ,\GenerateHanshake[7].InstSyncHandshake_n_9 ,\GenerateHanshake[7].InstSyncHandshake_n_10 ,\GenerateHanshake[7].InstSyncHandshake_n_11 ,\GenerateHanshake[7].InstSyncHandshake_n_12 ,\GenerateHanshake[7].InstSyncHandshake_n_13 ,\GenerateHanshake[7].InstSyncHandshake_n_14 ,\GenerateHanshake[7].InstSyncHandshake_n_15 ,\GenerateHanshake[7].InstSyncHandshake_n_16 ,\GenerateHanshake[7].InstSyncHandshake_n_17 ,\GenerateHanshake[7].InstSyncHandshake_n_18 ,\GenerateHanshake[7].InstSyncHandshake_n_19 }),
        .p_20_in(p_20_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_11 \GenerateHanshake[8].InstSyncHandshake 
       (.D(p_26_out[8]),
        .E(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .Q(iPush7_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[8]_17 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[8].InstSyncHandshake_n_2 ,\GenerateHanshake[8].InstSyncHandshake_n_3 ,\GenerateHanshake[8].InstSyncHandshake_n_4 ,\GenerateHanshake[8].InstSyncHandshake_n_5 ,\GenerateHanshake[8].InstSyncHandshake_n_6 ,\GenerateHanshake[8].InstSyncHandshake_n_7 ,\GenerateHanshake[8].InstSyncHandshake_n_8 ,\GenerateHanshake[8].InstSyncHandshake_n_9 ,\GenerateHanshake[8].InstSyncHandshake_n_10 ,\GenerateHanshake[8].InstSyncHandshake_n_11 ,\GenerateHanshake[8].InstSyncHandshake_n_12 ,\GenerateHanshake[8].InstSyncHandshake_n_13 ,\GenerateHanshake[8].InstSyncHandshake_n_14 ,\GenerateHanshake[8].InstSyncHandshake_n_15 ,\GenerateHanshake[8].InstSyncHandshake_n_16 ,\GenerateHanshake[8].InstSyncHandshake_n_17 ,\GenerateHanshake[8].InstSyncHandshake_n_18 ,\GenerateHanshake[8].InstSyncHandshake_n_19 }),
        .p_21_in(p_21_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_12 \GenerateHanshake[9].InstSyncHandshake 
       (.D(p_26_out[9]),
        .E(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .Q(iPush8_in),
        .SysClk(SysClk),
        .\iData_int_reg[17]_0 (\lRegistersDin_reg[9]_18 ),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[17]_0 ({\GenerateHanshake[9].InstSyncHandshake_n_2 ,\GenerateHanshake[9].InstSyncHandshake_n_3 ,\GenerateHanshake[9].InstSyncHandshake_n_4 ,\GenerateHanshake[9].InstSyncHandshake_n_5 ,\GenerateHanshake[9].InstSyncHandshake_n_6 ,\GenerateHanshake[9].InstSyncHandshake_n_7 ,\GenerateHanshake[9].InstSyncHandshake_n_8 ,\GenerateHanshake[9].InstSyncHandshake_n_9 ,\GenerateHanshake[9].InstSyncHandshake_n_10 ,\GenerateHanshake[9].InstSyncHandshake_n_11 ,\GenerateHanshake[9].InstSyncHandshake_n_12 ,\GenerateHanshake[9].InstSyncHandshake_n_13 ,\GenerateHanshake[9].InstSyncHandshake_n_14 ,\GenerateHanshake[9].InstSyncHandshake_n_15 ,\GenerateHanshake[9].InstSyncHandshake_n_16 ,\GenerateHanshake[9].InstSyncHandshake_n_17 ,\GenerateHanshake[9].InstSyncHandshake_n_18 ,\GenerateHanshake[9].InstSyncHandshake_n_19 }),
        .p_22_in(p_22_in),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData InstIdleHandshake
       (.SysClk(SysClk),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .\oData_reg[0]_0 (InstIdleHandshake_n_1),
        .s00_axi_aclk(s00_axi_aclk),
        .sAdcSPI_IdleDin(sAdcSPI_IdleDin),
        .sAdcSPI_IdlePush(sAdcSPI_IdlePush),
        .sAdcSPI_IdleRdy(sAdcSPI_IdleRdy));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge InstLaxiResetHandshake
       (.SR(sRstPushTxFifoEmpty),
        .SysClk(SysClk),
        .\oSyncStages_reg[0] (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_59),
        .sInitDone_n(sInitDone_n),
        .sInitDone_n_0(sCurrentState0),
        .sZmodControllerRst_n(sZmodControllerRst_n));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge_13 InstSaxiResetHandshake
       (.AxiStreamClk(AxiStreamClk),
        .SR(InstSaxiResetHandshake_n_1),
        .\oSyncStages_reg[0] (AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_59),
        .\oSyncStages_reg[1] (InstSaxiResetHandshake_n_2),
        .out(xsRst_n),
        .xsTvalidDisable_reg(Circular_Buffer_inst_n_1));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized1 InstStreamTLHandshake
       (.AxiStreamClk(AxiStreamClk),
        .D(\lRegisters[2]_2 [15:2]),
        .E(oValid),
        .Q(oData),
        .iRdy_reg_0(InstStreamTLHandshake_n_1),
        .in0(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_58),
        .lAdcSPI_Idle(lAdcSPI_Idle),
        .lAdcSPI_Idle_reg(InstStreamTLHandshake_n_2),
        .lAdcSPI_Idle_reg_0(InstIdleHandshake_n_1),
        .lIpushTL(lIpushTL),
        .\lRegisters[0]_0 (\lRegisters[0]_0 [31]),
        .lRst_n(lRst_n),
        .lSetIpushTL(lSetIpushTL),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SPI_Adapter SPI_Adapter_inst
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (lReg3Rd),
        .E(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_116),
        .Q(lSPI_CmdTxCount),
        .SR(sRstPushTxFifoEmpty),
        .SysClk(SysClk),
        .dout(lSPI_CmdRx),
        .\lRegisters[0]_0 (\lRegisters[0]_0 [31]),
        .\lRxFifoCounter_reg[6]_0 (lSPI_CmdRxCount),
        .lTxDoneSet(lTxDoneSet),
        .lTxDoneSetR(lTxDoneSetR),
        .lTxFifoRdEn(lTxFifoRdEn),
        .rd_en(lSPI_RxFifoRdEn),
        .s00_axi_aclk(s00_axi_aclk),
        .sADC_SPI_CmdDone(sADC_SPI_CmdDone),
        .sSPI_RxDin(sSPI_RxDin),
        .sSPI_RxWrEn(sSPI_RxWrEn),
        .sSPI_TxDout(sSPI_TxDout),
        .sSPI_TxRdEn(sSPI_TxRdEn),
        .sSPI_TxRdEnRdy(sSPI_TxRdEnRdy),
        .sSPI_TxValid(sSPI_TxValid),
        .wr_en(lSPI_TxFifoWrEn));
  FDRE lAdcSPI_Idle_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(InstStreamTLHandshake_n_2),
        .Q(lAdcSPI_Idle),
        .R(1'b0));
  FDRE lIpushTL_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(InstStreamTLHandshake_n_1),
        .Q(lIpushTL),
        .R(1'b0));
  FDRE lIrqOut_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_629),
        .Q(lIrqOut),
        .R(1'b0));
  FDRE lRegRstR_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [31]),
        .Q(lRegRstR),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[0][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg0),
        .D(\lRegisters[0]_0 [1]),
        .Q(\lRegistersDin_reg[0]_22 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[0][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg0),
        .D(\lRegisters[0]_0 [2]),
        .Q(\lRegistersDin_reg[0]_22 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[0][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg0),
        .D(\lRegisters[0]_0 [4]),
        .Q(\lRegistersDin_reg[0]_22 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[0][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg0),
        .D(\lRegisters[0]_0 [5]),
        .Q(\lRegistersDin_reg[0]_22 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [0]),
        .Q(\lRegistersDin_reg[10]_19 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [10]),
        .Q(\lRegistersDin_reg[10]_19 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [11]),
        .Q(\lRegistersDin_reg[10]_19 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [12]),
        .Q(\lRegistersDin_reg[10]_19 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [13]),
        .Q(\lRegistersDin_reg[10]_19 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [14]),
        .Q(\lRegistersDin_reg[10]_19 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [15]),
        .Q(\lRegistersDin_reg[10]_19 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [16]),
        .Q(\lRegistersDin_reg[10]_19 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [17]),
        .Q(\lRegistersDin_reg[10]_19 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [1]),
        .Q(\lRegistersDin_reg[10]_19 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [2]),
        .Q(\lRegistersDin_reg[10]_19 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [3]),
        .Q(\lRegistersDin_reg[10]_19 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [4]),
        .Q(\lRegistersDin_reg[10]_19 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [5]),
        .Q(\lRegistersDin_reg[10]_19 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [6]),
        .Q(\lRegistersDin_reg[10]_19 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [7]),
        .Q(\lRegistersDin_reg[10]_19 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [8]),
        .Q(\lRegistersDin_reg[10]_19 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[10][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg019_out),
        .D(\lRegisters[10]_10 [9]),
        .Q(\lRegistersDin_reg[10]_19 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [0]),
        .Q(\lRegistersDin_reg[11]_20 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [10]),
        .Q(\lRegistersDin_reg[11]_20 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [11]),
        .Q(\lRegistersDin_reg[11]_20 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [12]),
        .Q(\lRegistersDin_reg[11]_20 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [13]),
        .Q(\lRegistersDin_reg[11]_20 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [14]),
        .Q(\lRegistersDin_reg[11]_20 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [15]),
        .Q(\lRegistersDin_reg[11]_20 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [16]),
        .Q(\lRegistersDin_reg[11]_20 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [17]),
        .Q(\lRegistersDin_reg[11]_20 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [1]),
        .Q(\lRegistersDin_reg[11]_20 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [2]),
        .Q(\lRegistersDin_reg[11]_20 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [3]),
        .Q(\lRegistersDin_reg[11]_20 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [4]),
        .Q(\lRegistersDin_reg[11]_20 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [5]),
        .Q(\lRegistersDin_reg[11]_20 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [6]),
        .Q(\lRegistersDin_reg[11]_20 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [7]),
        .Q(\lRegistersDin_reg[11]_20 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [8]),
        .Q(\lRegistersDin_reg[11]_20 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[11][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg021_out),
        .D(\lRegisters[11]_11 [9]),
        .Q(\lRegistersDin_reg[11]_20 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [0]),
        .Q(\lRegistersDin_reg[12]_21 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [10]),
        .Q(\lRegistersDin_reg[12]_21 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [11]),
        .Q(\lRegistersDin_reg[12]_21 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [12]),
        .Q(\lRegistersDin_reg[12]_21 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [13]),
        .Q(\lRegistersDin_reg[12]_21 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [14]),
        .Q(\lRegistersDin_reg[12]_21 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [15]),
        .Q(\lRegistersDin_reg[12]_21 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [16]),
        .Q(\lRegistersDin_reg[12]_21 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [17]),
        .Q(\lRegistersDin_reg[12]_21 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [1]),
        .Q(\lRegistersDin_reg[12]_21 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [2]),
        .Q(\lRegistersDin_reg[12]_21 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [3]),
        .Q(\lRegistersDin_reg[12]_21 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [4]),
        .Q(\lRegistersDin_reg[12]_21 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [5]),
        .Q(\lRegistersDin_reg[12]_21 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [6]),
        .Q(\lRegistersDin_reg[12]_21 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [7]),
        .Q(\lRegistersDin_reg[12]_21 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [8]),
        .Q(\lRegistersDin_reg[12]_21 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[12][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg023_out),
        .D(\lRegisters[12]_12 [9]),
        .Q(\lRegistersDin_reg[12]_21 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [10]),
        .Q(\lRegistersDin_reg[2]_36 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [11]),
        .Q(\lRegistersDin_reg[2]_36 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [12]),
        .Q(\lRegistersDin_reg[2]_36 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [13]),
        .Q(\lRegistersDin_reg[2]_36 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [14]),
        .Q(\lRegistersDin_reg[2]_36 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [15]),
        .Q(\lRegistersDin_reg[2]_36 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [2]),
        .Q(\lRegistersDin_reg[2]_36 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [3]),
        .Q(\lRegistersDin_reg[2]_36 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [4]),
        .Q(\lRegistersDin_reg[2]_36 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [5]),
        .Q(\lRegistersDin_reg[2]_36 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [6]),
        .Q(\lRegistersDin_reg[2]_36 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [7]),
        .Q(\lRegistersDin_reg[2]_36 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [8]),
        .Q(\lRegistersDin_reg[2]_36 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[2][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg03_out),
        .D(\lRegisters[2]_2 [9]),
        .Q(\lRegistersDin_reg[2]_36 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [0]),
        .Q(\lRegistersDin_reg[3]_13 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [10]),
        .Q(\lRegistersDin_reg[3]_13 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [11]),
        .Q(\lRegistersDin_reg[3]_13 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [12]),
        .Q(\lRegistersDin_reg[3]_13 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [13]),
        .Q(\lRegistersDin_reg[3]_13 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [14]),
        .Q(\lRegistersDin_reg[3]_13 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [15]),
        .Q(\lRegistersDin_reg[3]_13 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [16]),
        .Q(\lRegistersDin_reg[3]_13 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [17]),
        .Q(\lRegistersDin_reg[3]_13 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][18] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [18]),
        .Q(\lRegistersDin_reg[3]_13 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][19] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [19]),
        .Q(\lRegistersDin_reg[3]_13 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][20] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [20]),
        .Q(\lRegistersDin_reg[3]_13 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][21] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [21]),
        .Q(\lRegistersDin_reg[3]_13 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][22] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [22]),
        .Q(\lRegistersDin_reg[3]_13 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][23] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [23]),
        .Q(\lRegistersDin_reg[3]_13 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][24] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [24]),
        .Q(\lRegistersDin_reg[3]_13 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][25] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [25]),
        .Q(\lRegistersDin_reg[3]_13 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][26] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [26]),
        .Q(\lRegistersDin_reg[3]_13 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [2]),
        .Q(\lRegistersDin_reg[3]_13 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [3]),
        .Q(\lRegistersDin_reg[3]_13 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [4]),
        .Q(\lRegistersDin_reg[3]_13 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [5]),
        .Q(\lRegistersDin_reg[3]_13 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [6]),
        .Q(\lRegistersDin_reg[3]_13 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [7]),
        .Q(\lRegistersDin_reg[3]_13 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [8]),
        .Q(\lRegistersDin_reg[3]_13 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[3][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg05_out),
        .D(\lRegisters[3]_3 [9]),
        .Q(\lRegistersDin_reg[3]_13 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [0]),
        .Q(\lRegistersDin_reg[5]_14 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [10]),
        .Q(\lRegistersDin_reg[5]_14 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [11]),
        .Q(\lRegistersDin_reg[5]_14 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [12]),
        .Q(\lRegistersDin_reg[5]_14 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [13]),
        .Q(\lRegistersDin_reg[5]_14 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [14]),
        .Q(\lRegistersDin_reg[5]_14 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [15]),
        .Q(\lRegistersDin_reg[5]_14 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [16]),
        .Q(\lRegistersDin_reg[5]_14 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [17]),
        .Q(\lRegistersDin_reg[5]_14 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [1]),
        .Q(\lRegistersDin_reg[5]_14 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [2]),
        .Q(\lRegistersDin_reg[5]_14 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [3]),
        .Q(\lRegistersDin_reg[5]_14 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [4]),
        .Q(\lRegistersDin_reg[5]_14 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [5]),
        .Q(\lRegistersDin_reg[5]_14 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [6]),
        .Q(\lRegistersDin_reg[5]_14 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [7]),
        .Q(\lRegistersDin_reg[5]_14 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [8]),
        .Q(\lRegistersDin_reg[5]_14 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[5][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg09_out),
        .D(\lRegisters[5]_5 [9]),
        .Q(\lRegistersDin_reg[5]_14 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [0]),
        .Q(\lRegistersDin_reg[6]_15 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [10]),
        .Q(\lRegistersDin_reg[6]_15 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [11]),
        .Q(\lRegistersDin_reg[6]_15 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [12]),
        .Q(\lRegistersDin_reg[6]_15 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [13]),
        .Q(\lRegistersDin_reg[6]_15 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [14]),
        .Q(\lRegistersDin_reg[6]_15 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [15]),
        .Q(\lRegistersDin_reg[6]_15 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [16]),
        .Q(\lRegistersDin_reg[6]_15 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [17]),
        .Q(\lRegistersDin_reg[6]_15 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [1]),
        .Q(\lRegistersDin_reg[6]_15 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [2]),
        .Q(\lRegistersDin_reg[6]_15 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [3]),
        .Q(\lRegistersDin_reg[6]_15 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [4]),
        .Q(\lRegistersDin_reg[6]_15 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [5]),
        .Q(\lRegistersDin_reg[6]_15 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [6]),
        .Q(\lRegistersDin_reg[6]_15 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [7]),
        .Q(\lRegistersDin_reg[6]_15 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [8]),
        .Q(\lRegistersDin_reg[6]_15 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[6][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg011_out),
        .D(\lRegisters[6]_6 [9]),
        .Q(\lRegistersDin_reg[6]_15 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [0]),
        .Q(\lRegistersDin_reg[7]_16 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [10]),
        .Q(\lRegistersDin_reg[7]_16 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [11]),
        .Q(\lRegistersDin_reg[7]_16 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [12]),
        .Q(\lRegistersDin_reg[7]_16 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [13]),
        .Q(\lRegistersDin_reg[7]_16 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [14]),
        .Q(\lRegistersDin_reg[7]_16 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [15]),
        .Q(\lRegistersDin_reg[7]_16 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [16]),
        .Q(\lRegistersDin_reg[7]_16 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [17]),
        .Q(\lRegistersDin_reg[7]_16 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [1]),
        .Q(\lRegistersDin_reg[7]_16 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [2]),
        .Q(\lRegistersDin_reg[7]_16 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [3]),
        .Q(\lRegistersDin_reg[7]_16 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [4]),
        .Q(\lRegistersDin_reg[7]_16 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [5]),
        .Q(\lRegistersDin_reg[7]_16 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [6]),
        .Q(\lRegistersDin_reg[7]_16 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [7]),
        .Q(\lRegistersDin_reg[7]_16 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [8]),
        .Q(\lRegistersDin_reg[7]_16 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[7][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg013_out),
        .D(\lRegisters[7]_7 [9]),
        .Q(\lRegistersDin_reg[7]_16 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [0]),
        .Q(\lRegistersDin_reg[8]_17 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [10]),
        .Q(\lRegistersDin_reg[8]_17 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [11]),
        .Q(\lRegistersDin_reg[8]_17 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [12]),
        .Q(\lRegistersDin_reg[8]_17 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [13]),
        .Q(\lRegistersDin_reg[8]_17 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [14]),
        .Q(\lRegistersDin_reg[8]_17 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [15]),
        .Q(\lRegistersDin_reg[8]_17 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [16]),
        .Q(\lRegistersDin_reg[8]_17 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [17]),
        .Q(\lRegistersDin_reg[8]_17 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [1]),
        .Q(\lRegistersDin_reg[8]_17 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [2]),
        .Q(\lRegistersDin_reg[8]_17 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [3]),
        .Q(\lRegistersDin_reg[8]_17 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [4]),
        .Q(\lRegistersDin_reg[8]_17 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [5]),
        .Q(\lRegistersDin_reg[8]_17 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [6]),
        .Q(\lRegistersDin_reg[8]_17 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [7]),
        .Q(\lRegistersDin_reg[8]_17 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [8]),
        .Q(\lRegistersDin_reg[8]_17 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[8][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg015_out),
        .D(\lRegisters[8]_8 [9]),
        .Q(\lRegistersDin_reg[8]_17 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][0] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [0]),
        .Q(\lRegistersDin_reg[9]_18 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][10] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [10]),
        .Q(\lRegistersDin_reg[9]_18 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][11] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [11]),
        .Q(\lRegistersDin_reg[9]_18 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][12] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [12]),
        .Q(\lRegistersDin_reg[9]_18 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][13] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [13]),
        .Q(\lRegistersDin_reg[9]_18 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][14] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [14]),
        .Q(\lRegistersDin_reg[9]_18 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][15] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [15]),
        .Q(\lRegistersDin_reg[9]_18 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][16] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [16]),
        .Q(\lRegistersDin_reg[9]_18 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][17] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [17]),
        .Q(\lRegistersDin_reg[9]_18 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][1] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [1]),
        .Q(\lRegistersDin_reg[9]_18 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][2] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [2]),
        .Q(\lRegistersDin_reg[9]_18 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][3] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [3]),
        .Q(\lRegistersDin_reg[9]_18 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][4] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [4]),
        .Q(\lRegistersDin_reg[9]_18 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][5] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [5]),
        .Q(\lRegistersDin_reg[9]_18 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][6] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [6]),
        .Q(\lRegistersDin_reg[9]_18 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][7] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [7]),
        .Q(\lRegistersDin_reg[9]_18 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][8] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [8]),
        .Q(\lRegistersDin_reg[9]_18 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersDin_reg[9][9] 
       (.C(s00_axi_aclk),
        .CE(lSetIpushReg017_out),
        .D(\lRegisters[9]_9 [9]),
        .Q(\lRegistersDin_reg[9]_18 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [0]),
        .Q(\lRegistersR_reg[0]_24 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [10]),
        .Q(\lRegistersR_reg[0]_24 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [11]),
        .Q(\lRegistersR_reg[0]_24 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [12]),
        .Q(\lRegistersR_reg[0]_24 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [13]),
        .Q(\lRegistersR_reg[0]_24 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [14]),
        .Q(\lRegistersR_reg[0]_24 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [15]),
        .Q(\lRegistersR_reg[0]_24 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [16]),
        .Q(\lRegistersR_reg[0]_24 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [17]),
        .Q(\lRegistersR_reg[0]_24 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [18]),
        .Q(\lRegistersR_reg[0]_24 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [19]),
        .Q(\lRegistersR_reg[0]_24 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [1]),
        .Q(\lRegistersR_reg[0]_24 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [20]),
        .Q(\lRegistersR_reg[0]_24 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [21]),
        .Q(\lRegistersR_reg[0]_24 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [22]),
        .Q(\lRegistersR_reg[0]_24 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [23]),
        .Q(\lRegistersR_reg[0]_24 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [24]),
        .Q(\lRegistersR_reg[0]_24 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [25]),
        .Q(\lRegistersR_reg[0]_24 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [26]),
        .Q(\lRegistersR_reg[0]_24 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [27]),
        .Q(\lRegistersR_reg[0]_24 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [28]),
        .Q(\lRegistersR_reg[0]_24 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [29]),
        .Q(\lRegistersR_reg[0]_24 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [2]),
        .Q(\lRegistersR_reg[0]_24 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [30]),
        .Q(\lRegistersR_reg[0]_24 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [3]),
        .Q(\lRegistersR_reg[0]_24 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [4]),
        .Q(\lRegistersR_reg[0]_24 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [5]),
        .Q(\lRegistersR_reg[0]_24 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [6]),
        .Q(\lRegistersR_reg[0]_24 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [7]),
        .Q(\lRegistersR_reg[0]_24 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [8]),
        .Q(\lRegistersR_reg[0]_24 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[0][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[0]_0 [9]),
        .Q(\lRegistersR_reg[0]_24 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [0]),
        .Q(\lRegistersR_reg[10]_33 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [10]),
        .Q(\lRegistersR_reg[10]_33 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [11]),
        .Q(\lRegistersR_reg[10]_33 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [12]),
        .Q(\lRegistersR_reg[10]_33 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [13]),
        .Q(\lRegistersR_reg[10]_33 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [14]),
        .Q(\lRegistersR_reg[10]_33 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [15]),
        .Q(\lRegistersR_reg[10]_33 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [16]),
        .Q(\lRegistersR_reg[10]_33 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [17]),
        .Q(\lRegistersR_reg[10]_33 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [18]),
        .Q(\lRegistersR_reg[10]_33 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [19]),
        .Q(\lRegistersR_reg[10]_33 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [1]),
        .Q(\lRegistersR_reg[10]_33 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [20]),
        .Q(\lRegistersR_reg[10]_33 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [21]),
        .Q(\lRegistersR_reg[10]_33 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [22]),
        .Q(\lRegistersR_reg[10]_33 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [23]),
        .Q(\lRegistersR_reg[10]_33 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [24]),
        .Q(\lRegistersR_reg[10]_33 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [25]),
        .Q(\lRegistersR_reg[10]_33 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [26]),
        .Q(\lRegistersR_reg[10]_33 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [27]),
        .Q(\lRegistersR_reg[10]_33 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [28]),
        .Q(\lRegistersR_reg[10]_33 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [29]),
        .Q(\lRegistersR_reg[10]_33 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [2]),
        .Q(\lRegistersR_reg[10]_33 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [30]),
        .Q(\lRegistersR_reg[10]_33 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [31]),
        .Q(\lRegistersR_reg[10]_33 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [3]),
        .Q(\lRegistersR_reg[10]_33 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [4]),
        .Q(\lRegistersR_reg[10]_33 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [5]),
        .Q(\lRegistersR_reg[10]_33 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [6]),
        .Q(\lRegistersR_reg[10]_33 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [7]),
        .Q(\lRegistersR_reg[10]_33 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [8]),
        .Q(\lRegistersR_reg[10]_33 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[10][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[10]_10 [9]),
        .Q(\lRegistersR_reg[10]_33 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [0]),
        .Q(\lRegistersR_reg[11]_34 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [10]),
        .Q(\lRegistersR_reg[11]_34 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [11]),
        .Q(\lRegistersR_reg[11]_34 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [12]),
        .Q(\lRegistersR_reg[11]_34 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [13]),
        .Q(\lRegistersR_reg[11]_34 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [14]),
        .Q(\lRegistersR_reg[11]_34 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [15]),
        .Q(\lRegistersR_reg[11]_34 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [16]),
        .Q(\lRegistersR_reg[11]_34 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [17]),
        .Q(\lRegistersR_reg[11]_34 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [18]),
        .Q(\lRegistersR_reg[11]_34 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [19]),
        .Q(\lRegistersR_reg[11]_34 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [1]),
        .Q(\lRegistersR_reg[11]_34 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [20]),
        .Q(\lRegistersR_reg[11]_34 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [21]),
        .Q(\lRegistersR_reg[11]_34 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [22]),
        .Q(\lRegistersR_reg[11]_34 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [23]),
        .Q(\lRegistersR_reg[11]_34 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [24]),
        .Q(\lRegistersR_reg[11]_34 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [25]),
        .Q(\lRegistersR_reg[11]_34 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [26]),
        .Q(\lRegistersR_reg[11]_34 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [27]),
        .Q(\lRegistersR_reg[11]_34 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [28]),
        .Q(\lRegistersR_reg[11]_34 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [29]),
        .Q(\lRegistersR_reg[11]_34 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [2]),
        .Q(\lRegistersR_reg[11]_34 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [30]),
        .Q(\lRegistersR_reg[11]_34 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [31]),
        .Q(\lRegistersR_reg[11]_34 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [3]),
        .Q(\lRegistersR_reg[11]_34 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [4]),
        .Q(\lRegistersR_reg[11]_34 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [5]),
        .Q(\lRegistersR_reg[11]_34 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [6]),
        .Q(\lRegistersR_reg[11]_34 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [7]),
        .Q(\lRegistersR_reg[11]_34 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [8]),
        .Q(\lRegistersR_reg[11]_34 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[11][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[11]_11 [9]),
        .Q(\lRegistersR_reg[11]_34 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [0]),
        .Q(\lRegistersR_reg[12]_35 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [10]),
        .Q(\lRegistersR_reg[12]_35 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [11]),
        .Q(\lRegistersR_reg[12]_35 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [12]),
        .Q(\lRegistersR_reg[12]_35 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [13]),
        .Q(\lRegistersR_reg[12]_35 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [14]),
        .Q(\lRegistersR_reg[12]_35 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [15]),
        .Q(\lRegistersR_reg[12]_35 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [16]),
        .Q(\lRegistersR_reg[12]_35 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [17]),
        .Q(\lRegistersR_reg[12]_35 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [18]),
        .Q(\lRegistersR_reg[12]_35 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [19]),
        .Q(\lRegistersR_reg[12]_35 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [1]),
        .Q(\lRegistersR_reg[12]_35 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [20]),
        .Q(\lRegistersR_reg[12]_35 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [21]),
        .Q(\lRegistersR_reg[12]_35 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [22]),
        .Q(\lRegistersR_reg[12]_35 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [23]),
        .Q(\lRegistersR_reg[12]_35 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [24]),
        .Q(\lRegistersR_reg[12]_35 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [25]),
        .Q(\lRegistersR_reg[12]_35 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [26]),
        .Q(\lRegistersR_reg[12]_35 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [27]),
        .Q(\lRegistersR_reg[12]_35 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [28]),
        .Q(\lRegistersR_reg[12]_35 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [29]),
        .Q(\lRegistersR_reg[12]_35 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [2]),
        .Q(\lRegistersR_reg[12]_35 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [30]),
        .Q(\lRegistersR_reg[12]_35 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [31]),
        .Q(\lRegistersR_reg[12]_35 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [3]),
        .Q(\lRegistersR_reg[12]_35 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [4]),
        .Q(\lRegistersR_reg[12]_35 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [5]),
        .Q(\lRegistersR_reg[12]_35 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [6]),
        .Q(\lRegistersR_reg[12]_35 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [7]),
        .Q(\lRegistersR_reg[12]_35 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [8]),
        .Q(\lRegistersR_reg[12]_35 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[12][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[12]_12 [9]),
        .Q(\lRegistersR_reg[12]_35 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [0]),
        .Q(\lRegistersR_reg[1]_25 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [10]),
        .Q(\lRegistersR_reg[1]_25 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [11]),
        .Q(\lRegistersR_reg[1]_25 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [12]),
        .Q(\lRegistersR_reg[1]_25 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [13]),
        .Q(\lRegistersR_reg[1]_25 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [14]),
        .Q(\lRegistersR_reg[1]_25 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [15]),
        .Q(\lRegistersR_reg[1]_25 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [16]),
        .Q(\lRegistersR_reg[1]_25 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [21]),
        .Q(\lRegistersR_reg[1]_25 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [22]),
        .Q(\lRegistersR_reg[1]_25 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [2]),
        .Q(\lRegistersR_reg[1]_25 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [3]),
        .Q(\lRegistersR_reg[1]_25 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [4]),
        .Q(\lRegistersR_reg[1]_25 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [5]),
        .Q(\lRegistersR_reg[1]_25 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [6]),
        .Q(\lRegistersR_reg[1]_25 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [7]),
        .Q(\lRegistersR_reg[1]_25 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [8]),
        .Q(\lRegistersR_reg[1]_25 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[1][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[1]_1 [9]),
        .Q(\lRegistersR_reg[1]_25 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [0]),
        .Q(\lRegistersR_reg[2]_26 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [10]),
        .Q(\lRegistersR_reg[2]_26 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [11]),
        .Q(\lRegistersR_reg[2]_26 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [12]),
        .Q(\lRegistersR_reg[2]_26 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [13]),
        .Q(\lRegistersR_reg[2]_26 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [14]),
        .Q(\lRegistersR_reg[2]_26 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [15]),
        .Q(\lRegistersR_reg[2]_26 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [16]),
        .Q(\lRegistersR_reg[2]_26 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [17]),
        .Q(\lRegistersR_reg[2]_26 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [18]),
        .Q(\lRegistersR_reg[2]_26 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [19]),
        .Q(\lRegistersR_reg[2]_26 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [1]),
        .Q(\lRegistersR_reg[2]_26 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [20]),
        .Q(\lRegistersR_reg[2]_26 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [21]),
        .Q(\lRegistersR_reg[2]_26 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [22]),
        .Q(\lRegistersR_reg[2]_26 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [23]),
        .Q(\lRegistersR_reg[2]_26 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [24]),
        .Q(\lRegistersR_reg[2]_26 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [25]),
        .Q(\lRegistersR_reg[2]_26 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [26]),
        .Q(\lRegistersR_reg[2]_26 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [27]),
        .Q(\lRegistersR_reg[2]_26 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [28]),
        .Q(\lRegistersR_reg[2]_26 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [29]),
        .Q(\lRegistersR_reg[2]_26 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [2]),
        .Q(\lRegistersR_reg[2]_26 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [30]),
        .Q(\lRegistersR_reg[2]_26 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [31]),
        .Q(\lRegistersR_reg[2]_26 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [3]),
        .Q(\lRegistersR_reg[2]_26 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [4]),
        .Q(\lRegistersR_reg[2]_26 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [5]),
        .Q(\lRegistersR_reg[2]_26 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [6]),
        .Q(\lRegistersR_reg[2]_26 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [7]),
        .Q(\lRegistersR_reg[2]_26 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [8]),
        .Q(\lRegistersR_reg[2]_26 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[2][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[2]_2 [9]),
        .Q(\lRegistersR_reg[2]_26 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [0]),
        .Q(\lRegistersR_reg[3]_23 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [10]),
        .Q(\lRegistersR_reg[3]_23 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [11]),
        .Q(\lRegistersR_reg[3]_23 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [12]),
        .Q(\lRegistersR_reg[3]_23 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [13]),
        .Q(\lRegistersR_reg[3]_23 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [14]),
        .Q(\lRegistersR_reg[3]_23 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [15]),
        .Q(\lRegistersR_reg[3]_23 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [16]),
        .Q(\lRegistersR_reg[3]_23 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [17]),
        .Q(\lRegistersR_reg[3]_23 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [18]),
        .Q(\lRegistersR_reg[3]_23 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [19]),
        .Q(\lRegistersR_reg[3]_23 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [1]),
        .Q(\lRegistersR_reg[3]_23 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [20]),
        .Q(\lRegistersR_reg[3]_23 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [21]),
        .Q(\lRegistersR_reg[3]_23 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [22]),
        .Q(\lRegistersR_reg[3]_23 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [23]),
        .Q(\lRegistersR_reg[3]_23 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [24]),
        .Q(\lRegistersR_reg[3]_23 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [25]),
        .Q(\lRegistersR_reg[3]_23 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [26]),
        .Q(\lRegistersR_reg[3]_23 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [27]),
        .Q(\lRegistersR_reg[3]_23 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [28]),
        .Q(\lRegistersR_reg[3]_23 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [29]),
        .Q(\lRegistersR_reg[3]_23 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [2]),
        .Q(\lRegistersR_reg[3]_23 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [30]),
        .Q(\lRegistersR_reg[3]_23 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [31]),
        .Q(\lRegistersR_reg[3]_23 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [3]),
        .Q(\lRegistersR_reg[3]_23 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [4]),
        .Q(\lRegistersR_reg[3]_23 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [5]),
        .Q(\lRegistersR_reg[3]_23 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [6]),
        .Q(\lRegistersR_reg[3]_23 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [7]),
        .Q(\lRegistersR_reg[3]_23 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [8]),
        .Q(\lRegistersR_reg[3]_23 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[3][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[3]_3 [9]),
        .Q(\lRegistersR_reg[3]_23 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [0]),
        .Q(\lRegistersR_reg[4]_27 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [10]),
        .Q(\lRegistersR_reg[4]_27 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [11]),
        .Q(\lRegistersR_reg[4]_27 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [12]),
        .Q(\lRegistersR_reg[4]_27 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [13]),
        .Q(\lRegistersR_reg[4]_27 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [14]),
        .Q(\lRegistersR_reg[4]_27 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [15]),
        .Q(\lRegistersR_reg[4]_27 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [16]),
        .Q(\lRegistersR_reg[4]_27 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [17]),
        .Q(\lRegistersR_reg[4]_27 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [18]),
        .Q(\lRegistersR_reg[4]_27 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [19]),
        .Q(\lRegistersR_reg[4]_27 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [1]),
        .Q(\lRegistersR_reg[4]_27 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [20]),
        .Q(\lRegistersR_reg[4]_27 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [21]),
        .Q(\lRegistersR_reg[4]_27 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [22]),
        .Q(\lRegistersR_reg[4]_27 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [23]),
        .Q(\lRegistersR_reg[4]_27 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [24]),
        .Q(\lRegistersR_reg[4]_27 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [25]),
        .Q(\lRegistersR_reg[4]_27 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [26]),
        .Q(\lRegistersR_reg[4]_27 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [27]),
        .Q(\lRegistersR_reg[4]_27 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [28]),
        .Q(\lRegistersR_reg[4]_27 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [29]),
        .Q(\lRegistersR_reg[4]_27 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [2]),
        .Q(\lRegistersR_reg[4]_27 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [30]),
        .Q(\lRegistersR_reg[4]_27 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [31]),
        .Q(\lRegistersR_reg[4]_27 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [3]),
        .Q(\lRegistersR_reg[4]_27 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [4]),
        .Q(\lRegistersR_reg[4]_27 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [5]),
        .Q(\lRegistersR_reg[4]_27 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [6]),
        .Q(\lRegistersR_reg[4]_27 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [7]),
        .Q(\lRegistersR_reg[4]_27 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [8]),
        .Q(\lRegistersR_reg[4]_27 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[4][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[4]_4 [9]),
        .Q(\lRegistersR_reg[4]_27 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [0]),
        .Q(\lRegistersR_reg[5]_28 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [10]),
        .Q(\lRegistersR_reg[5]_28 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [11]),
        .Q(\lRegistersR_reg[5]_28 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [12]),
        .Q(\lRegistersR_reg[5]_28 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [13]),
        .Q(\lRegistersR_reg[5]_28 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [14]),
        .Q(\lRegistersR_reg[5]_28 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [15]),
        .Q(\lRegistersR_reg[5]_28 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [16]),
        .Q(\lRegistersR_reg[5]_28 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [17]),
        .Q(\lRegistersR_reg[5]_28 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [18]),
        .Q(\lRegistersR_reg[5]_28 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [19]),
        .Q(\lRegistersR_reg[5]_28 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [1]),
        .Q(\lRegistersR_reg[5]_28 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [20]),
        .Q(\lRegistersR_reg[5]_28 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [21]),
        .Q(\lRegistersR_reg[5]_28 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [22]),
        .Q(\lRegistersR_reg[5]_28 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [23]),
        .Q(\lRegistersR_reg[5]_28 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [24]),
        .Q(\lRegistersR_reg[5]_28 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [25]),
        .Q(\lRegistersR_reg[5]_28 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [26]),
        .Q(\lRegistersR_reg[5]_28 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [27]),
        .Q(\lRegistersR_reg[5]_28 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [28]),
        .Q(\lRegistersR_reg[5]_28 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [29]),
        .Q(\lRegistersR_reg[5]_28 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [2]),
        .Q(\lRegistersR_reg[5]_28 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [30]),
        .Q(\lRegistersR_reg[5]_28 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [31]),
        .Q(\lRegistersR_reg[5]_28 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [3]),
        .Q(\lRegistersR_reg[5]_28 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [4]),
        .Q(\lRegistersR_reg[5]_28 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [5]),
        .Q(\lRegistersR_reg[5]_28 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [6]),
        .Q(\lRegistersR_reg[5]_28 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [7]),
        .Q(\lRegistersR_reg[5]_28 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [8]),
        .Q(\lRegistersR_reg[5]_28 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[5][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[5]_5 [9]),
        .Q(\lRegistersR_reg[5]_28 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [0]),
        .Q(\lRegistersR_reg[6]_29 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [10]),
        .Q(\lRegistersR_reg[6]_29 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [11]),
        .Q(\lRegistersR_reg[6]_29 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [12]),
        .Q(\lRegistersR_reg[6]_29 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [13]),
        .Q(\lRegistersR_reg[6]_29 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [14]),
        .Q(\lRegistersR_reg[6]_29 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [15]),
        .Q(\lRegistersR_reg[6]_29 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [16]),
        .Q(\lRegistersR_reg[6]_29 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [17]),
        .Q(\lRegistersR_reg[6]_29 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [18]),
        .Q(\lRegistersR_reg[6]_29 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [19]),
        .Q(\lRegistersR_reg[6]_29 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [1]),
        .Q(\lRegistersR_reg[6]_29 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [20]),
        .Q(\lRegistersR_reg[6]_29 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [21]),
        .Q(\lRegistersR_reg[6]_29 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [22]),
        .Q(\lRegistersR_reg[6]_29 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [23]),
        .Q(\lRegistersR_reg[6]_29 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [24]),
        .Q(\lRegistersR_reg[6]_29 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [25]),
        .Q(\lRegistersR_reg[6]_29 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [26]),
        .Q(\lRegistersR_reg[6]_29 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [27]),
        .Q(\lRegistersR_reg[6]_29 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [28]),
        .Q(\lRegistersR_reg[6]_29 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [29]),
        .Q(\lRegistersR_reg[6]_29 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [2]),
        .Q(\lRegistersR_reg[6]_29 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [30]),
        .Q(\lRegistersR_reg[6]_29 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [31]),
        .Q(\lRegistersR_reg[6]_29 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [3]),
        .Q(\lRegistersR_reg[6]_29 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [4]),
        .Q(\lRegistersR_reg[6]_29 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [5]),
        .Q(\lRegistersR_reg[6]_29 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [6]),
        .Q(\lRegistersR_reg[6]_29 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [7]),
        .Q(\lRegistersR_reg[6]_29 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [8]),
        .Q(\lRegistersR_reg[6]_29 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[6][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[6]_6 [9]),
        .Q(\lRegistersR_reg[6]_29 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [0]),
        .Q(\lRegistersR_reg[7]_30 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [10]),
        .Q(\lRegistersR_reg[7]_30 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [11]),
        .Q(\lRegistersR_reg[7]_30 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [12]),
        .Q(\lRegistersR_reg[7]_30 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [13]),
        .Q(\lRegistersR_reg[7]_30 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [14]),
        .Q(\lRegistersR_reg[7]_30 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [15]),
        .Q(\lRegistersR_reg[7]_30 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [16]),
        .Q(\lRegistersR_reg[7]_30 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [17]),
        .Q(\lRegistersR_reg[7]_30 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [18]),
        .Q(\lRegistersR_reg[7]_30 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [19]),
        .Q(\lRegistersR_reg[7]_30 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [1]),
        .Q(\lRegistersR_reg[7]_30 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [20]),
        .Q(\lRegistersR_reg[7]_30 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [21]),
        .Q(\lRegistersR_reg[7]_30 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [22]),
        .Q(\lRegistersR_reg[7]_30 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [23]),
        .Q(\lRegistersR_reg[7]_30 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [24]),
        .Q(\lRegistersR_reg[7]_30 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [25]),
        .Q(\lRegistersR_reg[7]_30 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [26]),
        .Q(\lRegistersR_reg[7]_30 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [27]),
        .Q(\lRegistersR_reg[7]_30 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [28]),
        .Q(\lRegistersR_reg[7]_30 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [29]),
        .Q(\lRegistersR_reg[7]_30 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [2]),
        .Q(\lRegistersR_reg[7]_30 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [30]),
        .Q(\lRegistersR_reg[7]_30 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [31]),
        .Q(\lRegistersR_reg[7]_30 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [3]),
        .Q(\lRegistersR_reg[7]_30 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [4]),
        .Q(\lRegistersR_reg[7]_30 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [5]),
        .Q(\lRegistersR_reg[7]_30 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [6]),
        .Q(\lRegistersR_reg[7]_30 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [7]),
        .Q(\lRegistersR_reg[7]_30 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [8]),
        .Q(\lRegistersR_reg[7]_30 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[7][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[7]_7 [9]),
        .Q(\lRegistersR_reg[7]_30 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [0]),
        .Q(\lRegistersR_reg[8]_31 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [10]),
        .Q(\lRegistersR_reg[8]_31 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [11]),
        .Q(\lRegistersR_reg[8]_31 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [12]),
        .Q(\lRegistersR_reg[8]_31 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [13]),
        .Q(\lRegistersR_reg[8]_31 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [14]),
        .Q(\lRegistersR_reg[8]_31 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [15]),
        .Q(\lRegistersR_reg[8]_31 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [16]),
        .Q(\lRegistersR_reg[8]_31 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [17]),
        .Q(\lRegistersR_reg[8]_31 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [18]),
        .Q(\lRegistersR_reg[8]_31 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [19]),
        .Q(\lRegistersR_reg[8]_31 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [1]),
        .Q(\lRegistersR_reg[8]_31 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [20]),
        .Q(\lRegistersR_reg[8]_31 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [21]),
        .Q(\lRegistersR_reg[8]_31 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [22]),
        .Q(\lRegistersR_reg[8]_31 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [23]),
        .Q(\lRegistersR_reg[8]_31 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [24]),
        .Q(\lRegistersR_reg[8]_31 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [25]),
        .Q(\lRegistersR_reg[8]_31 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [26]),
        .Q(\lRegistersR_reg[8]_31 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [27]),
        .Q(\lRegistersR_reg[8]_31 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [28]),
        .Q(\lRegistersR_reg[8]_31 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [29]),
        .Q(\lRegistersR_reg[8]_31 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [2]),
        .Q(\lRegistersR_reg[8]_31 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [30]),
        .Q(\lRegistersR_reg[8]_31 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [31]),
        .Q(\lRegistersR_reg[8]_31 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [3]),
        .Q(\lRegistersR_reg[8]_31 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [4]),
        .Q(\lRegistersR_reg[8]_31 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [5]),
        .Q(\lRegistersR_reg[8]_31 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [6]),
        .Q(\lRegistersR_reg[8]_31 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [7]),
        .Q(\lRegistersR_reg[8]_31 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [8]),
        .Q(\lRegistersR_reg[8]_31 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[8][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[8]_8 [9]),
        .Q(\lRegistersR_reg[8]_31 [9]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [0]),
        .Q(\lRegistersR_reg[9]_32 [0]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [10]),
        .Q(\lRegistersR_reg[9]_32 [10]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [11]),
        .Q(\lRegistersR_reg[9]_32 [11]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [12]),
        .Q(\lRegistersR_reg[9]_32 [12]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [13]),
        .Q(\lRegistersR_reg[9]_32 [13]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [14]),
        .Q(\lRegistersR_reg[9]_32 [14]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [15]),
        .Q(\lRegistersR_reg[9]_32 [15]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [16]),
        .Q(\lRegistersR_reg[9]_32 [16]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [17]),
        .Q(\lRegistersR_reg[9]_32 [17]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [18]),
        .Q(\lRegistersR_reg[9]_32 [18]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [19]),
        .Q(\lRegistersR_reg[9]_32 [19]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [1]),
        .Q(\lRegistersR_reg[9]_32 [1]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [20]),
        .Q(\lRegistersR_reg[9]_32 [20]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [21]),
        .Q(\lRegistersR_reg[9]_32 [21]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [22]),
        .Q(\lRegistersR_reg[9]_32 [22]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [23]),
        .Q(\lRegistersR_reg[9]_32 [23]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [24]),
        .Q(\lRegistersR_reg[9]_32 [24]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [25]),
        .Q(\lRegistersR_reg[9]_32 [25]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [26]),
        .Q(\lRegistersR_reg[9]_32 [26]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [27]),
        .Q(\lRegistersR_reg[9]_32 [27]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [28]),
        .Q(\lRegistersR_reg[9]_32 [28]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [29]),
        .Q(\lRegistersR_reg[9]_32 [29]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [2]),
        .Q(\lRegistersR_reg[9]_32 [2]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [30]),
        .Q(\lRegistersR_reg[9]_32 [30]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [31]),
        .Q(\lRegistersR_reg[9]_32 [31]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [3]),
        .Q(\lRegistersR_reg[9]_32 [3]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [4]),
        .Q(\lRegistersR_reg[9]_32 [4]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [5]),
        .Q(\lRegistersR_reg[9]_32 [5]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [6]),
        .Q(\lRegistersR_reg[9]_32 [6]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [7]),
        .Q(\lRegistersR_reg[9]_32 [7]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [8]),
        .Q(\lRegistersR_reg[9]_32 [8]),
        .R(p_0_in__0));
  FDRE \lRegistersR_reg[9][9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lRegisters[9]_9 [9]),
        .Q(\lRegistersR_reg[9]_32 [9]),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[0]),
        .Q(\lRstIpushReg_reg_n_0_[0] ),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[10]),
        .Q(iPush9_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[11]),
        .Q(iPush10_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[12]),
        .Q(iPush11_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[13]),
        .Q(iPush12_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[1]),
        .Q(iPush0_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[2]),
        .Q(iPush1_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[3]),
        .Q(iPush2_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[4]),
        .Q(iPush3_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[5]),
        .Q(iPush4_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[6]),
        .Q(iPush5_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[7]),
        .Q(iPush6_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[8]),
        .Q(iPush7_in),
        .R(p_0_in__0));
  FDRE \lRstIpushReg_reg[9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(p_26_out[9]),
        .Q(iPush8_in),
        .R(p_0_in__0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 lSetIpushReg1_carry
       (.CI(1'b0),
        .CO({lSetIpushReg1_carry_n_0,lSetIpushReg1_carry_n_1,lSetIpushReg1_carry_n_2,lSetIpushReg1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_lSetIpushReg1_carry_O_UNCONNECTED[3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_128,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_129,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_130,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_131}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 lSetIpushReg1_carry__0
       (.CI(lSetIpushReg1_carry_n_0),
        .CO({lSetIpushReg1_carry__0_n_0,lSetIpushReg1_carry__0_n_1,lSetIpushReg1_carry__0_n_2,lSetIpushReg1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_lSetIpushReg1_carry__0_O_UNCONNECTED[3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_164,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_165,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_166,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_167}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 lSetIpushReg1_carry__1
       (.CI(lSetIpushReg1_carry__0_n_0),
        .CO({NLW_lSetIpushReg1_carry__1_CO_UNCONNECTED[3],lSetIpushReg11_out,lSetIpushReg1_carry__1_n_2,lSetIpushReg1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_lSetIpushReg1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_168,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_169,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_170}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__0/i__carry_n_0 ,\lSetIpushReg1_inferred__0/i__carry_n_1 ,\lSetIpushReg1_inferred__0/i__carry_n_2 ,\lSetIpushReg1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_171,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_172,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_173,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_174}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__0/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__0/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__0/i__carry__0_n_0 ,\lSetIpushReg1_inferred__0/i__carry__0_n_1 ,\lSetIpushReg1_inferred__0/i__carry__0_n_2 ,\lSetIpushReg1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_175,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_176,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_177,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_178}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__0/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__0/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__0/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg1,\lSetIpushReg1_inferred__0/i__carry__1_n_2 ,\lSetIpushReg1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_179,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_180,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_181}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__1/i___0_carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__1/i___0_carry_n_0 ,\lSetIpushReg1_inferred__1/i___0_carry_n_1 ,\lSetIpushReg1_inferred__1/i___0_carry_n_2 ,\lSetIpushReg1_inferred__1/i___0_carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__1/i___0_carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_182,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_183,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_184,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_185}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__1/i___0_carry__0 
       (.CI(\lSetIpushReg1_inferred__1/i___0_carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__1/i___0_carry__0_n_0 ,\lSetIpushReg1_inferred__1/i___0_carry__0_n_1 ,\lSetIpushReg1_inferred__1/i___0_carry__0_n_2 ,\lSetIpushReg1_inferred__1/i___0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__1/i___0_carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_186,1'b1,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_187,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_188}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__1/i___0_carry__1 
       (.CI(\lSetIpushReg1_inferred__1/i___0_carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__1/i___0_carry__1_CO_UNCONNECTED [3],lSetIpushReg10_out,\lSetIpushReg1_inferred__1/i___0_carry__1_n_2 ,\lSetIpushReg1_inferred__1/i___0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__1/i___0_carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b1,1'b1,1'b1}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__10/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__10/i__carry_n_0 ,\lSetIpushReg1_inferred__10/i__carry_n_1 ,\lSetIpushReg1_inferred__10/i__carry_n_2 ,\lSetIpushReg1_inferred__10/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__10/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_501,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_502,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_503,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_504}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__10/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__10/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__10/i__carry__0_n_0 ,\lSetIpushReg1_inferred__10/i__carry__0_n_1 ,\lSetIpushReg1_inferred__10/i__carry__0_n_2 ,\lSetIpushReg1_inferred__10/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__10/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_537,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_538,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_539,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_540}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__10/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__10/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__10/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg19_out,\lSetIpushReg1_inferred__10/i__carry__1_n_2 ,\lSetIpushReg1_inferred__10/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__10/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_541,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_542,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_543}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__11/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__11/i__carry_n_0 ,\lSetIpushReg1_inferred__11/i__carry_n_1 ,\lSetIpushReg1_inferred__11/i__carry_n_2 ,\lSetIpushReg1_inferred__11/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__11/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_544,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_545,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_546,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_547}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__11/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__11/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__11/i__carry__0_n_0 ,\lSetIpushReg1_inferred__11/i__carry__0_n_1 ,\lSetIpushReg1_inferred__11/i__carry__0_n_2 ,\lSetIpushReg1_inferred__11/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__11/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_580,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_581,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_582,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_583}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__11/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__11/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__11/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg110_out,\lSetIpushReg1_inferred__11/i__carry__1_n_2 ,\lSetIpushReg1_inferred__11/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__11/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_584,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_585,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_586}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__12/i___2_carry__1 
       (.CI(1'b0),
        .CO({\NLW_lSetIpushReg1_inferred__12/i___2_carry__1_CO_UNCONNECTED [3],lSetIpushReg111_out,\lSetIpushReg1_inferred__12/i___2_carry__1_n_2 ,\lSetIpushReg1_inferred__12/i___2_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__12/i___2_carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b1,1'b1,1'b1}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__2/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__2/i__carry_n_0 ,\lSetIpushReg1_inferred__2/i__carry_n_1 ,\lSetIpushReg1_inferred__2/i__carry_n_2 ,\lSetIpushReg1_inferred__2/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__2/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_189,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_190,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_191,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_192}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__2/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__2/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__2/i__carry__0_n_0 ,\lSetIpushReg1_inferred__2/i__carry__0_n_1 ,\lSetIpushReg1_inferred__2/i__carry__0_n_2 ,\lSetIpushReg1_inferred__2/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__2/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_225,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_226,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_227,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_228}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__2/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__2/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__2/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg112_out,\lSetIpushReg1_inferred__2/i__carry__1_n_2 ,\lSetIpushReg1_inferred__2/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__2/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_229,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_230,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_231}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__3/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__3/i__carry_n_0 ,\lSetIpushReg1_inferred__3/i__carry_n_1 ,\lSetIpushReg1_inferred__3/i__carry_n_2 ,\lSetIpushReg1_inferred__3/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__3/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_232,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_233,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_234,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_235}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__3/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__3/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__3/i__carry__0_n_0 ,\lSetIpushReg1_inferred__3/i__carry__0_n_1 ,\lSetIpushReg1_inferred__3/i__carry__0_n_2 ,\lSetIpushReg1_inferred__3/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__3/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_236,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_237,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_238,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_239}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__3/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__3/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__3/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg12_out,\lSetIpushReg1_inferred__3/i__carry__1_n_2 ,\lSetIpushReg1_inferred__3/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__3/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_240,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_241,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_242}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__4/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__4/i__carry_n_0 ,\lSetIpushReg1_inferred__4/i__carry_n_1 ,\lSetIpushReg1_inferred__4/i__carry_n_2 ,\lSetIpushReg1_inferred__4/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__4/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_243,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_244,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_245,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_246}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__4/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__4/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__4/i__carry__0_n_0 ,\lSetIpushReg1_inferred__4/i__carry__0_n_1 ,\lSetIpushReg1_inferred__4/i__carry__0_n_2 ,\lSetIpushReg1_inferred__4/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__4/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_279,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_280,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_281,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_282}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__4/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__4/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__4/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg13_out,\lSetIpushReg1_inferred__4/i__carry__1_n_2 ,\lSetIpushReg1_inferred__4/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__4/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_283,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_284,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_285}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__5/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__5/i__carry_n_0 ,\lSetIpushReg1_inferred__5/i__carry_n_1 ,\lSetIpushReg1_inferred__5/i__carry_n_2 ,\lSetIpushReg1_inferred__5/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__5/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_286,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_287,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_288,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_289}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__5/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__5/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__5/i__carry__0_n_0 ,\lSetIpushReg1_inferred__5/i__carry__0_n_1 ,\lSetIpushReg1_inferred__5/i__carry__0_n_2 ,\lSetIpushReg1_inferred__5/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__5/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_322,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_323,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_324,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_325}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__5/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__5/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__5/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg14_out,\lSetIpushReg1_inferred__5/i__carry__1_n_2 ,\lSetIpushReg1_inferred__5/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__5/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_326,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_327,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_328}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__6/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__6/i__carry_n_0 ,\lSetIpushReg1_inferred__6/i__carry_n_1 ,\lSetIpushReg1_inferred__6/i__carry_n_2 ,\lSetIpushReg1_inferred__6/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__6/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_329,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_330,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_331,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_332}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__6/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__6/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__6/i__carry__0_n_0 ,\lSetIpushReg1_inferred__6/i__carry__0_n_1 ,\lSetIpushReg1_inferred__6/i__carry__0_n_2 ,\lSetIpushReg1_inferred__6/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__6/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_365,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_366,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_367,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_368}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__6/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__6/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__6/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg15_out,\lSetIpushReg1_inferred__6/i__carry__1_n_2 ,\lSetIpushReg1_inferred__6/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__6/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_369,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_370,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_371}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__7/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__7/i__carry_n_0 ,\lSetIpushReg1_inferred__7/i__carry_n_1 ,\lSetIpushReg1_inferred__7/i__carry_n_2 ,\lSetIpushReg1_inferred__7/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__7/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_372,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_373,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_374,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_375}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__7/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__7/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__7/i__carry__0_n_0 ,\lSetIpushReg1_inferred__7/i__carry__0_n_1 ,\lSetIpushReg1_inferred__7/i__carry__0_n_2 ,\lSetIpushReg1_inferred__7/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__7/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_408,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_409,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_410,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_411}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__7/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__7/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__7/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg16_out,\lSetIpushReg1_inferred__7/i__carry__1_n_2 ,\lSetIpushReg1_inferred__7/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__7/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_412,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_413,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_414}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__8/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__8/i__carry_n_0 ,\lSetIpushReg1_inferred__8/i__carry_n_1 ,\lSetIpushReg1_inferred__8/i__carry_n_2 ,\lSetIpushReg1_inferred__8/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__8/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_415,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_416,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_417,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_418}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__8/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__8/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__8/i__carry__0_n_0 ,\lSetIpushReg1_inferred__8/i__carry__0_n_1 ,\lSetIpushReg1_inferred__8/i__carry__0_n_2 ,\lSetIpushReg1_inferred__8/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__8/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_451,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_452,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_453,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_454}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__8/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__8/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__8/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg17_out,\lSetIpushReg1_inferred__8/i__carry__1_n_2 ,\lSetIpushReg1_inferred__8/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__8/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_455,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_456,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_457}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__9/i__carry 
       (.CI(1'b0),
        .CO({\lSetIpushReg1_inferred__9/i__carry_n_0 ,\lSetIpushReg1_inferred__9/i__carry_n_1 ,\lSetIpushReg1_inferred__9/i__carry_n_2 ,\lSetIpushReg1_inferred__9/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__9/i__carry_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_458,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_459,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_460,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_461}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__9/i__carry__0 
       (.CI(\lSetIpushReg1_inferred__9/i__carry_n_0 ),
        .CO({\lSetIpushReg1_inferred__9/i__carry__0_n_0 ,\lSetIpushReg1_inferred__9/i__carry__0_n_1 ,\lSetIpushReg1_inferred__9/i__carry__0_n_2 ,\lSetIpushReg1_inferred__9/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__9/i__carry__0_O_UNCONNECTED [3:0]),
        .S({AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_494,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_495,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_496,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_497}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \lSetIpushReg1_inferred__9/i__carry__1 
       (.CI(\lSetIpushReg1_inferred__9/i__carry__0_n_0 ),
        .CO({\NLW_lSetIpushReg1_inferred__9/i__carry__1_CO_UNCONNECTED [3],lSetIpushReg18_out,\lSetIpushReg1_inferred__9/i__carry__1_n_2 ,\lSetIpushReg1_inferred__9/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_lSetIpushReg1_inferred__9/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_498,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_499,AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_500}));
  FDRE \lSetIpushReg_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_112),
        .Q(\lSetIpushReg_reg_n_0_[0] ),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_102),
        .Q(p_23_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_101),
        .Q(p_24_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_100),
        .Q(p_25_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_99),
        .Q(\lSetIpushReg_reg_n_0_[13] ),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_111),
        .Q(p_14_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_110),
        .Q(p_15_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_109),
        .Q(p_16_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_108),
        .Q(p_17_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_107),
        .Q(p_18_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_106),
        .Q(p_19_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_105),
        .Q(p_20_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_104),
        .Q(p_21_in),
        .R(p_0_in__0));
  FDRE \lSetIpushReg_reg[9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(AXI_ZmodADC1410_v1_0_S00_AXI_inst_n_103),
        .Q(p_22_in),
        .R(p_0_in__0));
  LUT5 #(
    .INIT(32'h0000F200)) 
    lSetIpushTL_i_1
       (.I0(lSetIpushTL),
        .I1(lIpushTL),
        .I2(lSetIpushReg112_out),
        .I3(lRst_n),
        .I4(\lRegisters[0]_0 [31]),
        .O(lSetIpushTL_i_1_n_0));
  FDRE lSetIpushTL_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lSetIpushTL_i_1_n_0),
        .Q(lSetIpushTL),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \sAdcSPI_IdleDin[0]_i_1 
       (.I0(sAdcSPI_IdleR),
        .I1(sAdcSPI_Idle),
        .I2(sAdcSPI_IdleDin),
        .O(\sAdcSPI_IdleDin[0]_i_1_n_0 ));
  FDRE \sAdcSPI_IdleDin_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sAdcSPI_IdleDin[0]_i_1_n_0 ),
        .Q(sAdcSPI_IdleDin),
        .R(sRstPushTxFifoEmpty));
  LUT3 #(
    .INIT(8'h20)) 
    sAdcSPI_IdlePush0
       (.I0(sAdcSPI_IdleSetPush),
        .I1(sAdcSPI_IdlePush),
        .I2(sAdcSPI_IdleRdy),
        .O(sAdcSPI_IdlePush0__0));
  FDRE sAdcSPI_IdlePush_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sAdcSPI_IdlePush0__0),
        .Q(sAdcSPI_IdlePush),
        .R(sRstPushTxFifoEmpty));
  FDRE sAdcSPI_IdleR_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sAdcSPI_Idle),
        .Q(sAdcSPI_IdleR),
        .R(sRstPushTxFifoEmpty));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h6F66)) 
    sAdcSPI_IdleSetPush_i_1
       (.I0(sAdcSPI_Idle),
        .I1(sAdcSPI_IdleR),
        .I2(sAdcSPI_IdlePush),
        .I3(sAdcSPI_IdleSetPush),
        .O(sAdcSPI_IdleSetPush_i_1_n_0));
  FDRE sAdcSPI_IdleSetPush_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sAdcSPI_IdleSetPush_i_1_n_0),
        .Q(sAdcSPI_IdleSetPush),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[0][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[0].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[0].InstSyncHandshake_n_5 ),
        .Q(\sRegisters_reg[0][5]_0 [0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[0][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[0].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[0].InstSyncHandshake_n_4 ),
        .Q(\sRegisters_reg[0][5]_0 [1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[0][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[0].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[0].InstSyncHandshake_n_3 ),
        .Q(sAqRunStop),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[0][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[0].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[0].InstSyncHandshake_n_2 ),
        .Q(\sRegisters_reg[0][5]_0 [2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_19 ),
        .Q(sCh2LgAddCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_9 ),
        .Q(sCh2LgAddCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_8 ),
        .Q(sCh2LgAddCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_7 ),
        .Q(sCh2LgAddCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_6 ),
        .Q(sCh2LgAddCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_5 ),
        .Q(sCh2LgAddCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_4 ),
        .Q(sCh2LgAddCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_3 ),
        .Q(sCh2LgAddCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_2 ),
        .Q(sCh2LgAddCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_18 ),
        .Q(sCh2LgAddCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_17 ),
        .Q(sCh2LgAddCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_16 ),
        .Q(sCh2LgAddCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_15 ),
        .Q(sCh2LgAddCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_14 ),
        .Q(sCh2LgAddCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_13 ),
        .Q(sCh2LgAddCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_12 ),
        .Q(sCh2LgAddCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_11 ),
        .Q(sCh2LgAddCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[10][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[10].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[10].InstSyncHandshake_n_10 ),
        .Q(sCh2LgAddCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_19 ),
        .Q(sCh2HgMultCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_9 ),
        .Q(sCh2HgMultCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_8 ),
        .Q(sCh2HgMultCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_7 ),
        .Q(sCh2HgMultCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_6 ),
        .Q(sCh2HgMultCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_5 ),
        .Q(sCh2HgMultCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_4 ),
        .Q(sCh2HgMultCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_3 ),
        .Q(sCh2HgMultCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_2 ),
        .Q(sCh2HgMultCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_18 ),
        .Q(sCh2HgMultCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_17 ),
        .Q(sCh2HgMultCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_16 ),
        .Q(sCh2HgMultCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_15 ),
        .Q(sCh2HgMultCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_14 ),
        .Q(sCh2HgMultCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_13 ),
        .Q(sCh2HgMultCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_12 ),
        .Q(sCh2HgMultCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_11 ),
        .Q(sCh2HgMultCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[11][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[11].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[11].InstSyncHandshake_n_10 ),
        .Q(sCh2HgMultCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_19 ),
        .Q(sCh2HgAddCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_9 ),
        .Q(sCh2HgAddCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_8 ),
        .Q(sCh2HgAddCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_7 ),
        .Q(sCh2HgAddCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_6 ),
        .Q(sCh2HgAddCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_5 ),
        .Q(sCh2HgAddCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_4 ),
        .Q(sCh2HgAddCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_3 ),
        .Q(sCh2HgAddCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_2 ),
        .Q(sCh2HgAddCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_18 ),
        .Q(sCh2HgAddCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_17 ),
        .Q(sCh2HgAddCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_16 ),
        .Q(sCh2HgAddCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_15 ),
        .Q(sCh2HgAddCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_14 ),
        .Q(sCh2HgAddCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_13 ),
        .Q(sCh2HgAddCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_12 ),
        .Q(sCh2HgAddCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_11 ),
        .Q(sCh2HgAddCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[12][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[12].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[12].InstSyncHandshake_n_10 ),
        .Q(sCh2HgAddCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_7 ),
        .Q(sTransferLength[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_6 ),
        .Q(sTransferLength[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_5 ),
        .Q(sTransferLength[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_4 ),
        .Q(sTransferLength[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_3 ),
        .Q(sTransferLength[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_2 ),
        .Q(sTransferLength[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_15 ),
        .Q(sTransferLength[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_14 ),
        .Q(sTransferLength[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_13 ),
        .Q(sTransferLength[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_12 ),
        .Q(sTransferLength[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_11 ),
        .Q(sTransferLength[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_10 ),
        .Q(sTransferLength[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_9 ),
        .Q(sTransferLength[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[2][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[2].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[2].InstSyncHandshake_n_8 ),
        .Q(sTransferLength[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_27 ),
        .Q(\sRegisters_reg_n_0_[3][0] ),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_18 ),
        .Q(sTrigLevel[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_17 ),
        .Q(sTrigLevel[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_16 ),
        .Q(sTrigLevel[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_15 ),
        .Q(sTrigLevel[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_14 ),
        .Q(sTrigLevel[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_13 ),
        .Q(sTrigLevel[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_12 ),
        .Q(sTrigLevel[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_11 ),
        .Q(sTrigLevel[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][18] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_10 ),
        .Q(sTrigLevel[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][19] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_9 ),
        .Q(Q[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][20] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_8 ),
        .Q(Q[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][21] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_7 ),
        .Q(Q[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][22] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_6 ),
        .Q(Q[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][23] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_5 ),
        .Q(Q[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][24] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_4 ),
        .Q(Q[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][25] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_3 ),
        .Q(Q[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][26] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_2 ),
        .Q(Q[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_26 ),
        .Q(sTrigMode[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_25 ),
        .Q(sTrigMode[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_24 ),
        .Q(sTrigRisingFalling),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_23 ),
        .Q(sTrigLevel[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_22 ),
        .Q(sTrigLevel[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_21 ),
        .Q(sTrigLevel[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_20 ),
        .Q(sTrigLevel[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[3][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[3].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[3].InstSyncHandshake_n_19 ),
        .Q(sTrigLevel[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_19 ),
        .Q(sCh1LgMultCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_9 ),
        .Q(sCh1LgMultCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_8 ),
        .Q(sCh1LgMultCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_7 ),
        .Q(sCh1LgMultCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_6 ),
        .Q(sCh1LgMultCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_5 ),
        .Q(sCh1LgMultCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_4 ),
        .Q(sCh1LgMultCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_3 ),
        .Q(sCh1LgMultCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_2 ),
        .Q(sCh1LgMultCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_18 ),
        .Q(sCh1LgMultCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_17 ),
        .Q(sCh1LgMultCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_16 ),
        .Q(sCh1LgMultCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_15 ),
        .Q(sCh1LgMultCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_14 ),
        .Q(sCh1LgMultCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_13 ),
        .Q(sCh1LgMultCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_12 ),
        .Q(sCh1LgMultCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_11 ),
        .Q(sCh1LgMultCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[5][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[5].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[5].InstSyncHandshake_n_10 ),
        .Q(sCh1LgMultCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_19 ),
        .Q(sCh1LgAddCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_9 ),
        .Q(sCh1LgAddCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_8 ),
        .Q(sCh1LgAddCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_7 ),
        .Q(sCh1LgAddCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_6 ),
        .Q(sCh1LgAddCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_5 ),
        .Q(sCh1LgAddCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_4 ),
        .Q(sCh1LgAddCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_3 ),
        .Q(sCh1LgAddCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_2 ),
        .Q(sCh1LgAddCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_18 ),
        .Q(sCh1LgAddCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_17 ),
        .Q(sCh1LgAddCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_16 ),
        .Q(sCh1LgAddCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_15 ),
        .Q(sCh1LgAddCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_14 ),
        .Q(sCh1LgAddCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_13 ),
        .Q(sCh1LgAddCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_12 ),
        .Q(sCh1LgAddCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_11 ),
        .Q(sCh1LgAddCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[6][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[6].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[6].InstSyncHandshake_n_10 ),
        .Q(sCh1LgAddCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_19 ),
        .Q(sCh1HgMultCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_9 ),
        .Q(sCh1HgMultCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_8 ),
        .Q(sCh1HgMultCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_7 ),
        .Q(sCh1HgMultCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_6 ),
        .Q(sCh1HgMultCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_5 ),
        .Q(sCh1HgMultCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_4 ),
        .Q(sCh1HgMultCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_3 ),
        .Q(sCh1HgMultCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_2 ),
        .Q(sCh1HgMultCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_18 ),
        .Q(sCh1HgMultCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_17 ),
        .Q(sCh1HgMultCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_16 ),
        .Q(sCh1HgMultCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_15 ),
        .Q(sCh1HgMultCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_14 ),
        .Q(sCh1HgMultCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_13 ),
        .Q(sCh1HgMultCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_12 ),
        .Q(sCh1HgMultCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_11 ),
        .Q(sCh1HgMultCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[7][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[7].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[7].InstSyncHandshake_n_10 ),
        .Q(sCh1HgMultCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_19 ),
        .Q(sCh1HgAddCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_9 ),
        .Q(sCh1HgAddCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_8 ),
        .Q(sCh1HgAddCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_7 ),
        .Q(sCh1HgAddCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_6 ),
        .Q(sCh1HgAddCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_5 ),
        .Q(sCh1HgAddCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_4 ),
        .Q(sCh1HgAddCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_3 ),
        .Q(sCh1HgAddCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_2 ),
        .Q(sCh1HgAddCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_18 ),
        .Q(sCh1HgAddCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_17 ),
        .Q(sCh1HgAddCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_16 ),
        .Q(sCh1HgAddCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_15 ),
        .Q(sCh1HgAddCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_14 ),
        .Q(sCh1HgAddCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_13 ),
        .Q(sCh1HgAddCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_12 ),
        .Q(sCh1HgAddCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_11 ),
        .Q(sCh1HgAddCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[8][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[8].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[8].InstSyncHandshake_n_10 ),
        .Q(sCh1HgAddCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][0] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_19 ),
        .Q(sCh2LgMultCoef[0]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][10] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_9 ),
        .Q(sCh2LgMultCoef[10]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][11] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_8 ),
        .Q(sCh2LgMultCoef[11]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][12] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_7 ),
        .Q(sCh2LgMultCoef[12]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][13] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_6 ),
        .Q(sCh2LgMultCoef[13]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][14] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_5 ),
        .Q(sCh2LgMultCoef[14]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][15] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_4 ),
        .Q(sCh2LgMultCoef[15]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][16] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_3 ),
        .Q(sCh2LgMultCoef[16]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][17] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_2 ),
        .Q(sCh2LgMultCoef[17]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][1] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_18 ),
        .Q(sCh2LgMultCoef[1]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][2] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_17 ),
        .Q(sCh2LgMultCoef[2]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][3] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_16 ),
        .Q(sCh2LgMultCoef[3]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][4] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_15 ),
        .Q(sCh2LgMultCoef[4]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][5] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_14 ),
        .Q(sCh2LgMultCoef[5]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][6] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_13 ),
        .Q(sCh2LgMultCoef[6]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][7] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_12 ),
        .Q(sCh2LgMultCoef[7]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][8] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_11 ),
        .Q(sCh2LgMultCoef[8]),
        .R(sRstPushTxFifoEmpty));
  FDRE \sRegisters_reg[9][9] 
       (.C(SysClk),
        .CE(\GenerateHanshake[9].InstSyncHandshake_n_0 ),
        .D(\GenerateHanshake[9].InstSyncHandshake_n_10 ),
        .Q(sCh2LgMultCoef[9]),
        .R(sRstPushTxFifoEmpty));
  FDRE \xsTransferLength_reg[0] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[0]),
        .Q(\xsTransferLength_reg_n_0_[0] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[10] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[10]),
        .Q(\xsTransferLength_reg_n_0_[10] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[11] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[11]),
        .Q(\xsTransferLength_reg_n_0_[11] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[12] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[12]),
        .Q(\xsTransferLength_reg_n_0_[12] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[13] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[13]),
        .Q(\xsTransferLength_reg_n_0_[13] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[1] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[1]),
        .Q(\xsTransferLength_reg_n_0_[1] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[2] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[2]),
        .Q(\xsTransferLength_reg_n_0_[2] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[3] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[3]),
        .Q(\xsTransferLength_reg_n_0_[3] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[4] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[4]),
        .Q(\xsTransferLength_reg_n_0_[4] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[5] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[5]),
        .Q(\xsTransferLength_reg_n_0_[5] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[6] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[6]),
        .Q(\xsTransferLength_reg_n_0_[6] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[7] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[7]),
        .Q(\xsTransferLength_reg_n_0_[7] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[8] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[8]),
        .Q(\xsTransferLength_reg_n_0_[8] ),
        .R(InstSaxiResetHandshake_n_1));
  FDRE \xsTransferLength_reg[9] 
       (.C(AxiStreamClk),
        .CE(oValid),
        .D(oData[9]),
        .Q(\xsTransferLength_reg_n_0_[9] ),
        .R(InstSaxiResetHandshake_n_1));
endmodule

(* ORIG_REF_NAME = "AXI_ZmodADC1410_v1_0_S00_AXI" *) 
module design_1_AXI_ZmodADC1410_1_0_AXI_ZmodADC1410_v1_0_S00_AXI
   (lAxiWreadyLoc_reg_0,
    SR,
    lAxiAwreadyLoc_reg_0,
    lAxiArreadyLoc_reg_0,
    \lRegisters[0]_0 ,
    wr_en,
    s00_lAxiBvalidLoc,
    lAxiRvalidLoc_reg_0,
    rd_en,
    \lRegisters[1]_1 ,
    in0,
    \lSlvReg0_reg[31]_0 ,
    DI,
    \lSlvReg8_reg[31]_0 ,
    S,
    \lSlvReg0_reg[31]_1 ,
    \lSlvReg0_reg[31]_2 ,
    \lSlvReg0_reg[31]_3 ,
    \lSlvReg0_reg[31]_4 ,
    \lSlvReg0_reg[31]_5 ,
    \lSlvReg0_reg[31]_6 ,
    \lSlvReg0_reg[31]_7 ,
    \lSlvReg0_reg[31]_8 ,
    \lSlvReg0_reg[31]_9 ,
    \lSlvReg0_reg[31]_10 ,
    \lSlvReg0_reg[31]_11 ,
    \lSlvReg0_reg[31]_12 ,
    \lSlvReg0_reg[31]_13 ,
    \lSlvReg0_reg[31]_14 ,
    \sRegisters_reg[3][4] ,
    \lSlvReg8_reg[12]_0 ,
    \lSlvReg8_reg[12]_1 ,
    E,
    lRegRstR_reg,
    lRegRstR_reg_0,
    lRegRstR_reg_1,
    lRegRstR_reg_2,
    lRegRstR_reg_3,
    lRegRstR_reg_4,
    lRegRstR_reg_5,
    lRegRstR_reg_6,
    lRegRstR_reg_7,
    lRegRstR_reg_8,
    lRegRstR_reg_9,
    \lRegistersR_reg[3][9] ,
    \lSlvReg7_reg[31]_0 ,
    \lRegistersR_reg[3][21] ,
    \lRegistersR_reg[3][30] ,
    \lRegistersR_reg[0][9] ,
    \lRegistersR_reg[0][21] ,
    \lRegistersR_reg[0][30] ,
    \lRegistersR_reg[1][9] ,
    \lRegistersR_reg[1][21] ,
    \lRegistersR_reg[2][9] ,
    \lSlvReg5_reg[31]_0 ,
    \lRegistersR_reg[2][21] ,
    \lRegistersR_reg[2][30] ,
    \lRegistersR_reg[4][9] ,
    \lRegistersR_reg[4][21] ,
    \lRegistersR_reg[4][30] ,
    \lRegistersR_reg[5][9] ,
    \lSlvReg9_reg[31]_0 ,
    \lRegistersR_reg[5][21] ,
    \lRegistersR_reg[5][30] ,
    \lRegistersR_reg[6][9] ,
    \lSlvReg10_reg[31]_0 ,
    \lRegistersR_reg[6][21] ,
    \lRegistersR_reg[6][30] ,
    \lRegistersR_reg[7][9] ,
    \lSlvReg11_reg[31]_0 ,
    \lRegistersR_reg[7][21] ,
    \lRegistersR_reg[7][30] ,
    \lRegistersR_reg[8][9] ,
    \lSlvReg12_reg[31]_0 ,
    \lRegistersR_reg[8][21] ,
    \lRegistersR_reg[8][30] ,
    \lRegistersR_reg[9][9] ,
    \lSlvReg13_reg[31]_0 ,
    \lRegistersR_reg[9][21] ,
    \lRegistersR_reg[9][30] ,
    \lRegistersR_reg[10][9] ,
    \lSlvReg14_reg[31]_0 ,
    \lRegistersR_reg[10][21] ,
    \lRegistersR_reg[10][30] ,
    \lRegistersR_reg[11][9] ,
    \lSlvReg15_reg[31]_0 ,
    \lRegistersR_reg[11][21] ,
    \lRegistersR_reg[11][30] ,
    \lRegistersR_reg[12][9] ,
    \lSlvReg16_reg[31]_0 ,
    \lRegistersR_reg[12][21] ,
    \lRegistersR_reg[12][30] ,
    \lSlvReg3_reg[23]_0 ,
    \lSlvReg8_reg[12]_2 ,
    \lSlvReg8_reg[11]_0 ,
    \lSlvReg8_reg[6]_0 ,
    \lSlvReg8_reg[7]_0 ,
    \lSlvReg8_reg[10]_0 ,
    \lSlvReg8_reg[11]_1 ,
    \lSlvReg0_reg[3]_0 ,
    s00_lAxiRdata,
    s00_axi_aclk,
    s00_axi_wdata,
    s00_axi_wstrb,
    lTxDoneSet,
    lTxDoneSetR,
    lRegRstR,
    lRst_n,
    Q,
    \minusOp_inferred__1/i__carry__2 ,
    CO,
    \lSetIpushReg_reg[13] ,
    \lSetIpushReg_reg[13]_0 ,
    \lSetIpushReg_reg[12] ,
    p_25_in,
    \lSetIpushReg_reg[11] ,
    p_24_in,
    \lSetIpushReg_reg[10] ,
    p_23_in,
    \lSetIpushReg_reg[9] ,
    p_22_in,
    \lSetIpushReg_reg[8] ,
    p_21_in,
    \lSetIpushReg_reg[7] ,
    p_20_in,
    \lSetIpushReg_reg[6] ,
    p_19_in,
    \lSetIpushReg_reg[5] ,
    p_18_in,
    \lSetIpushReg_reg[4] ,
    p_17_in,
    \lSetIpushReg_reg[3] ,
    p_16_in,
    \lSetIpushReg_reg[2] ,
    p_15_in,
    \lSetIpushReg_reg[1] ,
    p_14_in,
    \lSetIpushReg_reg[0] ,
    \lSetIpushReg_reg[0]_0 ,
    lSetStop,
    s00_axi_wvalid,
    s00_axi_awvalid,
    s00_axi_arvalid,
    lBufferFull,
    sTriggerCondition23_in,
    lTxFifoRdEn,
    lSetIpushReg1_carry__1,
    \lSetIpushReg1_inferred__0/i__carry__1 ,
    \lSetIpushReg1_inferred__1/i___0_carry__0 ,
    \lSetIpushReg1_inferred__2/i__carry__1 ,
    \lSetIpushReg1_inferred__3/i__carry__1 ,
    \lSetIpushReg1_inferred__4/i__carry__1 ,
    \lSetIpushReg1_inferred__5/i__carry__1 ,
    \lSetIpushReg1_inferred__6/i__carry__1 ,
    \lSetIpushReg1_inferred__7/i__carry__1 ,
    \lSetIpushReg1_inferred__8/i__carry__1 ,
    \lSetIpushReg1_inferred__9/i__carry__1 ,
    \lSetIpushReg1_inferred__10/i__carry__1 ,
    \lSetIpushReg1_inferred__11/i__carry__1 ,
    minusOp,
    dout,
    lAdcSPI_Idle,
    \lSlvReg1_reg[16]_0 ,
    \lSlvReg1_reg[9]_0 ,
    sInitDone_n,
    s00_axi_bready,
    s00_axi_rready,
    s00_lAxiAwaddrLoc,
    lSlvReg1125_out__0,
    s00_lAxiAraddrLoc);
  output lAxiWreadyLoc_reg_0;
  output [0:0]SR;
  output lAxiAwreadyLoc_reg_0;
  output lAxiArreadyLoc_reg_0;
  output [31:0]\lRegisters[0]_0 ;
  output wr_en;
  output s00_lAxiBvalidLoc;
  output lAxiRvalidLoc_reg_0;
  output rd_en;
  output [17:0]\lRegisters[1]_1 ;
  output in0;
  output \lSlvReg0_reg[31]_0 ;
  output [2:0]DI;
  output [31:0]\lSlvReg8_reg[31]_0 ;
  output [3:0]S;
  output \lSlvReg0_reg[31]_1 ;
  output \lSlvReg0_reg[31]_2 ;
  output \lSlvReg0_reg[31]_3 ;
  output \lSlvReg0_reg[31]_4 ;
  output \lSlvReg0_reg[31]_5 ;
  output \lSlvReg0_reg[31]_6 ;
  output \lSlvReg0_reg[31]_7 ;
  output \lSlvReg0_reg[31]_8 ;
  output \lSlvReg0_reg[31]_9 ;
  output \lSlvReg0_reg[31]_10 ;
  output \lSlvReg0_reg[31]_11 ;
  output \lSlvReg0_reg[31]_12 ;
  output \lSlvReg0_reg[31]_13 ;
  output \lSlvReg0_reg[31]_14 ;
  output \sRegisters_reg[3][4] ;
  output [0:0]\lSlvReg8_reg[12]_0 ;
  output [0:0]\lSlvReg8_reg[12]_1 ;
  output [0:0]E;
  output [0:0]lRegRstR_reg;
  output [0:0]lRegRstR_reg_0;
  output [0:0]lRegRstR_reg_1;
  output [0:0]lRegRstR_reg_2;
  output [0:0]lRegRstR_reg_3;
  output [0:0]lRegRstR_reg_4;
  output [0:0]lRegRstR_reg_5;
  output [0:0]lRegRstR_reg_6;
  output [0:0]lRegRstR_reg_7;
  output [0:0]lRegRstR_reg_8;
  output [0:0]lRegRstR_reg_9;
  output [3:0]\lRegistersR_reg[3][9] ;
  output [31:0]\lSlvReg7_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[3][21] ;
  output [2:0]\lRegistersR_reg[3][30] ;
  output [3:0]\lRegistersR_reg[0][9] ;
  output [3:0]\lRegistersR_reg[0][21] ;
  output [2:0]\lRegistersR_reg[0][30] ;
  output [3:0]\lRegistersR_reg[1][9] ;
  output [2:0]\lRegistersR_reg[1][21] ;
  output [3:0]\lRegistersR_reg[2][9] ;
  output [31:0]\lSlvReg5_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[2][21] ;
  output [2:0]\lRegistersR_reg[2][30] ;
  output [3:0]\lRegistersR_reg[4][9] ;
  output [3:0]\lRegistersR_reg[4][21] ;
  output [2:0]\lRegistersR_reg[4][30] ;
  output [3:0]\lRegistersR_reg[5][9] ;
  output [31:0]\lSlvReg9_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[5][21] ;
  output [2:0]\lRegistersR_reg[5][30] ;
  output [3:0]\lRegistersR_reg[6][9] ;
  output [31:0]\lSlvReg10_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[6][21] ;
  output [2:0]\lRegistersR_reg[6][30] ;
  output [3:0]\lRegistersR_reg[7][9] ;
  output [31:0]\lSlvReg11_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[7][21] ;
  output [2:0]\lRegistersR_reg[7][30] ;
  output [3:0]\lRegistersR_reg[8][9] ;
  output [31:0]\lSlvReg12_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[8][21] ;
  output [2:0]\lRegistersR_reg[8][30] ;
  output [3:0]\lRegistersR_reg[9][9] ;
  output [31:0]\lSlvReg13_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[9][21] ;
  output [2:0]\lRegistersR_reg[9][30] ;
  output [3:0]\lRegistersR_reg[10][9] ;
  output [31:0]\lSlvReg14_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[10][21] ;
  output [2:0]\lRegistersR_reg[10][30] ;
  output [3:0]\lRegistersR_reg[11][9] ;
  output [31:0]\lSlvReg15_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[11][21] ;
  output [2:0]\lRegistersR_reg[11][30] ;
  output [3:0]\lRegistersR_reg[12][9] ;
  output [31:0]\lSlvReg16_reg[31]_0 ;
  output [3:0]\lRegistersR_reg[12][21] ;
  output [2:0]\lRegistersR_reg[12][30] ;
  output [23:0]\lSlvReg3_reg[23]_0 ;
  output [0:0]\lSlvReg8_reg[12]_2 ;
  output [0:0]\lSlvReg8_reg[11]_0 ;
  output [3:0]\lSlvReg8_reg[6]_0 ;
  output [3:0]\lSlvReg8_reg[7]_0 ;
  output [3:0]\lSlvReg8_reg[10]_0 ;
  output [3:0]\lSlvReg8_reg[11]_1 ;
  output \lSlvReg0_reg[3]_0 ;
  output [31:0]s00_lAxiRdata;
  input s00_axi_aclk;
  input [31:0]s00_axi_wdata;
  input [3:0]s00_axi_wstrb;
  input lTxDoneSet;
  input lTxDoneSetR;
  input lRegRstR;
  input lRst_n;
  input [12:0]Q;
  input [12:0]\minusOp_inferred__1/i__carry__2 ;
  input [0:0]CO;
  input [13:0]\lSetIpushReg_reg[13] ;
  input \lSetIpushReg_reg[13]_0 ;
  input [0:0]\lSetIpushReg_reg[12] ;
  input p_25_in;
  input [0:0]\lSetIpushReg_reg[11] ;
  input p_24_in;
  input [0:0]\lSetIpushReg_reg[10] ;
  input p_23_in;
  input [0:0]\lSetIpushReg_reg[9] ;
  input p_22_in;
  input [0:0]\lSetIpushReg_reg[8] ;
  input p_21_in;
  input [0:0]\lSetIpushReg_reg[7] ;
  input p_20_in;
  input [0:0]\lSetIpushReg_reg[6] ;
  input p_19_in;
  input [0:0]\lSetIpushReg_reg[5] ;
  input p_18_in;
  input [0:0]\lSetIpushReg_reg[4] ;
  input p_17_in;
  input [0:0]\lSetIpushReg_reg[3] ;
  input p_16_in;
  input [0:0]\lSetIpushReg_reg[2] ;
  input p_15_in;
  input [0:0]\lSetIpushReg_reg[1] ;
  input p_14_in;
  input [0:0]\lSetIpushReg_reg[0] ;
  input \lSetIpushReg_reg[0]_0 ;
  input lSetStop;
  input s00_axi_wvalid;
  input s00_axi_awvalid;
  input s00_axi_arvalid;
  input lBufferFull;
  input sTriggerCondition23_in;
  input lTxFifoRdEn;
  input [31:0]lSetIpushReg1_carry__1;
  input [30:0]\lSetIpushReg1_inferred__0/i__carry__1 ;
  input [17:0]\lSetIpushReg1_inferred__1/i___0_carry__0 ;
  input [31:0]\lSetIpushReg1_inferred__2/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__3/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__4/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__5/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__6/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__7/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__8/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__9/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__10/i__carry__1 ;
  input [31:0]\lSetIpushReg1_inferred__11/i__carry__1 ;
  input [12:0]minusOp;
  input [7:0]dout;
  input lAdcSPI_Idle;
  input [6:0]\lSlvReg1_reg[16]_0 ;
  input [6:0]\lSlvReg1_reg[9]_0 ;
  input sInitDone_n;
  input s00_axi_bready;
  input s00_axi_rready;
  input [4:0]s00_lAxiAwaddrLoc;
  input lSlvReg1125_out__0;
  input [4:0]s00_lAxiAraddrLoc;

  wire [0:0]CO;
  wire [2:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_sCurrentState[0]_i_12_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_13_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_14_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_15_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_7_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_6_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_6_n_1 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_6_n_2 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_6_n_3 ;
  wire [12:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire [7:0]dout;
  wire in0;
  wire lAdcSPI_Idle;
  wire [6:2]lAxiAraddrLoc;
  wire lAxiArreadyLoc0;
  wire lAxiArreadyLoc_reg_0;
  wire lAxiAwreadyLoc0;
  wire lAxiAwreadyLoc_reg_0;
  wire lAxiBvalidLoc_i_1_n_0;
  wire \lAxiRdataLoc[0]_i_5_n_0 ;
  wire \lAxiRdataLoc[0]_i_6_n_0 ;
  wire \lAxiRdataLoc[0]_i_7_n_0 ;
  wire \lAxiRdataLoc[0]_i_8_n_0 ;
  wire \lAxiRdataLoc[10]_i_5_n_0 ;
  wire \lAxiRdataLoc[10]_i_6_n_0 ;
  wire \lAxiRdataLoc[10]_i_7_n_0 ;
  wire \lAxiRdataLoc[10]_i_8_n_0 ;
  wire \lAxiRdataLoc[11]_i_5_n_0 ;
  wire \lAxiRdataLoc[11]_i_6_n_0 ;
  wire \lAxiRdataLoc[11]_i_7_n_0 ;
  wire \lAxiRdataLoc[11]_i_8_n_0 ;
  wire \lAxiRdataLoc[12]_i_5_n_0 ;
  wire \lAxiRdataLoc[12]_i_6_n_0 ;
  wire \lAxiRdataLoc[12]_i_7_n_0 ;
  wire \lAxiRdataLoc[12]_i_8_n_0 ;
  wire \lAxiRdataLoc[13]_i_5_n_0 ;
  wire \lAxiRdataLoc[13]_i_6_n_0 ;
  wire \lAxiRdataLoc[13]_i_7_n_0 ;
  wire \lAxiRdataLoc[13]_i_8_n_0 ;
  wire \lAxiRdataLoc[14]_i_5_n_0 ;
  wire \lAxiRdataLoc[14]_i_6_n_0 ;
  wire \lAxiRdataLoc[14]_i_7_n_0 ;
  wire \lAxiRdataLoc[14]_i_8_n_0 ;
  wire \lAxiRdataLoc[15]_i_5_n_0 ;
  wire \lAxiRdataLoc[15]_i_6_n_0 ;
  wire \lAxiRdataLoc[15]_i_7_n_0 ;
  wire \lAxiRdataLoc[15]_i_8_n_0 ;
  wire \lAxiRdataLoc[16]_i_5_n_0 ;
  wire \lAxiRdataLoc[16]_i_6_n_0 ;
  wire \lAxiRdataLoc[16]_i_7_n_0 ;
  wire \lAxiRdataLoc[16]_i_8_n_0 ;
  wire \lAxiRdataLoc[17]_i_5_n_0 ;
  wire \lAxiRdataLoc[17]_i_6_n_0 ;
  wire \lAxiRdataLoc[17]_i_7_n_0 ;
  wire \lAxiRdataLoc[17]_i_8_n_0 ;
  wire \lAxiRdataLoc[18]_i_5_n_0 ;
  wire \lAxiRdataLoc[18]_i_6_n_0 ;
  wire \lAxiRdataLoc[18]_i_7_n_0 ;
  wire \lAxiRdataLoc[18]_i_8_n_0 ;
  wire \lAxiRdataLoc[19]_i_5_n_0 ;
  wire \lAxiRdataLoc[19]_i_6_n_0 ;
  wire \lAxiRdataLoc[19]_i_7_n_0 ;
  wire \lAxiRdataLoc[19]_i_8_n_0 ;
  wire \lAxiRdataLoc[1]_i_5_n_0 ;
  wire \lAxiRdataLoc[1]_i_6_n_0 ;
  wire \lAxiRdataLoc[1]_i_7_n_0 ;
  wire \lAxiRdataLoc[1]_i_8_n_0 ;
  wire \lAxiRdataLoc[20]_i_5_n_0 ;
  wire \lAxiRdataLoc[20]_i_6_n_0 ;
  wire \lAxiRdataLoc[20]_i_7_n_0 ;
  wire \lAxiRdataLoc[20]_i_8_n_0 ;
  wire \lAxiRdataLoc[21]_i_5_n_0 ;
  wire \lAxiRdataLoc[21]_i_6_n_0 ;
  wire \lAxiRdataLoc[21]_i_7_n_0 ;
  wire \lAxiRdataLoc[21]_i_8_n_0 ;
  wire \lAxiRdataLoc[22]_i_5_n_0 ;
  wire \lAxiRdataLoc[22]_i_6_n_0 ;
  wire \lAxiRdataLoc[22]_i_7_n_0 ;
  wire \lAxiRdataLoc[22]_i_8_n_0 ;
  wire \lAxiRdataLoc[23]_i_5_n_0 ;
  wire \lAxiRdataLoc[23]_i_6_n_0 ;
  wire \lAxiRdataLoc[23]_i_7_n_0 ;
  wire \lAxiRdataLoc[23]_i_8_n_0 ;
  wire \lAxiRdataLoc[24]_i_5_n_0 ;
  wire \lAxiRdataLoc[24]_i_6_n_0 ;
  wire \lAxiRdataLoc[24]_i_7_n_0 ;
  wire \lAxiRdataLoc[24]_i_8_n_0 ;
  wire \lAxiRdataLoc[25]_i_5_n_0 ;
  wire \lAxiRdataLoc[25]_i_6_n_0 ;
  wire \lAxiRdataLoc[25]_i_7_n_0 ;
  wire \lAxiRdataLoc[25]_i_8_n_0 ;
  wire \lAxiRdataLoc[26]_i_5_n_0 ;
  wire \lAxiRdataLoc[26]_i_6_n_0 ;
  wire \lAxiRdataLoc[26]_i_7_n_0 ;
  wire \lAxiRdataLoc[26]_i_8_n_0 ;
  wire \lAxiRdataLoc[27]_i_5_n_0 ;
  wire \lAxiRdataLoc[27]_i_6_n_0 ;
  wire \lAxiRdataLoc[27]_i_7_n_0 ;
  wire \lAxiRdataLoc[27]_i_8_n_0 ;
  wire \lAxiRdataLoc[28]_i_5_n_0 ;
  wire \lAxiRdataLoc[28]_i_6_n_0 ;
  wire \lAxiRdataLoc[28]_i_7_n_0 ;
  wire \lAxiRdataLoc[28]_i_8_n_0 ;
  wire \lAxiRdataLoc[29]_i_5_n_0 ;
  wire \lAxiRdataLoc[29]_i_6_n_0 ;
  wire \lAxiRdataLoc[29]_i_7_n_0 ;
  wire \lAxiRdataLoc[29]_i_8_n_0 ;
  wire \lAxiRdataLoc[2]_i_5_n_0 ;
  wire \lAxiRdataLoc[2]_i_6_n_0 ;
  wire \lAxiRdataLoc[2]_i_7_n_0 ;
  wire \lAxiRdataLoc[2]_i_8_n_0 ;
  wire \lAxiRdataLoc[30]_i_5_n_0 ;
  wire \lAxiRdataLoc[30]_i_6_n_0 ;
  wire \lAxiRdataLoc[30]_i_7_n_0 ;
  wire \lAxiRdataLoc[30]_i_8_n_0 ;
  wire \lAxiRdataLoc[31]_i_10_n_0 ;
  wire \lAxiRdataLoc[31]_i_11_n_0 ;
  wire \lAxiRdataLoc[31]_i_3_n_0 ;
  wire \lAxiRdataLoc[31]_i_4_n_0 ;
  wire \lAxiRdataLoc[31]_i_8_n_0 ;
  wire \lAxiRdataLoc[31]_i_9_n_0 ;
  wire \lAxiRdataLoc[3]_i_5_n_0 ;
  wire \lAxiRdataLoc[3]_i_6_n_0 ;
  wire \lAxiRdataLoc[3]_i_7_n_0 ;
  wire \lAxiRdataLoc[3]_i_8_n_0 ;
  wire \lAxiRdataLoc[4]_i_5_n_0 ;
  wire \lAxiRdataLoc[4]_i_6_n_0 ;
  wire \lAxiRdataLoc[4]_i_7_n_0 ;
  wire \lAxiRdataLoc[4]_i_8_n_0 ;
  wire \lAxiRdataLoc[5]_i_5_n_0 ;
  wire \lAxiRdataLoc[5]_i_6_n_0 ;
  wire \lAxiRdataLoc[5]_i_7_n_0 ;
  wire \lAxiRdataLoc[5]_i_8_n_0 ;
  wire \lAxiRdataLoc[6]_i_5_n_0 ;
  wire \lAxiRdataLoc[6]_i_6_n_0 ;
  wire \lAxiRdataLoc[6]_i_7_n_0 ;
  wire \lAxiRdataLoc[6]_i_8_n_0 ;
  wire \lAxiRdataLoc[7]_i_5_n_0 ;
  wire \lAxiRdataLoc[7]_i_6_n_0 ;
  wire \lAxiRdataLoc[7]_i_7_n_0 ;
  wire \lAxiRdataLoc[7]_i_8_n_0 ;
  wire \lAxiRdataLoc[8]_i_5_n_0 ;
  wire \lAxiRdataLoc[8]_i_6_n_0 ;
  wire \lAxiRdataLoc[8]_i_7_n_0 ;
  wire \lAxiRdataLoc[8]_i_8_n_0 ;
  wire \lAxiRdataLoc[9]_i_5_n_0 ;
  wire \lAxiRdataLoc[9]_i_6_n_0 ;
  wire \lAxiRdataLoc[9]_i_7_n_0 ;
  wire \lAxiRdataLoc[9]_i_8_n_0 ;
  wire \lAxiRdataLoc_reg[0]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[0]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[0]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[10]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[10]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[10]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[11]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[11]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[11]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[12]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[12]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[12]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[13]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[13]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[13]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[14]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[14]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[14]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[15]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[15]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[15]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[16]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[16]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[16]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[17]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[17]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[17]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[18]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[18]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[18]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[19]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[19]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[19]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[1]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[1]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[1]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[20]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[20]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[20]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[21]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[21]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[21]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[22]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[22]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[22]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[23]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[23]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[23]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[24]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[24]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[24]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[25]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[25]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[25]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[26]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[26]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[26]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[27]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[27]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[27]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[28]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[28]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[28]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[29]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[29]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[29]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[2]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[2]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[2]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[30]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[30]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[30]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[31]_i_5_n_0 ;
  wire \lAxiRdataLoc_reg[31]_i_6_n_0 ;
  wire \lAxiRdataLoc_reg[31]_i_7_n_0 ;
  wire \lAxiRdataLoc_reg[3]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[3]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[3]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[4]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[4]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[4]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[5]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[5]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[5]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[6]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[6]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[6]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[7]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[7]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[7]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[8]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[8]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[8]_i_4_n_0 ;
  wire \lAxiRdataLoc_reg[9]_i_2_n_0 ;
  wire \lAxiRdataLoc_reg[9]_i_3_n_0 ;
  wire \lAxiRdataLoc_reg[9]_i_4_n_0 ;
  wire lAxiRvalidLoc_i_1_n_0;
  wire lAxiRvalidLoc_reg_0;
  wire lAxiWreadyLoc0;
  wire lAxiWreadyLoc_reg_0;
  wire lBufferFull;
  wire [21:0]lReg2Rd;
  wire [31:0]lRegDataOut;
  wire lRegRstR;
  wire [0:0]lRegRstR_reg;
  wire [0:0]lRegRstR_reg_0;
  wire [0:0]lRegRstR_reg_1;
  wire [0:0]lRegRstR_reg_2;
  wire [0:0]lRegRstR_reg_3;
  wire [0:0]lRegRstR_reg_4;
  wire [0:0]lRegRstR_reg_5;
  wire [0:0]lRegRstR_reg_6;
  wire [0:0]lRegRstR_reg_7;
  wire [0:0]lRegRstR_reg_8;
  wire [0:0]lRegRstR_reg_9;
  wire [3:0]\lRegistersR_reg[0][21] ;
  wire [2:0]\lRegistersR_reg[0][30] ;
  wire [3:0]\lRegistersR_reg[0][9] ;
  wire [3:0]\lRegistersR_reg[10][21] ;
  wire [2:0]\lRegistersR_reg[10][30] ;
  wire [3:0]\lRegistersR_reg[10][9] ;
  wire [3:0]\lRegistersR_reg[11][21] ;
  wire [2:0]\lRegistersR_reg[11][30] ;
  wire [3:0]\lRegistersR_reg[11][9] ;
  wire [3:0]\lRegistersR_reg[12][21] ;
  wire [2:0]\lRegistersR_reg[12][30] ;
  wire [3:0]\lRegistersR_reg[12][9] ;
  wire [2:0]\lRegistersR_reg[1][21] ;
  wire [3:0]\lRegistersR_reg[1][9] ;
  wire [3:0]\lRegistersR_reg[2][21] ;
  wire [2:0]\lRegistersR_reg[2][30] ;
  wire [3:0]\lRegistersR_reg[2][9] ;
  wire [3:0]\lRegistersR_reg[3][21] ;
  wire [2:0]\lRegistersR_reg[3][30] ;
  wire [3:0]\lRegistersR_reg[3][9] ;
  wire [3:0]\lRegistersR_reg[4][21] ;
  wire [2:0]\lRegistersR_reg[4][30] ;
  wire [3:0]\lRegistersR_reg[4][9] ;
  wire [3:0]\lRegistersR_reg[5][21] ;
  wire [2:0]\lRegistersR_reg[5][30] ;
  wire [3:0]\lRegistersR_reg[5][9] ;
  wire [3:0]\lRegistersR_reg[6][21] ;
  wire [2:0]\lRegistersR_reg[6][30] ;
  wire [3:0]\lRegistersR_reg[6][9] ;
  wire [3:0]\lRegistersR_reg[7][21] ;
  wire [2:0]\lRegistersR_reg[7][30] ;
  wire [3:0]\lRegistersR_reg[7][9] ;
  wire [3:0]\lRegistersR_reg[8][21] ;
  wire [2:0]\lRegistersR_reg[8][30] ;
  wire [3:0]\lRegistersR_reg[8][9] ;
  wire [3:0]\lRegistersR_reg[9][21] ;
  wire [2:0]\lRegistersR_reg[9][30] ;
  wire [3:0]\lRegistersR_reg[9][9] ;
  wire [31:0]\lRegisters[0]_0 ;
  wire [17:0]\lRegisters[1]_1 ;
  wire lRst_n;
  wire lSPI_RxFifoRdEn_i_1_n_0;
  wire lSPI_TxFifoWrEn0;
  wire [31:0]lSetIpushReg1_carry__1;
  wire [30:0]\lSetIpushReg1_inferred__0/i__carry__1 ;
  wire [17:0]\lSetIpushReg1_inferred__1/i___0_carry__0 ;
  wire [31:0]\lSetIpushReg1_inferred__10/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__11/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__2/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__3/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__4/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__5/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__6/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__7/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__8/i__carry__1 ;
  wire [31:0]\lSetIpushReg1_inferred__9/i__carry__1 ;
  wire [0:0]\lSetIpushReg_reg[0] ;
  wire \lSetIpushReg_reg[0]_0 ;
  wire [0:0]\lSetIpushReg_reg[10] ;
  wire [0:0]\lSetIpushReg_reg[11] ;
  wire [0:0]\lSetIpushReg_reg[12] ;
  wire [13:0]\lSetIpushReg_reg[13] ;
  wire \lSetIpushReg_reg[13]_0 ;
  wire [0:0]\lSetIpushReg_reg[1] ;
  wire [0:0]\lSetIpushReg_reg[2] ;
  wire [0:0]\lSetIpushReg_reg[3] ;
  wire [0:0]\lSetIpushReg_reg[4] ;
  wire [0:0]\lSetIpushReg_reg[5] ;
  wire [0:0]\lSetIpushReg_reg[6] ;
  wire [0:0]\lSetIpushReg_reg[7] ;
  wire [0:0]\lSetIpushReg_reg[8] ;
  wire [0:0]\lSetIpushReg_reg[9] ;
  wire lSetStop;
  wire lSlvReg01__0;
  wire \lSlvReg0[31]_i_1_n_0 ;
  wire \lSlvReg0[4]_i_1_n_0 ;
  wire \lSlvReg0_reg[31]_0 ;
  wire \lSlvReg0_reg[31]_1 ;
  wire \lSlvReg0_reg[31]_10 ;
  wire \lSlvReg0_reg[31]_11 ;
  wire \lSlvReg0_reg[31]_12 ;
  wire \lSlvReg0_reg[31]_13 ;
  wire \lSlvReg0_reg[31]_14 ;
  wire \lSlvReg0_reg[31]_2 ;
  wire \lSlvReg0_reg[31]_3 ;
  wire \lSlvReg0_reg[31]_4 ;
  wire \lSlvReg0_reg[31]_5 ;
  wire \lSlvReg0_reg[31]_6 ;
  wire \lSlvReg0_reg[31]_7 ;
  wire \lSlvReg0_reg[31]_8 ;
  wire \lSlvReg0_reg[31]_9 ;
  wire \lSlvReg0_reg[3]_0 ;
  wire lSlvReg101__2;
  wire \lSlvReg10[15]_i_1_n_0 ;
  wire \lSlvReg10[23]_i_1_n_0 ;
  wire \lSlvReg10[31]_i_1_n_0 ;
  wire \lSlvReg10[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg10_reg[31]_0 ;
  wire lSlvReg111__2;
  wire lSlvReg1125_out__0;
  wire \lSlvReg11[15]_i_1_n_0 ;
  wire \lSlvReg11[23]_i_1_n_0 ;
  wire \lSlvReg11[31]_i_1_n_0 ;
  wire \lSlvReg11[7]_i_1_n_0 ;
  wire lSlvReg11__2;
  wire [31:0]\lSlvReg11_reg[31]_0 ;
  wire lSlvReg121__3;
  wire \lSlvReg12[15]_i_1_n_0 ;
  wire \lSlvReg12[23]_i_1_n_0 ;
  wire \lSlvReg12[31]_i_1_n_0 ;
  wire \lSlvReg12[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg12_reg[31]_0 ;
  wire lSlvReg131__3;
  wire \lSlvReg13[15]_i_1_n_0 ;
  wire \lSlvReg13[23]_i_1_n_0 ;
  wire \lSlvReg13[31]_i_1_n_0 ;
  wire \lSlvReg13[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg13_reg[31]_0 ;
  wire lSlvReg141__3;
  wire \lSlvReg14[15]_i_1_n_0 ;
  wire \lSlvReg14[23]_i_1_n_0 ;
  wire \lSlvReg14[31]_i_1_n_0 ;
  wire \lSlvReg14[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg14_reg[31]_0 ;
  wire lSlvReg151__3;
  wire \lSlvReg15[15]_i_1_n_0 ;
  wire \lSlvReg15[23]_i_1_n_0 ;
  wire \lSlvReg15[31]_i_1_n_0 ;
  wire \lSlvReg15[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg15_reg[31]_0 ;
  wire lSlvReg161__3;
  wire \lSlvReg16[15]_i_1_n_0 ;
  wire \lSlvReg16[23]_i_1_n_0 ;
  wire \lSlvReg16[31]_i_1_n_0 ;
  wire \lSlvReg16[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg16_reg[31]_0 ;
  wire \lSlvReg1[0]_i_1_n_0 ;
  wire \lSlvReg1[0]_i_2_n_0 ;
  wire \lSlvReg1[10]_i_1_n_0 ;
  wire \lSlvReg1[11]_i_1_n_0 ;
  wire \lSlvReg1[12]_i_1_n_0 ;
  wire \lSlvReg1[13]_i_1_n_0 ;
  wire \lSlvReg1[14]_i_1_n_0 ;
  wire \lSlvReg1[15]_i_1_n_0 ;
  wire \lSlvReg1[16]_i_1_n_0 ;
  wire \lSlvReg1[21]_i_1_n_0 ;
  wire \lSlvReg1[21]_i_2_n_0 ;
  wire \lSlvReg1[21]_i_3_n_0 ;
  wire \lSlvReg1[22]_i_1_n_0 ;
  wire \lSlvReg1[2]_i_1_n_0 ;
  wire \lSlvReg1[3]_i_1_n_0 ;
  wire \lSlvReg1[4]_i_1_n_0 ;
  wire \lSlvReg1[5]_i_1_n_0 ;
  wire \lSlvReg1[6]_i_1_n_0 ;
  wire \lSlvReg1[7]_i_1_n_0 ;
  wire \lSlvReg1[8]_i_1_n_0 ;
  wire \lSlvReg1[9]_i_1_n_0 ;
  wire [6:0]\lSlvReg1_reg[16]_0 ;
  wire [6:0]\lSlvReg1_reg[9]_0 ;
  wire \lSlvReg2[15]_i_1_n_0 ;
  wire \lSlvReg2[23]_i_1_n_0 ;
  wire \lSlvReg2[31]_i_1_n_0 ;
  wire \lSlvReg2[31]_i_3_n_0 ;
  wire \lSlvReg2[7]_i_1_n_0 ;
  wire \lSlvReg2_reg_n_0_[22] ;
  wire \lSlvReg2_reg_n_0_[23] ;
  wire \lSlvReg2_reg_n_0_[24] ;
  wire \lSlvReg2_reg_n_0_[25] ;
  wire \lSlvReg2_reg_n_0_[26] ;
  wire \lSlvReg2_reg_n_0_[27] ;
  wire \lSlvReg2_reg_n_0_[28] ;
  wire \lSlvReg2_reg_n_0_[29] ;
  wire \lSlvReg2_reg_n_0_[30] ;
  wire \lSlvReg2_reg_n_0_[31] ;
  wire \lSlvReg3[15]_i_1_n_0 ;
  wire \lSlvReg3[23]_i_1_n_0 ;
  wire \lSlvReg3[31]_i_1_n_0 ;
  wire \lSlvReg3[7]_i_1_n_0 ;
  wire [23:0]\lSlvReg3_reg[23]_0 ;
  wire \lSlvReg3_reg_n_0_[24] ;
  wire \lSlvReg3_reg_n_0_[25] ;
  wire \lSlvReg3_reg_n_0_[26] ;
  wire \lSlvReg3_reg_n_0_[27] ;
  wire \lSlvReg3_reg_n_0_[28] ;
  wire \lSlvReg3_reg_n_0_[29] ;
  wire \lSlvReg3_reg_n_0_[30] ;
  wire \lSlvReg3_reg_n_0_[31] ;
  wire lSlvReg4RdEn__3;
  wire \lSlvReg5[15]_i_1_n_0 ;
  wire \lSlvReg5[23]_i_1_n_0 ;
  wire \lSlvReg5[31]_i_1_n_0 ;
  wire \lSlvReg5[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg5_reg[31]_0 ;
  wire \lSlvReg6[15]_i_1_n_0 ;
  wire \lSlvReg6[23]_i_1_n_0 ;
  wire \lSlvReg6[31]_i_1_n_0 ;
  wire \lSlvReg6[7]_i_1_n_0 ;
  wire \lSlvReg6_reg_n_0_[0] ;
  wire \lSlvReg6_reg_n_0_[10] ;
  wire \lSlvReg6_reg_n_0_[11] ;
  wire \lSlvReg6_reg_n_0_[12] ;
  wire \lSlvReg6_reg_n_0_[13] ;
  wire \lSlvReg6_reg_n_0_[14] ;
  wire \lSlvReg6_reg_n_0_[15] ;
  wire \lSlvReg6_reg_n_0_[16] ;
  wire \lSlvReg6_reg_n_0_[17] ;
  wire \lSlvReg6_reg_n_0_[18] ;
  wire \lSlvReg6_reg_n_0_[19] ;
  wire \lSlvReg6_reg_n_0_[1] ;
  wire \lSlvReg6_reg_n_0_[20] ;
  wire \lSlvReg6_reg_n_0_[21] ;
  wire \lSlvReg6_reg_n_0_[22] ;
  wire \lSlvReg6_reg_n_0_[23] ;
  wire \lSlvReg6_reg_n_0_[24] ;
  wire \lSlvReg6_reg_n_0_[25] ;
  wire \lSlvReg6_reg_n_0_[26] ;
  wire \lSlvReg6_reg_n_0_[27] ;
  wire \lSlvReg6_reg_n_0_[28] ;
  wire \lSlvReg6_reg_n_0_[29] ;
  wire \lSlvReg6_reg_n_0_[2] ;
  wire \lSlvReg6_reg_n_0_[30] ;
  wire \lSlvReg6_reg_n_0_[31] ;
  wire \lSlvReg6_reg_n_0_[3] ;
  wire \lSlvReg6_reg_n_0_[4] ;
  wire \lSlvReg6_reg_n_0_[5] ;
  wire \lSlvReg6_reg_n_0_[6] ;
  wire \lSlvReg6_reg_n_0_[7] ;
  wire \lSlvReg6_reg_n_0_[8] ;
  wire \lSlvReg6_reg_n_0_[9] ;
  wire lSlvReg71__3;
  wire \lSlvReg7[15]_i_1_n_0 ;
  wire \lSlvReg7[23]_i_1_n_0 ;
  wire \lSlvReg7[31]_i_1_n_0 ;
  wire \lSlvReg7[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg7_reg[31]_0 ;
  wire lSlvReg81__2;
  wire \lSlvReg8[15]_i_1_n_0 ;
  wire \lSlvReg8[23]_i_1_n_0 ;
  wire \lSlvReg8[31]_i_1_n_0 ;
  wire \lSlvReg8[7]_i_1_n_0 ;
  wire [3:0]\lSlvReg8_reg[10]_0 ;
  wire [0:0]\lSlvReg8_reg[11]_0 ;
  wire [3:0]\lSlvReg8_reg[11]_1 ;
  wire [0:0]\lSlvReg8_reg[12]_0 ;
  wire [0:0]\lSlvReg8_reg[12]_1 ;
  wire [0:0]\lSlvReg8_reg[12]_2 ;
  wire [31:0]\lSlvReg8_reg[31]_0 ;
  wire [3:0]\lSlvReg8_reg[6]_0 ;
  wire [3:0]\lSlvReg8_reg[7]_0 ;
  wire lSlvReg91__2;
  wire \lSlvReg9[15]_i_1_n_0 ;
  wire \lSlvReg9[23]_i_1_n_0 ;
  wire \lSlvReg9[31]_i_1_n_0 ;
  wire \lSlvReg9[7]_i_1_n_0 ;
  wire [31:0]\lSlvReg9_reg[31]_0 ;
  wire lSlvRegRdEn;
  wire lTxDoneSet;
  wire lTxDoneSetR;
  wire lTxFifoRdEn;
  wire [12:0]minusOp;
  wire [12:0]\minusOp_inferred__1/i__carry__2 ;
  wire [4:0]p_0_in;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire p_19_in;
  wire [31:3]p_1_in;
  wire p_20_in;
  wire p_21_in;
  wire p_22_in;
  wire p_23_in;
  wire p_24_in;
  wire p_25_in;
  wire p_29_in;
  wire rd_en;
  wire s00_axi_aclk;
  wire s00_axi_arvalid;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_rready;
  wire [31:0]s00_axi_wdata;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;
  wire [4:0]s00_lAxiAraddrLoc;
  wire [4:0]s00_lAxiAwaddrLoc;
  wire s00_lAxiBvalidLoc;
  wire [31:0]s00_lAxiRdata;
  wire \sAddrTrigger[13]_i_10_n_0 ;
  wire \sAddrTrigger[13]_i_6_n_0 ;
  wire \sAddrTrigger[13]_i_7_n_0 ;
  wire \sAddrTrigger[13]_i_8_n_0 ;
  wire \sAddrTrigger[13]_i_9_n_0 ;
  wire \sAddrTrigger_reg[13]_i_5_n_0 ;
  wire \sAddrTrigger_reg[13]_i_5_n_1 ;
  wire \sAddrTrigger_reg[13]_i_5_n_2 ;
  wire \sAddrTrigger_reg[13]_i_5_n_3 ;
  wire sInitDone_n;
  wire \sRegisters_reg[3][4] ;
  wire sTriggerCondition23_in;
  wire wr_en;
  wire [3:1]\NLW_FSM_sequential_sCurrentState_reg[0]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_FSM_sequential_sCurrentState_reg[0]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_sequential_sCurrentState_reg[0]_i_6_O_UNCONNECTED ;
  wire [3:1]\NLW_sAddrTrigger_reg[13]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_sAddrTrigger_reg[13]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_sAddrTrigger_reg[13]_i_5_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \FSM_sequential_sCurrentState[0]_i_12 
       (.I0(\lSlvReg8_reg[31]_0 [9]),
        .I1(minusOp[8]),
        .I2(minusOp[10]),
        .I3(\lSlvReg8_reg[31]_0 [11]),
        .I4(minusOp[9]),
        .I5(\lSlvReg8_reg[31]_0 [10]),
        .O(\FSM_sequential_sCurrentState[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \FSM_sequential_sCurrentState[0]_i_13 
       (.I0(\lSlvReg8_reg[31]_0 [6]),
        .I1(minusOp[5]),
        .I2(minusOp[7]),
        .I3(\lSlvReg8_reg[31]_0 [8]),
        .I4(minusOp[6]),
        .I5(\lSlvReg8_reg[31]_0 [7]),
        .O(\FSM_sequential_sCurrentState[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \FSM_sequential_sCurrentState[0]_i_14 
       (.I0(\lSlvReg8_reg[31]_0 [3]),
        .I1(minusOp[2]),
        .I2(minusOp[4]),
        .I3(\lSlvReg8_reg[31]_0 [5]),
        .I4(minusOp[3]),
        .I5(\lSlvReg8_reg[31]_0 [4]),
        .O(\FSM_sequential_sCurrentState[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    \FSM_sequential_sCurrentState[0]_i_15 
       (.I0(\lSlvReg8_reg[31]_0 [0]),
        .I1(Q[0]),
        .I2(minusOp[1]),
        .I3(\lSlvReg8_reg[31]_0 [2]),
        .I4(minusOp[0]),
        .I5(\lSlvReg8_reg[31]_0 [1]),
        .O(\FSM_sequential_sCurrentState[0]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \FSM_sequential_sCurrentState[0]_i_7 
       (.I0(\lSlvReg8_reg[31]_0 [12]),
        .I1(minusOp[11]),
        .I2(\lSlvReg8_reg[31]_0 [13]),
        .I3(minusOp[12]),
        .O(\FSM_sequential_sCurrentState[0]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_sequential_sCurrentState[1]_i_2 
       (.I0(\lSlvReg8_reg[12]_0 ),
        .I1(\lSlvReg8_reg[12]_1 ),
        .I2(sTriggerCondition23_in),
        .O(\sRegisters_reg[3][4] ));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_3 
       (.CI(\FSM_sequential_sCurrentState_reg[0]_i_6_n_0 ),
        .CO({\NLW_FSM_sequential_sCurrentState_reg[0]_i_3_CO_UNCONNECTED [3:1],\lSlvReg8_reg[12]_1 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_sequential_sCurrentState_reg[0]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\FSM_sequential_sCurrentState[0]_i_7_n_0 }));
  CARRY4 \FSM_sequential_sCurrentState_reg[0]_i_6 
       (.CI(1'b0),
        .CO({\FSM_sequential_sCurrentState_reg[0]_i_6_n_0 ,\FSM_sequential_sCurrentState_reg[0]_i_6_n_1 ,\FSM_sequential_sCurrentState_reg[0]_i_6_n_2 ,\FSM_sequential_sCurrentState_reg[0]_i_6_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_sequential_sCurrentState_reg[0]_i_6_O_UNCONNECTED [3:0]),
        .S({\FSM_sequential_sCurrentState[0]_i_12_n_0 ,\FSM_sequential_sCurrentState[0]_i_13_n_0 ,\FSM_sequential_sCurrentState[0]_i_14_n_0 ,\FSM_sequential_sCurrentState[0]_i_15_n_0 }));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    aReset_inferred_i_1
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRst_n),
        .O(in0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'hB)) 
    aRst_int_inferred_i_1
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRst_n),
        .O(\lSlvReg0_reg[31]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    i___0_carry__0_i_1
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [16]),
        .I1(\lRegisters[1]_1 [16]),
        .I2(\lSetIpushReg1_inferred__1/i___0_carry__0 [17]),
        .I3(\lRegisters[1]_1 [17]),
        .O(\lRegistersR_reg[1][21] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i___0_carry__0_i_2
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [14]),
        .I1(\lRegisters[1]_1 [14]),
        .I2(\lSetIpushReg1_inferred__1/i___0_carry__0 [15]),
        .I3(\lRegisters[1]_1 [15]),
        .O(\lRegistersR_reg[1][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i___0_carry__0_i_3
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [11]),
        .I1(\lRegisters[1]_1 [11]),
        .I2(\lRegisters[1]_1 [13]),
        .I3(\lSetIpushReg1_inferred__1/i___0_carry__0 [13]),
        .I4(\lRegisters[1]_1 [12]),
        .I5(\lSetIpushReg1_inferred__1/i___0_carry__0 [12]),
        .O(\lRegistersR_reg[1][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i___0_carry_i_1
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [8]),
        .I1(\lRegisters[1]_1 [8]),
        .I2(\lRegisters[1]_1 [10]),
        .I3(\lSetIpushReg1_inferred__1/i___0_carry__0 [10]),
        .I4(\lRegisters[1]_1 [9]),
        .I5(\lSetIpushReg1_inferred__1/i___0_carry__0 [9]),
        .O(\lRegistersR_reg[1][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i___0_carry_i_2
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [5]),
        .I1(\lRegisters[1]_1 [5]),
        .I2(\lRegisters[1]_1 [7]),
        .I3(\lSetIpushReg1_inferred__1/i___0_carry__0 [7]),
        .I4(\lRegisters[1]_1 [6]),
        .I5(\lSetIpushReg1_inferred__1/i___0_carry__0 [6]),
        .O(\lRegistersR_reg[1][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i___0_carry_i_3
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [2]),
        .I1(\lRegisters[1]_1 [2]),
        .I2(\lRegisters[1]_1 [4]),
        .I3(\lSetIpushReg1_inferred__1/i___0_carry__0 [4]),
        .I4(\lRegisters[1]_1 [3]),
        .I5(\lSetIpushReg1_inferred__1/i___0_carry__0 [3]),
        .O(\lRegistersR_reg[1][9] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i___0_carry_i_4
       (.I0(\lSetIpushReg1_inferred__1/i___0_carry__0 [0]),
        .I1(\lRegisters[1]_1 [0]),
        .I2(\lSetIpushReg1_inferred__1/i___0_carry__0 [1]),
        .I3(\lRegisters[1]_1 [1]),
        .O(\lRegistersR_reg[1][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__10
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [21]),
        .I1(\lSlvReg14_reg[31]_0 [21]),
        .I2(\lSlvReg14_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [23]),
        .I4(\lSlvReg14_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [22]),
        .O(\lRegistersR_reg[10][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__11
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [21]),
        .I1(\lSlvReg15_reg[31]_0 [21]),
        .I2(\lSlvReg15_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [23]),
        .I4(\lSlvReg15_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [22]),
        .O(\lRegistersR_reg[11][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__12
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [21]),
        .I1(\lSlvReg16_reg[31]_0 [21]),
        .I2(\lSlvReg16_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [23]),
        .I4(\lSlvReg16_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [22]),
        .O(\lRegistersR_reg[12][21] [3]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__0_i_1__13
       (.I0(\lSlvReg8_reg[31]_0 [6]),
        .I1(Q[6]),
        .I2(\minusOp_inferred__1/i__carry__2 [6]),
        .O(\lSlvReg8_reg[6]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__2
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [21]),
        .I1(\lRegisters[0]_0 [21]),
        .I2(\lRegisters[0]_0 [23]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [23]),
        .I4(\lRegisters[0]_0 [22]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [22]),
        .O(\lRegistersR_reg[0][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__3
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [21]),
        .I1(\lSlvReg5_reg[31]_0 [21]),
        .I2(\lSlvReg5_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [23]),
        .I4(\lSlvReg5_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [22]),
        .O(\lRegistersR_reg[2][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__4
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [21]),
        .I1(\lSlvReg8_reg[31]_0 [21]),
        .I2(\lSlvReg8_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [23]),
        .I4(\lSlvReg8_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [22]),
        .O(\lRegistersR_reg[4][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__5
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [21]),
        .I1(\lSlvReg9_reg[31]_0 [21]),
        .I2(\lSlvReg9_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [23]),
        .I4(\lSlvReg9_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [22]),
        .O(\lRegistersR_reg[5][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__6
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [21]),
        .I1(\lSlvReg10_reg[31]_0 [21]),
        .I2(\lSlvReg10_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [23]),
        .I4(\lSlvReg10_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [22]),
        .O(\lRegistersR_reg[6][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__7
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [21]),
        .I1(\lSlvReg11_reg[31]_0 [21]),
        .I2(\lSlvReg11_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [23]),
        .I4(\lSlvReg11_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [22]),
        .O(\lRegistersR_reg[7][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__8
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [21]),
        .I1(\lSlvReg12_reg[31]_0 [21]),
        .I2(\lSlvReg12_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [23]),
        .I4(\lSlvReg12_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [22]),
        .O(\lRegistersR_reg[8][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__9
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [21]),
        .I1(\lSlvReg13_reg[31]_0 [21]),
        .I2(\lSlvReg13_reg[31]_0 [23]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [23]),
        .I4(\lSlvReg13_reg[31]_0 [22]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [22]),
        .O(\lRegistersR_reg[9][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__1
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [18]),
        .I1(\lRegisters[0]_0 [18]),
        .I2(\lRegisters[0]_0 [20]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [20]),
        .I4(\lRegisters[0]_0 [19]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [19]),
        .O(\lRegistersR_reg[0][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__10
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [18]),
        .I1(\lSlvReg15_reg[31]_0 [18]),
        .I2(\lSlvReg15_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [20]),
        .I4(\lSlvReg15_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [19]),
        .O(\lRegistersR_reg[11][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__11
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [18]),
        .I1(\lSlvReg16_reg[31]_0 [18]),
        .I2(\lSlvReg16_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [20]),
        .I4(\lSlvReg16_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [19]),
        .O(\lRegistersR_reg[12][21] [2]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__0_i_2__12
       (.I0(\lSlvReg8_reg[31]_0 [5]),
        .I1(Q[5]),
        .I2(\minusOp_inferred__1/i__carry__2 [5]),
        .O(\lSlvReg8_reg[6]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__2
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [18]),
        .I1(\lSlvReg5_reg[31]_0 [18]),
        .I2(\lSlvReg5_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [20]),
        .I4(\lSlvReg5_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [19]),
        .O(\lRegistersR_reg[2][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__3
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [18]),
        .I1(\lSlvReg8_reg[31]_0 [18]),
        .I2(\lSlvReg8_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [20]),
        .I4(\lSlvReg8_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [19]),
        .O(\lRegistersR_reg[4][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__4
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [18]),
        .I1(\lSlvReg9_reg[31]_0 [18]),
        .I2(\lSlvReg9_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [20]),
        .I4(\lSlvReg9_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [19]),
        .O(\lRegistersR_reg[5][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__5
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [18]),
        .I1(\lSlvReg10_reg[31]_0 [18]),
        .I2(\lSlvReg10_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [20]),
        .I4(\lSlvReg10_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [19]),
        .O(\lRegistersR_reg[6][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__6
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [18]),
        .I1(\lSlvReg11_reg[31]_0 [18]),
        .I2(\lSlvReg11_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [20]),
        .I4(\lSlvReg11_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [19]),
        .O(\lRegistersR_reg[7][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__7
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [18]),
        .I1(\lSlvReg12_reg[31]_0 [18]),
        .I2(\lSlvReg12_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [20]),
        .I4(\lSlvReg12_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [19]),
        .O(\lRegistersR_reg[8][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__8
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [18]),
        .I1(\lSlvReg13_reg[31]_0 [18]),
        .I2(\lSlvReg13_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [20]),
        .I4(\lSlvReg13_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [19]),
        .O(\lRegistersR_reg[9][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__9
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [18]),
        .I1(\lSlvReg14_reg[31]_0 [18]),
        .I2(\lSlvReg14_reg[31]_0 [20]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [20]),
        .I4(\lSlvReg14_reg[31]_0 [19]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [19]),
        .O(\lRegistersR_reg[10][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__1
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [15]),
        .I1(\lRegisters[0]_0 [15]),
        .I2(\lRegisters[0]_0 [17]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [17]),
        .I4(\lRegisters[0]_0 [16]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [16]),
        .O(\lRegistersR_reg[0][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__10
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [15]),
        .I1(\lSlvReg15_reg[31]_0 [15]),
        .I2(\lSlvReg15_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [17]),
        .I4(\lSlvReg15_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [16]),
        .O(\lRegistersR_reg[11][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__11
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [15]),
        .I1(\lSlvReg16_reg[31]_0 [15]),
        .I2(\lSlvReg16_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [17]),
        .I4(\lSlvReg16_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [16]),
        .O(\lRegistersR_reg[12][21] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__0_i_3__12
       (.I0(\lSlvReg8_reg[31]_0 [4]),
        .I1(Q[4]),
        .I2(\minusOp_inferred__1/i__carry__2 [4]),
        .O(\lSlvReg8_reg[6]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__2
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [15]),
        .I1(\lSlvReg5_reg[31]_0 [15]),
        .I2(\lSlvReg5_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [17]),
        .I4(\lSlvReg5_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [16]),
        .O(\lRegistersR_reg[2][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__3
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [15]),
        .I1(\lSlvReg8_reg[31]_0 [15]),
        .I2(\lSlvReg8_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [17]),
        .I4(\lSlvReg8_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [16]),
        .O(\lRegistersR_reg[4][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__4
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [15]),
        .I1(\lSlvReg9_reg[31]_0 [15]),
        .I2(\lSlvReg9_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [17]),
        .I4(\lSlvReg9_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [16]),
        .O(\lRegistersR_reg[5][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__5
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [15]),
        .I1(\lSlvReg10_reg[31]_0 [15]),
        .I2(\lSlvReg10_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [17]),
        .I4(\lSlvReg10_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [16]),
        .O(\lRegistersR_reg[6][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__6
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [15]),
        .I1(\lSlvReg11_reg[31]_0 [15]),
        .I2(\lSlvReg11_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [17]),
        .I4(\lSlvReg11_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [16]),
        .O(\lRegistersR_reg[7][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__7
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [15]),
        .I1(\lSlvReg12_reg[31]_0 [15]),
        .I2(\lSlvReg12_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [17]),
        .I4(\lSlvReg12_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [16]),
        .O(\lRegistersR_reg[8][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__8
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [15]),
        .I1(\lSlvReg13_reg[31]_0 [15]),
        .I2(\lSlvReg13_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [17]),
        .I4(\lSlvReg13_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [16]),
        .O(\lRegistersR_reg[9][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__9
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [15]),
        .I1(\lSlvReg14_reg[31]_0 [15]),
        .I2(\lSlvReg14_reg[31]_0 [17]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [17]),
        .I4(\lSlvReg14_reg[31]_0 [16]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [16]),
        .O(\lRegistersR_reg[10][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [12]),
        .I1(\lRegisters[0]_0 [12]),
        .I2(\lRegisters[0]_0 [14]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [14]),
        .I4(\lRegisters[0]_0 [13]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [13]),
        .O(\lRegistersR_reg[0][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__0
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [12]),
        .I1(\lSlvReg5_reg[31]_0 [12]),
        .I2(\lSlvReg5_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [14]),
        .I4(\lSlvReg5_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [13]),
        .O(\lRegistersR_reg[2][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__1
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [12]),
        .I1(\lSlvReg8_reg[31]_0 [12]),
        .I2(\lSlvReg8_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [14]),
        .I4(\lSlvReg8_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [13]),
        .O(\lRegistersR_reg[4][21] [0]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__0_i_4__12
       (.I0(\lSlvReg8_reg[31]_0 [3]),
        .I1(Q[3]),
        .I2(\minusOp_inferred__1/i__carry__2 [3]),
        .O(\lSlvReg8_reg[6]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__2
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [12]),
        .I1(\lSlvReg9_reg[31]_0 [12]),
        .I2(\lSlvReg9_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [14]),
        .I4(\lSlvReg9_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [13]),
        .O(\lRegistersR_reg[5][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__3
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [12]),
        .I1(\lSlvReg10_reg[31]_0 [12]),
        .I2(\lSlvReg10_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [14]),
        .I4(\lSlvReg10_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [13]),
        .O(\lRegistersR_reg[6][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__4
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [12]),
        .I1(\lSlvReg11_reg[31]_0 [12]),
        .I2(\lSlvReg11_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [14]),
        .I4(\lSlvReg11_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [13]),
        .O(\lRegistersR_reg[7][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__5
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [12]),
        .I1(\lSlvReg12_reg[31]_0 [12]),
        .I2(\lSlvReg12_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [14]),
        .I4(\lSlvReg12_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [13]),
        .O(\lRegistersR_reg[8][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__6
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [12]),
        .I1(\lSlvReg13_reg[31]_0 [12]),
        .I2(\lSlvReg13_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [14]),
        .I4(\lSlvReg13_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [13]),
        .O(\lRegistersR_reg[9][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__7
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [12]),
        .I1(\lSlvReg14_reg[31]_0 [12]),
        .I2(\lSlvReg14_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [14]),
        .I4(\lSlvReg14_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [13]),
        .O(\lRegistersR_reg[10][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__8
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [12]),
        .I1(\lSlvReg15_reg[31]_0 [12]),
        .I2(\lSlvReg15_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [14]),
        .I4(\lSlvReg15_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [13]),
        .O(\lRegistersR_reg[11][21] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__9
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [12]),
        .I1(\lSlvReg16_reg[31]_0 [12]),
        .I2(\lSlvReg16_reg[31]_0 [14]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [14]),
        .I4(\lSlvReg16_reg[31]_0 [13]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [13]),
        .O(\lRegistersR_reg[12][21] [0]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__0_i_5__1
       (.I0(\lSlvReg8_reg[31]_0 [7]),
        .I1(Q[7]),
        .I2(\minusOp_inferred__1/i__carry__2 [7]),
        .I3(\lSlvReg8_reg[6]_0 [3]),
        .O(\lSlvReg8_reg[7]_0 [3]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__0_i_6__1
       (.I0(\lSlvReg8_reg[31]_0 [6]),
        .I1(Q[6]),
        .I2(\minusOp_inferred__1/i__carry__2 [6]),
        .I3(\lSlvReg8_reg[6]_0 [2]),
        .O(\lSlvReg8_reg[7]_0 [2]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__0_i_7
       (.I0(\lSlvReg8_reg[31]_0 [5]),
        .I1(Q[5]),
        .I2(\minusOp_inferred__1/i__carry__2 [5]),
        .I3(\lSlvReg8_reg[6]_0 [1]),
        .O(\lSlvReg8_reg[7]_0 [1]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__0_i_8
       (.I0(\lSlvReg8_reg[31]_0 [4]),
        .I1(Q[4]),
        .I2(\minusOp_inferred__1/i__carry__2 [4]),
        .I3(\lSlvReg8_reg[6]_0 [0]),
        .O(\lSlvReg8_reg[7]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [30]),
        .I1(\lRegisters[0]_0 [30]),
        .I2(lRegRstR),
        .I3(\lRegisters[0]_0 [31]),
        .O(\lRegistersR_reg[0][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__0
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [30]),
        .I1(\lSlvReg5_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__2/i__carry__1 [31]),
        .I3(\lSlvReg5_reg[31]_0 [31]),
        .O(\lRegistersR_reg[2][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__1
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [30]),
        .I1(\lSlvReg8_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__3/i__carry__1 [31]),
        .I3(\lSlvReg8_reg[31]_0 [31]),
        .O(\lRegistersR_reg[4][30] [2]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__1_i_1__10
       (.I0(\lSlvReg8_reg[31]_0 [10]),
        .I1(Q[10]),
        .I2(\minusOp_inferred__1/i__carry__2 [10]),
        .O(\lSlvReg8_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__2
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [30]),
        .I1(\lSlvReg9_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__4/i__carry__1 [31]),
        .I3(\lSlvReg9_reg[31]_0 [31]),
        .O(\lRegistersR_reg[5][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__3
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [30]),
        .I1(\lSlvReg10_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__5/i__carry__1 [31]),
        .I3(\lSlvReg10_reg[31]_0 [31]),
        .O(\lRegistersR_reg[6][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__4
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [30]),
        .I1(\lSlvReg11_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__6/i__carry__1 [31]),
        .I3(\lSlvReg11_reg[31]_0 [31]),
        .O(\lRegistersR_reg[7][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__5
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [30]),
        .I1(\lSlvReg12_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__7/i__carry__1 [31]),
        .I3(\lSlvReg12_reg[31]_0 [31]),
        .O(\lRegistersR_reg[8][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__6
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [30]),
        .I1(\lSlvReg13_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__8/i__carry__1 [31]),
        .I3(\lSlvReg13_reg[31]_0 [31]),
        .O(\lRegistersR_reg[9][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__7
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [30]),
        .I1(\lSlvReg14_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__9/i__carry__1 [31]),
        .I3(\lSlvReg14_reg[31]_0 [31]),
        .O(\lRegistersR_reg[10][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__8
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [30]),
        .I1(\lSlvReg15_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__10/i__carry__1 [31]),
        .I3(\lSlvReg15_reg[31]_0 [31]),
        .O(\lRegistersR_reg[11][30] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__9
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [30]),
        .I1(\lSlvReg16_reg[31]_0 [30]),
        .I2(\lSetIpushReg1_inferred__11/i__carry__1 [31]),
        .I3(\lSlvReg16_reg[31]_0 [31]),
        .O(\lRegistersR_reg[12][30] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [27]),
        .I1(\lRegisters[0]_0 [27]),
        .I2(\lRegisters[0]_0 [29]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [29]),
        .I4(\lRegisters[0]_0 [28]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [28]),
        .O(\lRegistersR_reg[0][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__0
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [27]),
        .I1(\lSlvReg5_reg[31]_0 [27]),
        .I2(\lSlvReg5_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [29]),
        .I4(\lSlvReg5_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [28]),
        .O(\lRegistersR_reg[2][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__1
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [27]),
        .I1(\lSlvReg8_reg[31]_0 [27]),
        .I2(\lSlvReg8_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [29]),
        .I4(\lSlvReg8_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [28]),
        .O(\lRegistersR_reg[4][30] [1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__1_i_2__10
       (.I0(\lSlvReg8_reg[31]_0 [9]),
        .I1(Q[9]),
        .I2(\minusOp_inferred__1/i__carry__2 [9]),
        .O(\lSlvReg8_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__2
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [27]),
        .I1(\lSlvReg9_reg[31]_0 [27]),
        .I2(\lSlvReg9_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [29]),
        .I4(\lSlvReg9_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [28]),
        .O(\lRegistersR_reg[5][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__3
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [27]),
        .I1(\lSlvReg10_reg[31]_0 [27]),
        .I2(\lSlvReg10_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [29]),
        .I4(\lSlvReg10_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [28]),
        .O(\lRegistersR_reg[6][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__4
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [27]),
        .I1(\lSlvReg11_reg[31]_0 [27]),
        .I2(\lSlvReg11_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [29]),
        .I4(\lSlvReg11_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [28]),
        .O(\lRegistersR_reg[7][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__5
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [27]),
        .I1(\lSlvReg12_reg[31]_0 [27]),
        .I2(\lSlvReg12_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [29]),
        .I4(\lSlvReg12_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [28]),
        .O(\lRegistersR_reg[8][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__6
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [27]),
        .I1(\lSlvReg13_reg[31]_0 [27]),
        .I2(\lSlvReg13_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [29]),
        .I4(\lSlvReg13_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [28]),
        .O(\lRegistersR_reg[9][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__7
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [27]),
        .I1(\lSlvReg14_reg[31]_0 [27]),
        .I2(\lSlvReg14_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [29]),
        .I4(\lSlvReg14_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [28]),
        .O(\lRegistersR_reg[10][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__8
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [27]),
        .I1(\lSlvReg15_reg[31]_0 [27]),
        .I2(\lSlvReg15_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [29]),
        .I4(\lSlvReg15_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [28]),
        .O(\lRegistersR_reg[11][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__9
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [27]),
        .I1(\lSlvReg16_reg[31]_0 [27]),
        .I2(\lSlvReg16_reg[31]_0 [29]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [29]),
        .I4(\lSlvReg16_reg[31]_0 [28]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [28]),
        .O(\lRegistersR_reg[12][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [24]),
        .I1(\lRegisters[0]_0 [24]),
        .I2(\lRegisters[0]_0 [26]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [26]),
        .I4(\lRegisters[0]_0 [25]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [25]),
        .O(\lRegistersR_reg[0][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__0
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [24]),
        .I1(\lSlvReg5_reg[31]_0 [24]),
        .I2(\lSlvReg5_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [26]),
        .I4(\lSlvReg5_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [25]),
        .O(\lRegistersR_reg[2][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__1
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [24]),
        .I1(\lSlvReg8_reg[31]_0 [24]),
        .I2(\lSlvReg8_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [26]),
        .I4(\lSlvReg8_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [25]),
        .O(\lRegistersR_reg[4][30] [0]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__1_i_3__10
       (.I0(\lSlvReg8_reg[31]_0 [8]),
        .I1(Q[8]),
        .I2(\minusOp_inferred__1/i__carry__2 [8]),
        .O(\lSlvReg8_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__2
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [24]),
        .I1(\lSlvReg9_reg[31]_0 [24]),
        .I2(\lSlvReg9_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [26]),
        .I4(\lSlvReg9_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [25]),
        .O(\lRegistersR_reg[5][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__3
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [24]),
        .I1(\lSlvReg10_reg[31]_0 [24]),
        .I2(\lSlvReg10_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [26]),
        .I4(\lSlvReg10_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [25]),
        .O(\lRegistersR_reg[6][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__4
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [24]),
        .I1(\lSlvReg11_reg[31]_0 [24]),
        .I2(\lSlvReg11_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [26]),
        .I4(\lSlvReg11_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [25]),
        .O(\lRegistersR_reg[7][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__5
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [24]),
        .I1(\lSlvReg12_reg[31]_0 [24]),
        .I2(\lSlvReg12_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [26]),
        .I4(\lSlvReg12_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [25]),
        .O(\lRegistersR_reg[8][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__6
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [24]),
        .I1(\lSlvReg13_reg[31]_0 [24]),
        .I2(\lSlvReg13_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [26]),
        .I4(\lSlvReg13_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [25]),
        .O(\lRegistersR_reg[9][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__7
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [24]),
        .I1(\lSlvReg14_reg[31]_0 [24]),
        .I2(\lSlvReg14_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [26]),
        .I4(\lSlvReg14_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [25]),
        .O(\lRegistersR_reg[10][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__8
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [24]),
        .I1(\lSlvReg15_reg[31]_0 [24]),
        .I2(\lSlvReg15_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [26]),
        .I4(\lSlvReg15_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [25]),
        .O(\lRegistersR_reg[11][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__9
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [24]),
        .I1(\lSlvReg16_reg[31]_0 [24]),
        .I2(\lSlvReg16_reg[31]_0 [26]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [26]),
        .I4(\lSlvReg16_reg[31]_0 [25]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [25]),
        .O(\lRegistersR_reg[12][30] [0]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__1_i_4
       (.I0(\lSlvReg8_reg[31]_0 [7]),
        .I1(Q[7]),
        .I2(\minusOp_inferred__1/i__carry__2 [7]),
        .O(\lSlvReg8_reg[10]_0 [0]));
  (* HLUTNM = "lutpair3" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__1_i_5
       (.I0(\lSlvReg8_reg[31]_0 [11]),
        .I1(Q[11]),
        .I2(\minusOp_inferred__1/i__carry__2 [11]),
        .I3(\lSlvReg8_reg[10]_0 [3]),
        .O(\lSlvReg8_reg[11]_1 [3]));
  (* HLUTNM = "lutpair2" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__1_i_6
       (.I0(\lSlvReg8_reg[31]_0 [10]),
        .I1(Q[10]),
        .I2(\minusOp_inferred__1/i__carry__2 [10]),
        .I3(\lSlvReg8_reg[10]_0 [2]),
        .O(\lSlvReg8_reg[11]_1 [2]));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__1_i_7
       (.I0(\lSlvReg8_reg[31]_0 [9]),
        .I1(Q[9]),
        .I2(\minusOp_inferred__1/i__carry__2 [9]),
        .I3(\lSlvReg8_reg[10]_0 [1]),
        .O(\lSlvReg8_reg[11]_1 [1]));
  (* HLUTNM = "lutpair0" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__1_i_8
       (.I0(\lSlvReg8_reg[31]_0 [8]),
        .I1(Q[8]),
        .I2(\minusOp_inferred__1/i__carry__2 [8]),
        .I3(\lSlvReg8_reg[10]_0 [0]),
        .O(\lSlvReg8_reg[11]_1 [0]));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry__2_i_1
       (.I0(\lSlvReg8_reg[31]_0 [11]),
        .I1(Q[11]),
        .I2(\minusOp_inferred__1/i__carry__2 [11]),
        .O(\lSlvReg8_reg[11]_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry__2_i_3
       (.I0(\lSlvReg8_reg[11]_0 ),
        .I1(\lSlvReg8_reg[31]_0 [12]),
        .I2(Q[12]),
        .I3(\minusOp_inferred__1/i__carry__2 [12]),
        .O(\lSlvReg8_reg[12]_2 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__10
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [9]),
        .I1(\lSlvReg12_reg[31]_0 [9]),
        .I2(\lSlvReg12_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [11]),
        .I4(\lSlvReg12_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [10]),
        .O(\lRegistersR_reg[8][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__11
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [9]),
        .I1(\lSlvReg13_reg[31]_0 [9]),
        .I2(\lSlvReg13_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [11]),
        .I4(\lSlvReg13_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [10]),
        .O(\lRegistersR_reg[9][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__12
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [9]),
        .I1(\lSlvReg14_reg[31]_0 [9]),
        .I2(\lSlvReg14_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [11]),
        .I4(\lSlvReg14_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [10]),
        .O(\lRegistersR_reg[10][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__13
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [9]),
        .I1(\lSlvReg15_reg[31]_0 [9]),
        .I2(\lSlvReg15_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [11]),
        .I4(\lSlvReg15_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [10]),
        .O(\lRegistersR_reg[11][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__14
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [9]),
        .I1(\lSlvReg16_reg[31]_0 [9]),
        .I2(\lSlvReg16_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [11]),
        .I4(\lSlvReg16_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [10]),
        .O(\lRegistersR_reg[12][9] [3]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry_i_1__15
       (.I0(\lSlvReg8_reg[31]_0 [2]),
        .I1(Q[2]),
        .I2(\minusOp_inferred__1/i__carry__2 [2]),
        .O(DI[2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__4
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [9]),
        .I1(\lRegisters[0]_0 [9]),
        .I2(\lRegisters[0]_0 [11]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [11]),
        .I4(\lRegisters[0]_0 [10]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [10]),
        .O(\lRegistersR_reg[0][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__5
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [9]),
        .I1(\lSlvReg5_reg[31]_0 [9]),
        .I2(\lSlvReg5_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [11]),
        .I4(\lSlvReg5_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [10]),
        .O(\lRegistersR_reg[2][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__6
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [9]),
        .I1(\lSlvReg8_reg[31]_0 [9]),
        .I2(\lSlvReg8_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [11]),
        .I4(\lSlvReg8_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [10]),
        .O(\lRegistersR_reg[4][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__7
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [9]),
        .I1(\lSlvReg9_reg[31]_0 [9]),
        .I2(\lSlvReg9_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [11]),
        .I4(\lSlvReg9_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [10]),
        .O(\lRegistersR_reg[5][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__8
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [9]),
        .I1(\lSlvReg10_reg[31]_0 [9]),
        .I2(\lSlvReg10_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [11]),
        .I4(\lSlvReg10_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [10]),
        .O(\lRegistersR_reg[6][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__9
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [9]),
        .I1(\lSlvReg11_reg[31]_0 [9]),
        .I2(\lSlvReg11_reg[31]_0 [11]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [11]),
        .I4(\lSlvReg11_reg[31]_0 [10]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [10]),
        .O(\lRegistersR_reg[7][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__10
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [6]),
        .I1(\lSlvReg12_reg[31]_0 [6]),
        .I2(\lSlvReg12_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [8]),
        .I4(\lSlvReg12_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [7]),
        .O(\lRegistersR_reg[8][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__11
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [6]),
        .I1(\lSlvReg13_reg[31]_0 [6]),
        .I2(\lSlvReg13_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [8]),
        .I4(\lSlvReg13_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [7]),
        .O(\lRegistersR_reg[9][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__12
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [6]),
        .I1(\lSlvReg14_reg[31]_0 [6]),
        .I2(\lSlvReg14_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [8]),
        .I4(\lSlvReg14_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [7]),
        .O(\lRegistersR_reg[10][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__13
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [6]),
        .I1(\lSlvReg15_reg[31]_0 [6]),
        .I2(\lSlvReg15_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [8]),
        .I4(\lSlvReg15_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [7]),
        .O(\lRegistersR_reg[11][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__14
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [6]),
        .I1(\lSlvReg16_reg[31]_0 [6]),
        .I2(\lSlvReg16_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [8]),
        .I4(\lSlvReg16_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [7]),
        .O(\lRegistersR_reg[12][9] [2]));
  LUT3 #(
    .INIT(8'hD4)) 
    i__carry_i_2__15
       (.I0(\lSlvReg8_reg[31]_0 [1]),
        .I1(Q[1]),
        .I2(\minusOp_inferred__1/i__carry__2 [1]),
        .O(DI[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__4
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [6]),
        .I1(\lRegisters[0]_0 [6]),
        .I2(\lRegisters[0]_0 [8]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [8]),
        .I4(\lRegisters[0]_0 [7]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [7]),
        .O(\lRegistersR_reg[0][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__5
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [6]),
        .I1(\lSlvReg5_reg[31]_0 [6]),
        .I2(\lSlvReg5_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [8]),
        .I4(\lSlvReg5_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [7]),
        .O(\lRegistersR_reg[2][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__6
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [6]),
        .I1(\lSlvReg8_reg[31]_0 [6]),
        .I2(\lSlvReg8_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [8]),
        .I4(\lSlvReg8_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [7]),
        .O(\lRegistersR_reg[4][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__7
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [6]),
        .I1(\lSlvReg9_reg[31]_0 [6]),
        .I2(\lSlvReg9_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [8]),
        .I4(\lSlvReg9_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [7]),
        .O(\lRegistersR_reg[5][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__8
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [6]),
        .I1(\lSlvReg10_reg[31]_0 [6]),
        .I2(\lSlvReg10_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [8]),
        .I4(\lSlvReg10_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [7]),
        .O(\lRegistersR_reg[6][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__9
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [6]),
        .I1(\lSlvReg11_reg[31]_0 [6]),
        .I2(\lSlvReg11_reg[31]_0 [8]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [8]),
        .I4(\lSlvReg11_reg[31]_0 [7]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [7]),
        .O(\lRegistersR_reg[7][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__10
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [3]),
        .I1(\lSlvReg12_reg[31]_0 [3]),
        .I2(\lSlvReg12_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [5]),
        .I4(\lSlvReg12_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [4]),
        .O(\lRegistersR_reg[8][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__11
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [3]),
        .I1(\lSlvReg13_reg[31]_0 [3]),
        .I2(\lSlvReg13_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [5]),
        .I4(\lSlvReg13_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [4]),
        .O(\lRegistersR_reg[9][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__12
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [3]),
        .I1(\lSlvReg14_reg[31]_0 [3]),
        .I2(\lSlvReg14_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [5]),
        .I4(\lSlvReg14_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [4]),
        .O(\lRegistersR_reg[10][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__13
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [3]),
        .I1(\lSlvReg15_reg[31]_0 [3]),
        .I2(\lSlvReg15_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [5]),
        .I4(\lSlvReg15_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [4]),
        .O(\lRegistersR_reg[11][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__14
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [3]),
        .I1(\lSlvReg16_reg[31]_0 [3]),
        .I2(\lSlvReg16_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [5]),
        .I4(\lSlvReg16_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [4]),
        .O(\lRegistersR_reg[12][9] [1]));
  LUT2 #(
    .INIT(4'hB)) 
    i__carry_i_3__16
       (.I0(Q[0]),
        .I1(\lSlvReg8_reg[31]_0 [0]),
        .O(DI[0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__4
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [3]),
        .I1(\lRegisters[0]_0 [3]),
        .I2(\lRegisters[0]_0 [5]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [5]),
        .I4(\lRegisters[0]_0 [4]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [4]),
        .O(\lRegistersR_reg[0][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__5
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [3]),
        .I1(\lSlvReg5_reg[31]_0 [3]),
        .I2(\lSlvReg5_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [5]),
        .I4(\lSlvReg5_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [4]),
        .O(\lRegistersR_reg[2][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__6
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [3]),
        .I1(\lSlvReg8_reg[31]_0 [3]),
        .I2(\lSlvReg8_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [5]),
        .I4(\lSlvReg8_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [4]),
        .O(\lRegistersR_reg[4][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__7
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [3]),
        .I1(\lSlvReg9_reg[31]_0 [3]),
        .I2(\lSlvReg9_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [5]),
        .I4(\lSlvReg9_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [4]),
        .O(\lRegistersR_reg[5][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__8
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [3]),
        .I1(\lSlvReg10_reg[31]_0 [3]),
        .I2(\lSlvReg10_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [5]),
        .I4(\lSlvReg10_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [4]),
        .O(\lRegistersR_reg[6][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__9
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [3]),
        .I1(\lSlvReg11_reg[31]_0 [3]),
        .I2(\lSlvReg11_reg[31]_0 [5]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [5]),
        .I4(\lSlvReg11_reg[31]_0 [4]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [4]),
        .O(\lRegistersR_reg[7][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__10
       (.I0(\lSetIpushReg1_inferred__7/i__carry__1 [0]),
        .I1(\lSlvReg12_reg[31]_0 [0]),
        .I2(\lSlvReg12_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__7/i__carry__1 [2]),
        .I4(\lSlvReg12_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__7/i__carry__1 [1]),
        .O(\lRegistersR_reg[8][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__11
       (.I0(\lSetIpushReg1_inferred__8/i__carry__1 [0]),
        .I1(\lSlvReg13_reg[31]_0 [0]),
        .I2(\lSlvReg13_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__8/i__carry__1 [2]),
        .I4(\lSlvReg13_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__8/i__carry__1 [1]),
        .O(\lRegistersR_reg[9][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__12
       (.I0(\lSetIpushReg1_inferred__9/i__carry__1 [0]),
        .I1(\lSlvReg14_reg[31]_0 [0]),
        .I2(\lSlvReg14_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__9/i__carry__1 [2]),
        .I4(\lSlvReg14_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__9/i__carry__1 [1]),
        .O(\lRegistersR_reg[10][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__13
       (.I0(\lSetIpushReg1_inferred__10/i__carry__1 [0]),
        .I1(\lSlvReg15_reg[31]_0 [0]),
        .I2(\lSlvReg15_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__10/i__carry__1 [2]),
        .I4(\lSlvReg15_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__10/i__carry__1 [1]),
        .O(\lRegistersR_reg[11][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__14
       (.I0(\lSetIpushReg1_inferred__11/i__carry__1 [0]),
        .I1(\lSlvReg16_reg[31]_0 [0]),
        .I2(\lSlvReg16_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__11/i__carry__1 [2]),
        .I4(\lSlvReg16_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__11/i__carry__1 [1]),
        .O(\lRegistersR_reg[12][9] [0]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry_i_4__15
       (.I0(\lSlvReg8_reg[31]_0 [3]),
        .I1(Q[3]),
        .I2(\minusOp_inferred__1/i__carry__2 [3]),
        .I3(DI[2]),
        .O(S[3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__4
       (.I0(\lSetIpushReg1_inferred__0/i__carry__1 [0]),
        .I1(\lRegisters[0]_0 [0]),
        .I2(\lRegisters[0]_0 [2]),
        .I3(\lSetIpushReg1_inferred__0/i__carry__1 [2]),
        .I4(\lRegisters[0]_0 [1]),
        .I5(\lSetIpushReg1_inferred__0/i__carry__1 [1]),
        .O(\lRegistersR_reg[0][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__5
       (.I0(\lSetIpushReg1_inferred__2/i__carry__1 [0]),
        .I1(\lSlvReg5_reg[31]_0 [0]),
        .I2(\lSlvReg5_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__2/i__carry__1 [2]),
        .I4(\lSlvReg5_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__2/i__carry__1 [1]),
        .O(\lRegistersR_reg[2][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__6
       (.I0(\lSetIpushReg1_inferred__3/i__carry__1 [0]),
        .I1(\lSlvReg8_reg[31]_0 [0]),
        .I2(\lSlvReg8_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__3/i__carry__1 [2]),
        .I4(\lSlvReg8_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__3/i__carry__1 [1]),
        .O(\lRegistersR_reg[4][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__7
       (.I0(\lSetIpushReg1_inferred__4/i__carry__1 [0]),
        .I1(\lSlvReg9_reg[31]_0 [0]),
        .I2(\lSlvReg9_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__4/i__carry__1 [2]),
        .I4(\lSlvReg9_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__4/i__carry__1 [1]),
        .O(\lRegistersR_reg[5][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__8
       (.I0(\lSetIpushReg1_inferred__5/i__carry__1 [0]),
        .I1(\lSlvReg10_reg[31]_0 [0]),
        .I2(\lSlvReg10_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__5/i__carry__1 [2]),
        .I4(\lSlvReg10_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__5/i__carry__1 [1]),
        .O(\lRegistersR_reg[6][9] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__9
       (.I0(\lSetIpushReg1_inferred__6/i__carry__1 [0]),
        .I1(\lSlvReg11_reg[31]_0 [0]),
        .I2(\lSlvReg11_reg[31]_0 [2]),
        .I3(\lSetIpushReg1_inferred__6/i__carry__1 [2]),
        .I4(\lSlvReg11_reg[31]_0 [1]),
        .I5(\lSetIpushReg1_inferred__6/i__carry__1 [1]),
        .O(\lRegistersR_reg[7][9] [0]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry_i_5__1
       (.I0(\lSlvReg8_reg[31]_0 [2]),
        .I1(Q[2]),
        .I2(\minusOp_inferred__1/i__carry__2 [2]),
        .I3(DI[1]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'h9669)) 
    i__carry_i_6__1
       (.I0(\lSlvReg8_reg[31]_0 [1]),
        .I1(Q[1]),
        .I2(\minusOp_inferred__1/i__carry__2 [1]),
        .I3(DI[0]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h96)) 
    i__carry_i_7__1
       (.I0(Q[0]),
        .I1(\lSlvReg8_reg[31]_0 [0]),
        .I2(\minusOp_inferred__1/i__carry__2 [0]),
        .O(S[0]));
  FDSE \lAxiAraddrLoc_reg[2] 
       (.C(s00_axi_aclk),
        .CE(lAxiArreadyLoc0),
        .D(s00_lAxiAraddrLoc[0]),
        .Q(lAxiAraddrLoc[2]),
        .S(SR));
  FDSE \lAxiAraddrLoc_reg[3] 
       (.C(s00_axi_aclk),
        .CE(lAxiArreadyLoc0),
        .D(s00_lAxiAraddrLoc[1]),
        .Q(lAxiAraddrLoc[3]),
        .S(SR));
  FDSE \lAxiAraddrLoc_reg[4] 
       (.C(s00_axi_aclk),
        .CE(lAxiArreadyLoc0),
        .D(s00_lAxiAraddrLoc[2]),
        .Q(lAxiAraddrLoc[4]),
        .S(SR));
  FDSE \lAxiAraddrLoc_reg[5] 
       (.C(s00_axi_aclk),
        .CE(lAxiArreadyLoc0),
        .D(s00_lAxiAraddrLoc[3]),
        .Q(lAxiAraddrLoc[5]),
        .S(SR));
  FDSE \lAxiAraddrLoc_reg[6] 
       (.C(s00_axi_aclk),
        .CE(lAxiArreadyLoc0),
        .D(s00_lAxiAraddrLoc[4]),
        .Q(lAxiAraddrLoc[6]),
        .S(SR));
  LUT2 #(
    .INIT(4'h2)) 
    lAxiArreadyLoc_i_1
       (.I0(s00_axi_arvalid),
        .I1(lAxiArreadyLoc_reg_0),
        .O(lAxiArreadyLoc0));
  FDRE lAxiArreadyLoc_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lAxiArreadyLoc0),
        .Q(lAxiArreadyLoc_reg_0),
        .R(SR));
  FDRE \lAxiAwaddrLoc_reg[2] 
       (.C(s00_axi_aclk),
        .CE(lAxiAwreadyLoc0),
        .D(s00_lAxiAwaddrLoc[0]),
        .Q(p_0_in[0]),
        .R(SR));
  FDRE \lAxiAwaddrLoc_reg[3] 
       (.C(s00_axi_aclk),
        .CE(lAxiAwreadyLoc0),
        .D(s00_lAxiAwaddrLoc[1]),
        .Q(p_0_in[1]),
        .R(SR));
  FDRE \lAxiAwaddrLoc_reg[4] 
       (.C(s00_axi_aclk),
        .CE(lAxiAwreadyLoc0),
        .D(s00_lAxiAwaddrLoc[2]),
        .Q(p_0_in[2]),
        .R(SR));
  FDRE \lAxiAwaddrLoc_reg[5] 
       (.C(s00_axi_aclk),
        .CE(lAxiAwreadyLoc0),
        .D(s00_lAxiAwaddrLoc[3]),
        .Q(p_0_in[3]),
        .R(SR));
  FDRE \lAxiAwaddrLoc_reg[6] 
       (.C(s00_axi_aclk),
        .CE(lAxiAwreadyLoc0),
        .D(s00_lAxiAwaddrLoc[4]),
        .Q(p_0_in[4]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    lAxiAwreadyLoc_i_1
       (.I0(lRst_n),
        .O(SR));
  LUT3 #(
    .INIT(8'h08)) 
    lAxiAwreadyLoc_i_2
       (.I0(s00_axi_wvalid),
        .I1(s00_axi_awvalid),
        .I2(lAxiAwreadyLoc_reg_0),
        .O(lAxiAwreadyLoc0));
  FDRE lAxiAwreadyLoc_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lAxiAwreadyLoc0),
        .Q(lAxiAwreadyLoc_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000FFFF80008000)) 
    lAxiBvalidLoc_i_1
       (.I0(s00_axi_wvalid),
        .I1(s00_axi_awvalid),
        .I2(lAxiAwreadyLoc_reg_0),
        .I3(lAxiWreadyLoc_reg_0),
        .I4(s00_axi_bready),
        .I5(s00_lAxiBvalidLoc),
        .O(lAxiBvalidLoc_i_1_n_0));
  FDRE lAxiBvalidLoc_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lAxiBvalidLoc_i_1_n_0),
        .Q(s00_lAxiBvalidLoc),
        .R(SR));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[0]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [0]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[0]_i_2_n_0 ),
        .O(lRegDataOut[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[0]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [0]),
        .I1(lReg2Rd[0]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [0]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [0]),
        .O(\lAxiRdataLoc[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[0]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [0]),
        .I1(\lSlvReg6_reg_n_0_[0] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [0]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[0]),
        .O(\lAxiRdataLoc[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[0]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [0]),
        .I1(\lSlvReg10_reg[31]_0 [0]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [0]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [0]),
        .O(\lAxiRdataLoc[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[0]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [0]),
        .I1(\lSlvReg14_reg[31]_0 [0]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [0]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [0]),
        .O(\lAxiRdataLoc[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[10]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [10]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[10]_i_2_n_0 ),
        .O(lRegDataOut[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[10]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [10]),
        .I1(lReg2Rd[10]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [9]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [10]),
        .O(\lAxiRdataLoc[10]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[10]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [10]),
        .I1(\lSlvReg6_reg_n_0_[10] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [10]),
        .O(\lAxiRdataLoc[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[10]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [10]),
        .I1(\lSlvReg10_reg[31]_0 [10]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [10]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [10]),
        .O(\lAxiRdataLoc[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[10]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [10]),
        .I1(\lSlvReg14_reg[31]_0 [10]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [10]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [10]),
        .O(\lAxiRdataLoc[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[11]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [11]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[11]_i_2_n_0 ),
        .O(lRegDataOut[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[11]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [11]),
        .I1(lReg2Rd[11]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [10]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [11]),
        .O(\lAxiRdataLoc[11]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[11]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [11]),
        .I1(\lSlvReg6_reg_n_0_[11] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [11]),
        .O(\lAxiRdataLoc[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[11]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [11]),
        .I1(\lSlvReg10_reg[31]_0 [11]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [11]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [11]),
        .O(\lAxiRdataLoc[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[11]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [11]),
        .I1(\lSlvReg14_reg[31]_0 [11]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [11]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [11]),
        .O(\lAxiRdataLoc[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[12]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [12]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[12]_i_2_n_0 ),
        .O(lRegDataOut[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[12]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [12]),
        .I1(lReg2Rd[12]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [11]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [12]),
        .O(\lAxiRdataLoc[12]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[12]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [12]),
        .I1(\lSlvReg6_reg_n_0_[12] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [12]),
        .O(\lAxiRdataLoc[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[12]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [12]),
        .I1(\lSlvReg10_reg[31]_0 [12]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [12]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [12]),
        .O(\lAxiRdataLoc[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[12]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [12]),
        .I1(\lSlvReg14_reg[31]_0 [12]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [12]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [12]),
        .O(\lAxiRdataLoc[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[13]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [13]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[13]_i_2_n_0 ),
        .O(lRegDataOut[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[13]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [13]),
        .I1(lReg2Rd[13]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [12]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [13]),
        .O(\lAxiRdataLoc[13]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[13]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [13]),
        .I1(\lSlvReg6_reg_n_0_[13] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [13]),
        .O(\lAxiRdataLoc[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[13]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [13]),
        .I1(\lSlvReg10_reg[31]_0 [13]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [13]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [13]),
        .O(\lAxiRdataLoc[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[13]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [13]),
        .I1(\lSlvReg14_reg[31]_0 [13]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [13]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [13]),
        .O(\lAxiRdataLoc[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[14]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [14]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[14]_i_2_n_0 ),
        .O(lRegDataOut[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[14]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [14]),
        .I1(lReg2Rd[14]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [13]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [14]),
        .O(\lAxiRdataLoc[14]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[14]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [14]),
        .I1(\lSlvReg6_reg_n_0_[14] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [14]),
        .O(\lAxiRdataLoc[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[14]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [14]),
        .I1(\lSlvReg10_reg[31]_0 [14]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [14]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [14]),
        .O(\lAxiRdataLoc[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[14]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [14]),
        .I1(\lSlvReg14_reg[31]_0 [14]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [14]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [14]),
        .O(\lAxiRdataLoc[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[15]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [15]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[15]_i_2_n_0 ),
        .O(lRegDataOut[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[15]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [15]),
        .I1(lReg2Rd[15]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [14]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [15]),
        .O(\lAxiRdataLoc[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[15]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [15]),
        .I1(\lSlvReg6_reg_n_0_[15] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [15]),
        .O(\lAxiRdataLoc[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[15]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [15]),
        .I1(\lSlvReg10_reg[31]_0 [15]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [15]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [15]),
        .O(\lAxiRdataLoc[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[15]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [15]),
        .I1(\lSlvReg14_reg[31]_0 [15]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [15]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [15]),
        .O(\lAxiRdataLoc[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[16]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [16]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[16]_i_2_n_0 ),
        .O(lRegDataOut[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[16]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [16]),
        .I1(lReg2Rd[16]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [15]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [16]),
        .O(\lAxiRdataLoc[16]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[16]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [16]),
        .I1(\lSlvReg6_reg_n_0_[16] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [16]),
        .O(\lAxiRdataLoc[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[16]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [16]),
        .I1(\lSlvReg10_reg[31]_0 [16]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [16]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [16]),
        .O(\lAxiRdataLoc[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[16]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [16]),
        .I1(\lSlvReg14_reg[31]_0 [16]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [16]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [16]),
        .O(\lAxiRdataLoc[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[17]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [17]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[17]_i_2_n_0 ),
        .O(lRegDataOut[17]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[17]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [17]),
        .I1(lReg2Rd[17]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [17]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[17]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[17]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [17]),
        .I1(\lSlvReg6_reg_n_0_[17] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [17]),
        .O(\lAxiRdataLoc[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[17]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [17]),
        .I1(\lSlvReg10_reg[31]_0 [17]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [17]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [17]),
        .O(\lAxiRdataLoc[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[17]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [17]),
        .I1(\lSlvReg14_reg[31]_0 [17]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [17]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [17]),
        .O(\lAxiRdataLoc[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[18]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [18]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[18]_i_2_n_0 ),
        .O(lRegDataOut[18]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[18]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [18]),
        .I1(lReg2Rd[18]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [18]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[18]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[18]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [18]),
        .I1(\lSlvReg6_reg_n_0_[18] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [18]),
        .O(\lAxiRdataLoc[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[18]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [18]),
        .I1(\lSlvReg10_reg[31]_0 [18]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [18]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [18]),
        .O(\lAxiRdataLoc[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[18]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [18]),
        .I1(\lSlvReg14_reg[31]_0 [18]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [18]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [18]),
        .O(\lAxiRdataLoc[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[19]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [19]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[19]_i_2_n_0 ),
        .O(lRegDataOut[19]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[19]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [19]),
        .I1(lReg2Rd[19]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [19]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[19]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[19]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [19]),
        .I1(\lSlvReg6_reg_n_0_[19] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [19]),
        .O(\lAxiRdataLoc[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[19]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [19]),
        .I1(\lSlvReg10_reg[31]_0 [19]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [19]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [19]),
        .O(\lAxiRdataLoc[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[19]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [19]),
        .I1(\lSlvReg14_reg[31]_0 [19]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [19]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [19]),
        .O(\lAxiRdataLoc[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[1]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [1]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[1]_i_2_n_0 ),
        .O(lRegDataOut[1]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[1]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [1]),
        .I1(lReg2Rd[1]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [1]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[1]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [1]),
        .I1(\lSlvReg6_reg_n_0_[1] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [1]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[1]),
        .O(\lAxiRdataLoc[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[1]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [1]),
        .I1(\lSlvReg10_reg[31]_0 [1]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [1]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [1]),
        .O(\lAxiRdataLoc[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[1]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [1]),
        .I1(\lSlvReg14_reg[31]_0 [1]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [1]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [1]),
        .O(\lAxiRdataLoc[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[20]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [20]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[20]_i_2_n_0 ),
        .O(lRegDataOut[20]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[20]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [20]),
        .I1(lReg2Rd[20]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [20]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[20]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[20]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [20]),
        .I1(\lSlvReg6_reg_n_0_[20] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [20]),
        .O(\lAxiRdataLoc[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[20]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [20]),
        .I1(\lSlvReg10_reg[31]_0 [20]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [20]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [20]),
        .O(\lAxiRdataLoc[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[20]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [20]),
        .I1(\lSlvReg14_reg[31]_0 [20]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [20]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [20]),
        .O(\lAxiRdataLoc[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[21]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [21]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[21]_i_2_n_0 ),
        .O(lRegDataOut[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[21]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [21]),
        .I1(lReg2Rd[21]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [16]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [21]),
        .O(\lAxiRdataLoc[21]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[21]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [21]),
        .I1(\lSlvReg6_reg_n_0_[21] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [21]),
        .O(\lAxiRdataLoc[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[21]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [21]),
        .I1(\lSlvReg10_reg[31]_0 [21]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [21]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [21]),
        .O(\lAxiRdataLoc[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[21]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [21]),
        .I1(\lSlvReg14_reg[31]_0 [21]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [21]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [21]),
        .O(\lAxiRdataLoc[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[22]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [22]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[22]_i_2_n_0 ),
        .O(lRegDataOut[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[22]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [22]),
        .I1(\lSlvReg2_reg_n_0_[22] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [17]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [22]),
        .O(\lAxiRdataLoc[22]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[22]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [22]),
        .I1(\lSlvReg6_reg_n_0_[22] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [22]),
        .O(\lAxiRdataLoc[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[22]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [22]),
        .I1(\lSlvReg10_reg[31]_0 [22]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [22]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [22]),
        .O(\lAxiRdataLoc[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[22]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [22]),
        .I1(\lSlvReg14_reg[31]_0 [22]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [22]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [22]),
        .O(\lAxiRdataLoc[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[23]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [23]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[23]_i_2_n_0 ),
        .O(lRegDataOut[23]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[23]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [23]),
        .I1(\lSlvReg2_reg_n_0_[23] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [23]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[23]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[23]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [23]),
        .I1(\lSlvReg6_reg_n_0_[23] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [23]),
        .O(\lAxiRdataLoc[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[23]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [23]),
        .I1(\lSlvReg10_reg[31]_0 [23]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [23]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [23]),
        .O(\lAxiRdataLoc[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[23]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [23]),
        .I1(\lSlvReg14_reg[31]_0 [23]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [23]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [23]),
        .O(\lAxiRdataLoc[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[24]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [24]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[24]_i_2_n_0 ),
        .O(lRegDataOut[24]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[24]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[24] ),
        .I1(\lSlvReg2_reg_n_0_[24] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [24]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[24]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[24]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [24]),
        .I1(\lSlvReg6_reg_n_0_[24] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [24]),
        .O(\lAxiRdataLoc[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[24]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [24]),
        .I1(\lSlvReg10_reg[31]_0 [24]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [24]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [24]),
        .O(\lAxiRdataLoc[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[24]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [24]),
        .I1(\lSlvReg14_reg[31]_0 [24]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [24]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [24]),
        .O(\lAxiRdataLoc[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[25]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [25]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[25]_i_2_n_0 ),
        .O(lRegDataOut[25]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[25]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[25] ),
        .I1(\lSlvReg2_reg_n_0_[25] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [25]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[25]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[25]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [25]),
        .I1(\lSlvReg6_reg_n_0_[25] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [25]),
        .O(\lAxiRdataLoc[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[25]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [25]),
        .I1(\lSlvReg10_reg[31]_0 [25]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [25]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [25]),
        .O(\lAxiRdataLoc[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[25]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [25]),
        .I1(\lSlvReg14_reg[31]_0 [25]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [25]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [25]),
        .O(\lAxiRdataLoc[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[26]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [26]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[26]_i_2_n_0 ),
        .O(lRegDataOut[26]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[26]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[26] ),
        .I1(\lSlvReg2_reg_n_0_[26] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [26]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[26]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[26]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [26]),
        .I1(\lSlvReg6_reg_n_0_[26] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [26]),
        .O(\lAxiRdataLoc[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[26]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [26]),
        .I1(\lSlvReg10_reg[31]_0 [26]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [26]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [26]),
        .O(\lAxiRdataLoc[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[26]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [26]),
        .I1(\lSlvReg14_reg[31]_0 [26]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [26]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [26]),
        .O(\lAxiRdataLoc[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[27]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [27]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[27]_i_2_n_0 ),
        .O(lRegDataOut[27]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[27]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[27] ),
        .I1(\lSlvReg2_reg_n_0_[27] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [27]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[27]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[27]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [27]),
        .I1(\lSlvReg6_reg_n_0_[27] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [27]),
        .O(\lAxiRdataLoc[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[27]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [27]),
        .I1(\lSlvReg10_reg[31]_0 [27]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [27]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [27]),
        .O(\lAxiRdataLoc[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[27]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [27]),
        .I1(\lSlvReg14_reg[31]_0 [27]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [27]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [27]),
        .O(\lAxiRdataLoc[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[28]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [28]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[28]_i_2_n_0 ),
        .O(lRegDataOut[28]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[28]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[28] ),
        .I1(\lSlvReg2_reg_n_0_[28] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [28]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[28]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[28]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [28]),
        .I1(\lSlvReg6_reg_n_0_[28] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [28]),
        .O(\lAxiRdataLoc[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[28]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [28]),
        .I1(\lSlvReg10_reg[31]_0 [28]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [28]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [28]),
        .O(\lAxiRdataLoc[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[28]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [28]),
        .I1(\lSlvReg14_reg[31]_0 [28]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [28]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [28]),
        .O(\lAxiRdataLoc[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[29]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [29]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[29]_i_2_n_0 ),
        .O(lRegDataOut[29]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[29]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[29] ),
        .I1(\lSlvReg2_reg_n_0_[29] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [29]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[29]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [29]),
        .I1(\lSlvReg6_reg_n_0_[29] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [29]),
        .O(\lAxiRdataLoc[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[29]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [29]),
        .I1(\lSlvReg10_reg[31]_0 [29]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [29]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [29]),
        .O(\lAxiRdataLoc[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[29]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [29]),
        .I1(\lSlvReg14_reg[31]_0 [29]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [29]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [29]),
        .O(\lAxiRdataLoc[29]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[2]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [2]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[2]_i_2_n_0 ),
        .O(lRegDataOut[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[2]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [2]),
        .I1(lReg2Rd[2]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [1]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [2]),
        .O(\lAxiRdataLoc[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[2]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [2]),
        .I1(\lSlvReg6_reg_n_0_[2] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [2]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[2]),
        .O(\lAxiRdataLoc[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[2]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [2]),
        .I1(\lSlvReg10_reg[31]_0 [2]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [2]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [2]),
        .O(\lAxiRdataLoc[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[2]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [2]),
        .I1(\lSlvReg14_reg[31]_0 [2]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [2]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [2]),
        .O(\lAxiRdataLoc[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[30]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [30]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[30]_i_2_n_0 ),
        .O(lRegDataOut[30]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[30]_i_5 
       (.I0(\lSlvReg3_reg_n_0_[30] ),
        .I1(\lSlvReg2_reg_n_0_[30] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [30]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[30]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[30]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [30]),
        .I1(\lSlvReg6_reg_n_0_[30] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [30]),
        .O(\lAxiRdataLoc[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[30]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [30]),
        .I1(\lSlvReg10_reg[31]_0 [30]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [30]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [30]),
        .O(\lAxiRdataLoc[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[30]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [30]),
        .I1(\lSlvReg14_reg[31]_0 [30]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [30]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [30]),
        .O(\lAxiRdataLoc[30]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \lAxiRdataLoc[31]_i_1 
       (.I0(lAxiArreadyLoc_reg_0),
        .I1(s00_axi_arvalid),
        .I2(lAxiRvalidLoc_reg_0),
        .O(lSlvRegRdEn));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[31]_i_10 
       (.I0(\lSlvReg11_reg[31]_0 [31]),
        .I1(\lSlvReg10_reg[31]_0 [31]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [31]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [31]),
        .O(\lAxiRdataLoc[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[31]_i_11 
       (.I0(\lSlvReg15_reg[31]_0 [31]),
        .I1(\lSlvReg14_reg[31]_0 [31]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [31]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [31]),
        .O(\lAxiRdataLoc[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[31]_i_2 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [31]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[31]_i_5_n_0 ),
        .O(lRegDataOut[31]));
  LUT2 #(
    .INIT(4'hE)) 
    \lAxiRdataLoc[31]_i_3 
       (.I0(lAxiAraddrLoc[3]),
        .I1(lAxiAraddrLoc[4]),
        .O(\lAxiRdataLoc[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \lAxiRdataLoc[31]_i_4 
       (.I0(lAxiAraddrLoc[4]),
        .I1(lAxiAraddrLoc[3]),
        .I2(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \lAxiRdataLoc[31]_i_8 
       (.I0(\lSlvReg3_reg_n_0_[31] ),
        .I1(\lSlvReg2_reg_n_0_[31] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[0]_0 [31]),
        .I4(lAxiAraddrLoc[2]),
        .O(\lAxiRdataLoc[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[31]_i_9 
       (.I0(\lSlvReg7_reg[31]_0 [31]),
        .I1(\lSlvReg6_reg_n_0_[31] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [31]),
        .O(\lAxiRdataLoc[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[3]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [3]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[3]_i_2_n_0 ),
        .O(lRegDataOut[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[3]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [3]),
        .I1(lReg2Rd[3]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [2]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [3]),
        .O(\lAxiRdataLoc[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[3]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [3]),
        .I1(\lSlvReg6_reg_n_0_[3] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [3]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[3]),
        .O(\lAxiRdataLoc[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[3]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [3]),
        .I1(\lSlvReg10_reg[31]_0 [3]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [3]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [3]),
        .O(\lAxiRdataLoc[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[3]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [3]),
        .I1(\lSlvReg14_reg[31]_0 [3]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [3]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [3]),
        .O(\lAxiRdataLoc[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[4]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [4]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[4]_i_2_n_0 ),
        .O(lRegDataOut[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[4]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [4]),
        .I1(lReg2Rd[4]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [3]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [4]),
        .O(\lAxiRdataLoc[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[4]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [4]),
        .I1(\lSlvReg6_reg_n_0_[4] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [4]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[4]),
        .O(\lAxiRdataLoc[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[4]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [4]),
        .I1(\lSlvReg10_reg[31]_0 [4]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [4]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [4]),
        .O(\lAxiRdataLoc[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[4]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [4]),
        .I1(\lSlvReg14_reg[31]_0 [4]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [4]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [4]),
        .O(\lAxiRdataLoc[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[5]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [5]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[5]_i_2_n_0 ),
        .O(lRegDataOut[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[5]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [5]),
        .I1(lReg2Rd[5]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [4]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [5]),
        .O(\lAxiRdataLoc[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[5]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [5]),
        .I1(\lSlvReg6_reg_n_0_[5] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [5]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[5]),
        .O(\lAxiRdataLoc[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[5]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [5]),
        .I1(\lSlvReg10_reg[31]_0 [5]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [5]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [5]),
        .O(\lAxiRdataLoc[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[5]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [5]),
        .I1(\lSlvReg14_reg[31]_0 [5]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [5]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [5]),
        .O(\lAxiRdataLoc[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[6]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [6]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[6]_i_2_n_0 ),
        .O(lRegDataOut[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[6]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [6]),
        .I1(lReg2Rd[6]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [5]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [6]),
        .O(\lAxiRdataLoc[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[6]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [6]),
        .I1(\lSlvReg6_reg_n_0_[6] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [6]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[6]),
        .O(\lAxiRdataLoc[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[6]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [6]),
        .I1(\lSlvReg10_reg[31]_0 [6]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [6]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [6]),
        .O(\lAxiRdataLoc[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[6]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [6]),
        .I1(\lSlvReg14_reg[31]_0 [6]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [6]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [6]),
        .O(\lAxiRdataLoc[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[7]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [7]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[7]_i_2_n_0 ),
        .O(lRegDataOut[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[7]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [7]),
        .I1(lReg2Rd[7]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [6]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [7]),
        .O(\lAxiRdataLoc[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[7]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [7]),
        .I1(\lSlvReg6_reg_n_0_[7] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg5_reg[31]_0 [7]),
        .I4(lAxiAraddrLoc[2]),
        .I5(dout[7]),
        .O(\lAxiRdataLoc[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[7]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [7]),
        .I1(\lSlvReg10_reg[31]_0 [7]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [7]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [7]),
        .O(\lAxiRdataLoc[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[7]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [7]),
        .I1(\lSlvReg14_reg[31]_0 [7]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [7]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [7]),
        .O(\lAxiRdataLoc[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[8]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [8]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[8]_i_2_n_0 ),
        .O(lRegDataOut[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[8]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [8]),
        .I1(lReg2Rd[8]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [7]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [8]),
        .O(\lAxiRdataLoc[8]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[8]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [8]),
        .I1(\lSlvReg6_reg_n_0_[8] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [8]),
        .O(\lAxiRdataLoc[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[8]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [8]),
        .I1(\lSlvReg10_reg[31]_0 [8]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [8]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [8]),
        .O(\lAxiRdataLoc[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[8]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [8]),
        .I1(\lSlvReg14_reg[31]_0 [8]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [8]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [8]),
        .O(\lAxiRdataLoc[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \lAxiRdataLoc[9]_i_1 
       (.I0(\lAxiRdataLoc[31]_i_3_n_0 ),
        .I1(\lSlvReg16_reg[31]_0 [9]),
        .I2(\lAxiRdataLoc[31]_i_4_n_0 ),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .I5(\lAxiRdataLoc_reg[9]_i_2_n_0 ),
        .O(lRegDataOut[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[9]_i_5 
       (.I0(\lSlvReg3_reg[23]_0 [9]),
        .I1(lReg2Rd[9]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lRegisters[1]_1 [8]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lRegisters[0]_0 [9]),
        .O(\lAxiRdataLoc[9]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \lAxiRdataLoc[9]_i_6 
       (.I0(\lSlvReg7_reg[31]_0 [9]),
        .I1(\lSlvReg6_reg_n_0_[9] ),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[2]),
        .I4(\lSlvReg5_reg[31]_0 [9]),
        .O(\lAxiRdataLoc[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[9]_i_7 
       (.I0(\lSlvReg11_reg[31]_0 [9]),
        .I1(\lSlvReg10_reg[31]_0 [9]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg9_reg[31]_0 [9]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg8_reg[31]_0 [9]),
        .O(\lAxiRdataLoc[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \lAxiRdataLoc[9]_i_8 
       (.I0(\lSlvReg15_reg[31]_0 [9]),
        .I1(\lSlvReg14_reg[31]_0 [9]),
        .I2(lAxiAraddrLoc[3]),
        .I3(\lSlvReg13_reg[31]_0 [9]),
        .I4(lAxiAraddrLoc[2]),
        .I5(\lSlvReg12_reg[31]_0 [9]),
        .O(\lAxiRdataLoc[9]_i_8_n_0 ));
  FDRE \lAxiRdataLoc_reg[0] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[0]),
        .Q(s00_lAxiRdata[0]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[0]_i_2 
       (.I0(\lAxiRdataLoc_reg[0]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[0]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[0]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[0]_i_3 
       (.I0(\lAxiRdataLoc[0]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[0]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[0]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[0]_i_4 
       (.I0(\lAxiRdataLoc[0]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[0]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[0]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[10] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[10]),
        .Q(s00_lAxiRdata[10]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[10]_i_2 
       (.I0(\lAxiRdataLoc_reg[10]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[10]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[10]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[10]_i_3 
       (.I0(\lAxiRdataLoc[10]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[10]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[10]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[10]_i_4 
       (.I0(\lAxiRdataLoc[10]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[10]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[10]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[11] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[11]),
        .Q(s00_lAxiRdata[11]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[11]_i_2 
       (.I0(\lAxiRdataLoc_reg[11]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[11]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[11]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[11]_i_3 
       (.I0(\lAxiRdataLoc[11]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[11]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[11]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[11]_i_4 
       (.I0(\lAxiRdataLoc[11]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[11]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[11]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[12] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[12]),
        .Q(s00_lAxiRdata[12]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[12]_i_2 
       (.I0(\lAxiRdataLoc_reg[12]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[12]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[12]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[12]_i_3 
       (.I0(\lAxiRdataLoc[12]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[12]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[12]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[12]_i_4 
       (.I0(\lAxiRdataLoc[12]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[12]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[12]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[13] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[13]),
        .Q(s00_lAxiRdata[13]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[13]_i_2 
       (.I0(\lAxiRdataLoc_reg[13]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[13]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[13]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[13]_i_3 
       (.I0(\lAxiRdataLoc[13]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[13]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[13]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[13]_i_4 
       (.I0(\lAxiRdataLoc[13]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[13]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[13]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[14] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[14]),
        .Q(s00_lAxiRdata[14]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[14]_i_2 
       (.I0(\lAxiRdataLoc_reg[14]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[14]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[14]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[14]_i_3 
       (.I0(\lAxiRdataLoc[14]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[14]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[14]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[14]_i_4 
       (.I0(\lAxiRdataLoc[14]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[14]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[14]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[15] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[15]),
        .Q(s00_lAxiRdata[15]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[15]_i_2 
       (.I0(\lAxiRdataLoc_reg[15]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[15]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[15]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[15]_i_3 
       (.I0(\lAxiRdataLoc[15]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[15]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[15]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[15]_i_4 
       (.I0(\lAxiRdataLoc[15]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[15]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[15]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[16] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[16]),
        .Q(s00_lAxiRdata[16]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[16]_i_2 
       (.I0(\lAxiRdataLoc_reg[16]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[16]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[16]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[16]_i_3 
       (.I0(\lAxiRdataLoc[16]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[16]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[16]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[16]_i_4 
       (.I0(\lAxiRdataLoc[16]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[16]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[16]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[17] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[17]),
        .Q(s00_lAxiRdata[17]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[17]_i_2 
       (.I0(\lAxiRdataLoc_reg[17]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[17]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[17]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[17]_i_3 
       (.I0(\lAxiRdataLoc[17]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[17]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[17]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[17]_i_4 
       (.I0(\lAxiRdataLoc[17]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[17]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[17]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[18] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[18]),
        .Q(s00_lAxiRdata[18]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[18]_i_2 
       (.I0(\lAxiRdataLoc_reg[18]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[18]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[18]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[18]_i_3 
       (.I0(\lAxiRdataLoc[18]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[18]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[18]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[18]_i_4 
       (.I0(\lAxiRdataLoc[18]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[18]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[18]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[19] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[19]),
        .Q(s00_lAxiRdata[19]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[19]_i_2 
       (.I0(\lAxiRdataLoc_reg[19]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[19]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[19]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[19]_i_3 
       (.I0(\lAxiRdataLoc[19]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[19]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[19]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[19]_i_4 
       (.I0(\lAxiRdataLoc[19]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[19]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[19]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[1] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[1]),
        .Q(s00_lAxiRdata[1]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[1]_i_2 
       (.I0(\lAxiRdataLoc_reg[1]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[1]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[1]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[1]_i_3 
       (.I0(\lAxiRdataLoc[1]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[1]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[1]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[1]_i_4 
       (.I0(\lAxiRdataLoc[1]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[1]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[1]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[20] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[20]),
        .Q(s00_lAxiRdata[20]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[20]_i_2 
       (.I0(\lAxiRdataLoc_reg[20]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[20]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[20]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[20]_i_3 
       (.I0(\lAxiRdataLoc[20]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[20]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[20]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[20]_i_4 
       (.I0(\lAxiRdataLoc[20]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[20]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[20]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[21] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[21]),
        .Q(s00_lAxiRdata[21]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[21]_i_2 
       (.I0(\lAxiRdataLoc_reg[21]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[21]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[21]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[21]_i_3 
       (.I0(\lAxiRdataLoc[21]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[21]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[21]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[21]_i_4 
       (.I0(\lAxiRdataLoc[21]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[21]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[21]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[22] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[22]),
        .Q(s00_lAxiRdata[22]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[22]_i_2 
       (.I0(\lAxiRdataLoc_reg[22]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[22]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[22]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[22]_i_3 
       (.I0(\lAxiRdataLoc[22]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[22]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[22]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[22]_i_4 
       (.I0(\lAxiRdataLoc[22]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[22]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[22]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[23] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[23]),
        .Q(s00_lAxiRdata[23]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[23]_i_2 
       (.I0(\lAxiRdataLoc_reg[23]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[23]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[23]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[23]_i_3 
       (.I0(\lAxiRdataLoc[23]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[23]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[23]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[23]_i_4 
       (.I0(\lAxiRdataLoc[23]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[23]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[23]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[24] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[24]),
        .Q(s00_lAxiRdata[24]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[24]_i_2 
       (.I0(\lAxiRdataLoc_reg[24]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[24]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[24]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[24]_i_3 
       (.I0(\lAxiRdataLoc[24]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[24]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[24]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[24]_i_4 
       (.I0(\lAxiRdataLoc[24]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[24]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[24]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[25] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[25]),
        .Q(s00_lAxiRdata[25]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[25]_i_2 
       (.I0(\lAxiRdataLoc_reg[25]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[25]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[25]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[25]_i_3 
       (.I0(\lAxiRdataLoc[25]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[25]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[25]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[25]_i_4 
       (.I0(\lAxiRdataLoc[25]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[25]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[25]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[26] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[26]),
        .Q(s00_lAxiRdata[26]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[26]_i_2 
       (.I0(\lAxiRdataLoc_reg[26]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[26]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[26]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[26]_i_3 
       (.I0(\lAxiRdataLoc[26]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[26]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[26]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[26]_i_4 
       (.I0(\lAxiRdataLoc[26]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[26]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[26]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[27] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[27]),
        .Q(s00_lAxiRdata[27]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[27]_i_2 
       (.I0(\lAxiRdataLoc_reg[27]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[27]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[27]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[27]_i_3 
       (.I0(\lAxiRdataLoc[27]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[27]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[27]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[27]_i_4 
       (.I0(\lAxiRdataLoc[27]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[27]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[27]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[28] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[28]),
        .Q(s00_lAxiRdata[28]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[28]_i_2 
       (.I0(\lAxiRdataLoc_reg[28]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[28]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[28]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[28]_i_3 
       (.I0(\lAxiRdataLoc[28]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[28]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[28]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[28]_i_4 
       (.I0(\lAxiRdataLoc[28]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[28]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[28]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[29] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[29]),
        .Q(s00_lAxiRdata[29]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[29]_i_2 
       (.I0(\lAxiRdataLoc_reg[29]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[29]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[29]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[29]_i_3 
       (.I0(\lAxiRdataLoc[29]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[29]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[29]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[29]_i_4 
       (.I0(\lAxiRdataLoc[29]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[29]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[29]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[2] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[2]),
        .Q(s00_lAxiRdata[2]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[2]_i_2 
       (.I0(\lAxiRdataLoc_reg[2]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[2]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[2]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[2]_i_3 
       (.I0(\lAxiRdataLoc[2]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[2]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[2]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[2]_i_4 
       (.I0(\lAxiRdataLoc[2]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[2]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[2]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[30] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[30]),
        .Q(s00_lAxiRdata[30]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[30]_i_2 
       (.I0(\lAxiRdataLoc_reg[30]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[30]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[30]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[30]_i_3 
       (.I0(\lAxiRdataLoc[30]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[30]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[30]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[30]_i_4 
       (.I0(\lAxiRdataLoc[30]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[30]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[30]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[31] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[31]),
        .Q(s00_lAxiRdata[31]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[31]_i_5 
       (.I0(\lAxiRdataLoc_reg[31]_i_6_n_0 ),
        .I1(\lAxiRdataLoc_reg[31]_i_7_n_0 ),
        .O(\lAxiRdataLoc_reg[31]_i_5_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[31]_i_6 
       (.I0(\lAxiRdataLoc[31]_i_8_n_0 ),
        .I1(\lAxiRdataLoc[31]_i_9_n_0 ),
        .O(\lAxiRdataLoc_reg[31]_i_6_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[31]_i_7 
       (.I0(\lAxiRdataLoc[31]_i_10_n_0 ),
        .I1(\lAxiRdataLoc[31]_i_11_n_0 ),
        .O(\lAxiRdataLoc_reg[31]_i_7_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[3] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[3]),
        .Q(s00_lAxiRdata[3]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[3]_i_2 
       (.I0(\lAxiRdataLoc_reg[3]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[3]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[3]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[3]_i_3 
       (.I0(\lAxiRdataLoc[3]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[3]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[3]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[3]_i_4 
       (.I0(\lAxiRdataLoc[3]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[3]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[3]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[4] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[4]),
        .Q(s00_lAxiRdata[4]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[4]_i_2 
       (.I0(\lAxiRdataLoc_reg[4]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[4]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[4]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[4]_i_3 
       (.I0(\lAxiRdataLoc[4]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[4]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[4]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[4]_i_4 
       (.I0(\lAxiRdataLoc[4]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[4]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[4]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[5] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[5]),
        .Q(s00_lAxiRdata[5]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[5]_i_2 
       (.I0(\lAxiRdataLoc_reg[5]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[5]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[5]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[5]_i_3 
       (.I0(\lAxiRdataLoc[5]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[5]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[5]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[5]_i_4 
       (.I0(\lAxiRdataLoc[5]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[5]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[5]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[6] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[6]),
        .Q(s00_lAxiRdata[6]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[6]_i_2 
       (.I0(\lAxiRdataLoc_reg[6]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[6]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[6]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[6]_i_3 
       (.I0(\lAxiRdataLoc[6]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[6]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[6]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[6]_i_4 
       (.I0(\lAxiRdataLoc[6]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[6]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[6]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[7] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[7]),
        .Q(s00_lAxiRdata[7]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[7]_i_2 
       (.I0(\lAxiRdataLoc_reg[7]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[7]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[7]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[7]_i_3 
       (.I0(\lAxiRdataLoc[7]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[7]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[7]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[7]_i_4 
       (.I0(\lAxiRdataLoc[7]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[7]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[7]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[8] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[8]),
        .Q(s00_lAxiRdata[8]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[8]_i_2 
       (.I0(\lAxiRdataLoc_reg[8]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[8]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[8]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[8]_i_3 
       (.I0(\lAxiRdataLoc[8]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[8]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[8]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[8]_i_4 
       (.I0(\lAxiRdataLoc[8]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[8]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[8]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  FDRE \lAxiRdataLoc_reg[9] 
       (.C(s00_axi_aclk),
        .CE(lSlvRegRdEn),
        .D(lRegDataOut[9]),
        .Q(s00_lAxiRdata[9]),
        .R(SR));
  MUXF8 \lAxiRdataLoc_reg[9]_i_2 
       (.I0(\lAxiRdataLoc_reg[9]_i_3_n_0 ),
        .I1(\lAxiRdataLoc_reg[9]_i_4_n_0 ),
        .O(\lAxiRdataLoc_reg[9]_i_2_n_0 ),
        .S(lAxiAraddrLoc[5]));
  MUXF7 \lAxiRdataLoc_reg[9]_i_3 
       (.I0(\lAxiRdataLoc[9]_i_5_n_0 ),
        .I1(\lAxiRdataLoc[9]_i_6_n_0 ),
        .O(\lAxiRdataLoc_reg[9]_i_3_n_0 ),
        .S(lAxiAraddrLoc[4]));
  MUXF7 \lAxiRdataLoc_reg[9]_i_4 
       (.I0(\lAxiRdataLoc[9]_i_7_n_0 ),
        .I1(\lAxiRdataLoc[9]_i_8_n_0 ),
        .O(\lAxiRdataLoc_reg[9]_i_4_n_0 ),
        .S(lAxiAraddrLoc[4]));
  LUT4 #(
    .INIT(16'h08F8)) 
    lAxiRvalidLoc_i_1
       (.I0(s00_axi_arvalid),
        .I1(lAxiArreadyLoc_reg_0),
        .I2(lAxiRvalidLoc_reg_0),
        .I3(s00_axi_rready),
        .O(lAxiRvalidLoc_i_1_n_0));
  FDRE lAxiRvalidLoc_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lAxiRvalidLoc_i_1_n_0),
        .Q(lAxiRvalidLoc_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h08)) 
    lAxiWreadyLoc_i_1
       (.I0(s00_axi_wvalid),
        .I1(s00_axi_awvalid),
        .I2(lAxiWreadyLoc_reg_0),
        .O(lAxiWreadyLoc0));
  FDRE lAxiWreadyLoc_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lAxiWreadyLoc0),
        .Q(lAxiWreadyLoc_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000AA808080)) 
    lIrqOut_i_1
       (.I0(\lRegisters[0]_0 [3]),
        .I1(lReg2Rd[21]),
        .I2(\lRegisters[1]_1 [16]),
        .I3(lReg2Rd[0]),
        .I4(\lRegisters[1]_1 [0]),
        .I5(\lRegisters[0]_0 [31]),
        .O(\lSlvReg0_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[0][5]_i_1 
       (.I0(\lSetIpushReg_reg[0] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[10][17]_i_1 
       (.I0(\lSetIpushReg_reg[10] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[11][17]_i_1 
       (.I0(\lSetIpushReg_reg[11] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[12][17]_i_1 
       (.I0(\lSetIpushReg_reg[12] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[2][15]_i_1 
       (.I0(\lSetIpushReg_reg[2] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[3][26]_i_1 
       (.I0(\lSetIpushReg_reg[3] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[5][17]_i_1 
       (.I0(\lSetIpushReg_reg[5] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[6][17]_i_1 
       (.I0(\lSetIpushReg_reg[6] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[7][17]_i_1 
       (.I0(\lSetIpushReg_reg[7] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[8][17]_i_1 
       (.I0(\lSetIpushReg_reg[8] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \lRegistersDin[9][17]_i_1 
       (.I0(\lSetIpushReg_reg[9] ),
        .I1(lRegRstR),
        .I2(\lRegisters[0]_0 [31]),
        .O(lRegRstR_reg_2));
  LUT5 #(
    .INIT(32'h00800000)) 
    lSPI_RxFifoRdEn_i_1
       (.I0(lSlvReg4RdEn__3),
        .I1(lAxiArreadyLoc_reg_0),
        .I2(s00_axi_arvalid),
        .I3(lAxiRvalidLoc_reg_0),
        .I4(lRst_n),
        .O(lSPI_RxFifoRdEn_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000002)) 
    lSPI_RxFifoRdEn_i_2
       (.I0(lAxiAraddrLoc[4]),
        .I1(lAxiAraddrLoc[2]),
        .I2(lAxiAraddrLoc[3]),
        .I3(lAxiAraddrLoc[5]),
        .I4(lAxiAraddrLoc[6]),
        .O(lSlvReg4RdEn__3));
  FDRE lSPI_RxFifoRdEn_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lSPI_RxFifoRdEn_i_1_n_0),
        .Q(rd_en),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    lSPI_TxFifoWrEn_i_1
       (.I0(p_0_in[4]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[0]),
        .I5(p_29_in),
        .O(lSPI_TxFifoWrEn0));
  FDRE lSPI_TxFifoWrEn_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lSPI_TxFifoWrEn0),
        .Q(wr_en),
        .R(SR));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__0_i_1
       (.I0(lSetIpushReg1_carry__1[21]),
        .I1(\lSlvReg7_reg[31]_0 [21]),
        .I2(\lSlvReg7_reg[31]_0 [23]),
        .I3(lSetIpushReg1_carry__1[23]),
        .I4(\lSlvReg7_reg[31]_0 [22]),
        .I5(lSetIpushReg1_carry__1[22]),
        .O(\lRegistersR_reg[3][21] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__0_i_2
       (.I0(lSetIpushReg1_carry__1[18]),
        .I1(\lSlvReg7_reg[31]_0 [18]),
        .I2(\lSlvReg7_reg[31]_0 [20]),
        .I3(lSetIpushReg1_carry__1[20]),
        .I4(\lSlvReg7_reg[31]_0 [19]),
        .I5(lSetIpushReg1_carry__1[19]),
        .O(\lRegistersR_reg[3][21] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__0_i_3
       (.I0(lSetIpushReg1_carry__1[15]),
        .I1(\lSlvReg7_reg[31]_0 [15]),
        .I2(\lSlvReg7_reg[31]_0 [17]),
        .I3(lSetIpushReg1_carry__1[17]),
        .I4(\lSlvReg7_reg[31]_0 [16]),
        .I5(lSetIpushReg1_carry__1[16]),
        .O(\lRegistersR_reg[3][21] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__0_i_4
       (.I0(lSetIpushReg1_carry__1[12]),
        .I1(\lSlvReg7_reg[31]_0 [12]),
        .I2(\lSlvReg7_reg[31]_0 [14]),
        .I3(lSetIpushReg1_carry__1[14]),
        .I4(\lSlvReg7_reg[31]_0 [13]),
        .I5(lSetIpushReg1_carry__1[13]),
        .O(\lRegistersR_reg[3][21] [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    lSetIpushReg1_carry__1_i_1
       (.I0(lSetIpushReg1_carry__1[30]),
        .I1(\lSlvReg7_reg[31]_0 [30]),
        .I2(lSetIpushReg1_carry__1[31]),
        .I3(\lSlvReg7_reg[31]_0 [31]),
        .O(\lRegistersR_reg[3][30] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__1_i_2
       (.I0(lSetIpushReg1_carry__1[27]),
        .I1(\lSlvReg7_reg[31]_0 [27]),
        .I2(\lSlvReg7_reg[31]_0 [29]),
        .I3(lSetIpushReg1_carry__1[29]),
        .I4(\lSlvReg7_reg[31]_0 [28]),
        .I5(lSetIpushReg1_carry__1[28]),
        .O(\lRegistersR_reg[3][30] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry__1_i_3
       (.I0(lSetIpushReg1_carry__1[24]),
        .I1(\lSlvReg7_reg[31]_0 [24]),
        .I2(\lSlvReg7_reg[31]_0 [26]),
        .I3(lSetIpushReg1_carry__1[26]),
        .I4(\lSlvReg7_reg[31]_0 [25]),
        .I5(lSetIpushReg1_carry__1[25]),
        .O(\lRegistersR_reg[3][30] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry_i_1
       (.I0(lSetIpushReg1_carry__1[9]),
        .I1(\lSlvReg7_reg[31]_0 [9]),
        .I2(\lSlvReg7_reg[31]_0 [11]),
        .I3(lSetIpushReg1_carry__1[11]),
        .I4(\lSlvReg7_reg[31]_0 [10]),
        .I5(lSetIpushReg1_carry__1[10]),
        .O(\lRegistersR_reg[3][9] [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry_i_2
       (.I0(lSetIpushReg1_carry__1[6]),
        .I1(\lSlvReg7_reg[31]_0 [6]),
        .I2(\lSlvReg7_reg[31]_0 [8]),
        .I3(lSetIpushReg1_carry__1[8]),
        .I4(\lSlvReg7_reg[31]_0 [7]),
        .I5(lSetIpushReg1_carry__1[7]),
        .O(\lRegistersR_reg[3][9] [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry_i_3
       (.I0(lSetIpushReg1_carry__1[3]),
        .I1(\lSlvReg7_reg[31]_0 [3]),
        .I2(\lSlvReg7_reg[31]_0 [5]),
        .I3(lSetIpushReg1_carry__1[5]),
        .I4(\lSlvReg7_reg[31]_0 [4]),
        .I5(lSetIpushReg1_carry__1[4]),
        .O(\lRegistersR_reg[3][9] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    lSetIpushReg1_carry_i_4
       (.I0(lSetIpushReg1_carry__1[0]),
        .I1(\lSlvReg7_reg[31]_0 [0]),
        .I2(\lSlvReg7_reg[31]_0 [2]),
        .I3(lSetIpushReg1_carry__1[2]),
        .I4(\lSlvReg7_reg[31]_0 [1]),
        .I5(lSetIpushReg1_carry__1[1]),
        .O(\lRegistersR_reg[3][9] [0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[0]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[0] ),
        .I3(\lSetIpushReg_reg[13] [0]),
        .I4(\lSetIpushReg_reg[0]_0 ),
        .O(\lSlvReg0_reg[31]_14 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[10]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[10] ),
        .I3(\lSetIpushReg_reg[13] [10]),
        .I4(p_23_in),
        .O(\lSlvReg0_reg[31]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[11]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[11] ),
        .I3(\lSetIpushReg_reg[13] [11]),
        .I4(p_24_in),
        .O(\lSlvReg0_reg[31]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[12]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[12] ),
        .I3(\lSetIpushReg_reg[13] [12]),
        .I4(p_25_in),
        .O(\lSlvReg0_reg[31]_2 ));
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[13]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(CO),
        .I3(\lSetIpushReg_reg[13] [13]),
        .I4(\lSetIpushReg_reg[13]_0 ),
        .O(\lSlvReg0_reg[31]_1 ));
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[1]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[1] ),
        .I3(\lSetIpushReg_reg[13] [1]),
        .I4(p_14_in),
        .O(\lSlvReg0_reg[31]_13 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[2]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[2] ),
        .I3(\lSetIpushReg_reg[13] [2]),
        .I4(p_15_in),
        .O(\lSlvReg0_reg[31]_12 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[3]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[3] ),
        .I3(\lSetIpushReg_reg[13] [3]),
        .I4(p_16_in),
        .O(\lSlvReg0_reg[31]_11 ));
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[4]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[4] ),
        .I3(\lSetIpushReg_reg[13] [4]),
        .I4(p_17_in),
        .O(\lSlvReg0_reg[31]_10 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[5]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[5] ),
        .I3(\lSetIpushReg_reg[13] [5]),
        .I4(p_18_in),
        .O(\lSlvReg0_reg[31]_9 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[6]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[6] ),
        .I3(\lSetIpushReg_reg[13] [6]),
        .I4(p_19_in),
        .O(\lSlvReg0_reg[31]_8 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[7]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[7] ),
        .I3(\lSetIpushReg_reg[13] [7]),
        .I4(p_20_in),
        .O(\lSlvReg0_reg[31]_7 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[8]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[8] ),
        .I3(\lSetIpushReg_reg[13] [8]),
        .I4(p_21_in),
        .O(\lSlvReg0_reg[31]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'hF2FFF2F2)) 
    \lSetIpushReg[9]_i_1 
       (.I0(\lRegisters[0]_0 [31]),
        .I1(lRegRstR),
        .I2(\lSetIpushReg_reg[9] ),
        .I3(\lSetIpushReg_reg[13] [9]),
        .I4(p_22_in),
        .O(\lSlvReg0_reg[31]_5 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \lSlvReg0[15]_i_1 
       (.I0(s00_axi_wstrb[1]),
        .I1(lSlvReg01__0),
        .I2(lSetStop),
        .I3(\lRegisters[0]_0 [4]),
        .O(p_1_in[15]));
  LUT4 #(
    .INIT(16'h0888)) 
    \lSlvReg0[23]_i_1 
       (.I0(s00_axi_wstrb[2]),
        .I1(lSlvReg01__0),
        .I2(lSetStop),
        .I3(\lRegisters[0]_0 [4]),
        .O(p_1_in[23]));
  LUT3 #(
    .INIT(8'h4F)) 
    \lSlvReg0[31]_i_1 
       (.I0(lRegRstR),
        .I1(\lRegisters[0]_0 [31]),
        .I2(lRst_n),
        .O(\lSlvReg0[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \lSlvReg0[31]_i_2 
       (.I0(s00_axi_wstrb[3]),
        .I1(lSlvReg01__0),
        .I2(lSetStop),
        .I3(\lRegisters[0]_0 [4]),
        .O(p_1_in[31]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \lSlvReg0[31]_i_3 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(p_29_in),
        .O(lSlvReg01__0));
  LUT6 #(
    .INIT(64'h000000000080FF80)) 
    \lSlvReg0[4]_i_1 
       (.I0(s00_axi_wstrb[0]),
        .I1(s00_axi_wdata[4]),
        .I2(lSlvReg01__0),
        .I3(\lRegisters[0]_0 [4]),
        .I4(lSetStop),
        .I5(\lSlvReg0[31]_i_1_n_0 ),
        .O(\lSlvReg0[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \lSlvReg0[7]_i_1 
       (.I0(s00_axi_wstrb[0]),
        .I1(lSlvReg01__0),
        .I2(lSetStop),
        .I3(\lRegisters[0]_0 [4]),
        .O(p_1_in[3]));
  FDRE \lSlvReg0_reg[0] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[0]),
        .Q(\lRegisters[0]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[10] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[10]),
        .Q(\lRegisters[0]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[11] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[11]),
        .Q(\lRegisters[0]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[12] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[12]),
        .Q(\lRegisters[0]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[13] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[13]),
        .Q(\lRegisters[0]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[14] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[14]),
        .Q(\lRegisters[0]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[15] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[15]),
        .Q(\lRegisters[0]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[16] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[16]),
        .Q(\lRegisters[0]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[17] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[17]),
        .Q(\lRegisters[0]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[18] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[18]),
        .Q(\lRegisters[0]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[19] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[19]),
        .Q(\lRegisters[0]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[1] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[1]),
        .Q(\lRegisters[0]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[20] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[20]),
        .Q(\lRegisters[0]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[21] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[21]),
        .Q(\lRegisters[0]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[22] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[22]),
        .Q(\lRegisters[0]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[23] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[23]),
        .Q(\lRegisters[0]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[24] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[24]),
        .Q(\lRegisters[0]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[25] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[25]),
        .Q(\lRegisters[0]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[26] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[26]),
        .Q(\lRegisters[0]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[27] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[27]),
        .Q(\lRegisters[0]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[28] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[28]),
        .Q(\lRegisters[0]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[29] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[29]),
        .Q(\lRegisters[0]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[2] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[2]),
        .Q(\lRegisters[0]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[30] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[30]),
        .Q(\lRegisters[0]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[31] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[31]),
        .Q(\lRegisters[0]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[3] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[3]),
        .Q(\lRegisters[0]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg0[4]_i_1_n_0 ),
        .Q(\lRegisters[0]_0 [4]),
        .R(1'b0));
  FDRE \lSlvReg0_reg[5] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[5]),
        .Q(\lRegisters[0]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[6] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[6]),
        .Q(\lRegisters[0]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[7] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[3]),
        .D(s00_axi_wdata[7]),
        .Q(\lRegisters[0]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[8] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[8]),
        .Q(\lRegisters[0]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg0_reg[9] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[9]),
        .Q(\lRegisters[0]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg10[15]_i_1 
       (.I0(lSlvReg101__2),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg10[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg10[23]_i_1 
       (.I0(lSlvReg101__2),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg10[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg10[31]_i_1 
       (.I0(lSlvReg101__2),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg10[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \lSlvReg10[31]_i_2 
       (.I0(p_0_in[4]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(p_29_in),
        .O(lSlvReg101__2));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg10[7]_i_1 
       (.I0(lSlvReg101__2),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg10[7]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg10_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg10_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg10_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg10_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg10_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg10_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg10_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg10_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg10_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg10_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg10_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg10_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg10_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg10_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg10_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg10_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg10_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg10_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg10_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg10_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg10_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg10_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg10_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg10_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg10_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg10_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg10_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg10_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg10_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg10_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg10_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg10_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg10[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg10_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg11[15]_i_1 
       (.I0(lSlvReg111__2),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg11[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg11[23]_i_1 
       (.I0(lSlvReg111__2),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg11[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg11[31]_i_1 
       (.I0(lSlvReg111__2),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg11[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \lSlvReg11[31]_i_2 
       (.I0(p_0_in[3]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[2]),
        .I5(p_29_in),
        .O(lSlvReg111__2));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg11[7]_i_1 
       (.I0(lSlvReg111__2),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg11[7]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg11_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg11_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg11_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg11_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg11_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg11_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg11_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDSE \lSlvReg11_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg11_reg[31]_0 [16]),
        .S(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg11_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg11_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg11_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg11_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg11_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg11_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg11_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg11_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg11_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg11_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg11_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg11_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg11_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg11_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg11_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg11_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg11_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg11_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg11_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg11_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg11_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg11_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg11_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg11_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg11[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg11_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg12[15]_i_1 
       (.I0(lSlvReg121__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg12[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg12[23]_i_1 
       (.I0(lSlvReg121__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg12[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg12[31]_i_1 
       (.I0(lSlvReg121__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg12[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \lSlvReg12[31]_i_2 
       (.I0(p_0_in[4]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_29_in),
        .O(lSlvReg121__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg12[7]_i_1 
       (.I0(lSlvReg121__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg12[7]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg12_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg12_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg12_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg12_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg12_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg12_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg12_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg12_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg12_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg12_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg12_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg12_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg12_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg12_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg12_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg12_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg12_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg12_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg12_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg12_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg12_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg12_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg12_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg12_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg12_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg12_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg12_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg12_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg12_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg12_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg12_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg12_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg12[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg12_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg13[15]_i_1 
       (.I0(lSlvReg131__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg13[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg13[23]_i_1 
       (.I0(lSlvReg131__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg13[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg13[31]_i_1 
       (.I0(lSlvReg131__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg13[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \lSlvReg13[31]_i_2 
       (.I0(p_0_in[3]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(p_29_in),
        .O(lSlvReg131__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg13[7]_i_1 
       (.I0(lSlvReg131__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg13[7]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg13_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg13_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg13_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg13_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg13_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg13_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg13_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDSE \lSlvReg13_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg13_reg[31]_0 [16]),
        .S(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg13_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg13_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg13_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg13_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg13_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg13_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg13_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg13_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg13_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg13_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg13_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg13_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg13_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg13_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg13_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg13_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg13_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg13_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg13_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg13_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg13_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg13_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg13_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg13_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg13[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg13_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg14[15]_i_1 
       (.I0(lSlvReg141__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg14[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg14[23]_i_1 
       (.I0(lSlvReg141__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg14[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg14[31]_i_1 
       (.I0(lSlvReg141__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg14[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \lSlvReg14[31]_i_2 
       (.I0(p_0_in[3]),
        .I1(p_0_in[4]),
        .I2(p_0_in[2]),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .I5(p_29_in),
        .O(lSlvReg141__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg14[7]_i_1 
       (.I0(lSlvReg141__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg14[7]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg14_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg14_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg14_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg14_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg14_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg14_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg14_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg14_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg14_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg14_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg14_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg14_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg14_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg14_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg14_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg14_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg14_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg14_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg14_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg14_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg14_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg14_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg14_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg14_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg14_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg14_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg14_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg14_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg14_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg14_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg14_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg14_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg14[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg14_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg15[15]_i_1 
       (.I0(lSlvReg151__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg15[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg15[23]_i_1 
       (.I0(lSlvReg151__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg15[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg15[31]_i_1 
       (.I0(lSlvReg151__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg15[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \lSlvReg15[31]_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[3]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[4]),
        .I5(p_29_in),
        .O(lSlvReg151__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg15[7]_i_1 
       (.I0(lSlvReg151__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg15[7]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg15_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg15_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg15_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg15_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg15_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg15_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg15_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDSE \lSlvReg15_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg15_reg[31]_0 [16]),
        .S(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg15_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg15_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg15_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg15_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg15_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg15_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg15_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg15_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg15_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg15_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg15_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg15_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg15_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg15_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg15_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg15_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg15_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg15_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg15_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg15_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg15_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg15_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg15_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg15_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg15[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg15_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg16[15]_i_1 
       (.I0(lSlvReg161__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg16[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg16[23]_i_1 
       (.I0(lSlvReg161__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg16[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg16[31]_i_1 
       (.I0(lSlvReg161__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg16[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \lSlvReg16[31]_i_2 
       (.I0(p_0_in[0]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[4]),
        .I5(p_29_in),
        .O(lSlvReg161__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg16[7]_i_1 
       (.I0(lSlvReg161__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg16[7]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg16_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg16_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg16_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg16_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg16_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg16_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg16_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg16_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg16_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg16_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg16_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg16_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg16_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg16_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg16_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg16_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg16_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg16_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg16_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg16_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg16_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg16_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg16_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg16_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg16_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg16_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg16_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg16_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg16_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg16_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg16_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg16_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg16[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg16_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F0F0000000002)) 
    \lSlvReg1[0]_i_1 
       (.I0(lTxDoneSet),
        .I1(lTxDoneSetR),
        .I2(\lSlvReg0[31]_i_1_n_0 ),
        .I3(\lSlvReg1[0]_i_2_n_0 ),
        .I4(lSlvReg1125_out__0),
        .I5(\lRegisters[1]_1 [0]),
        .O(\lSlvReg1[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7F7F007F7F)) 
    \lSlvReg1[0]_i_2 
       (.I0(lSlvReg11__2),
        .I1(s00_axi_wstrb[0]),
        .I2(s00_axi_wdata[0]),
        .I3(\lRegisters[1]_1 [0]),
        .I4(lTxDoneSet),
        .I5(lTxDoneSetR),
        .O(\lSlvReg1[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[10]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [0]),
        .O(\lSlvReg1[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[11]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [1]),
        .O(\lSlvReg1[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[12]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [2]),
        .O(\lSlvReg1[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[13]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [3]),
        .O(\lSlvReg1[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[14]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [4]),
        .O(\lSlvReg1[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[15]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [5]),
        .O(\lSlvReg1[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[16]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[16]_0 [6]),
        .O(\lSlvReg1[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h03032200)) 
    \lSlvReg1[21]_i_1 
       (.I0(\lSlvReg1[21]_i_2_n_0 ),
        .I1(\lSlvReg0[31]_i_1_n_0 ),
        .I2(\lSlvReg1[21]_i_3_n_0 ),
        .I3(lBufferFull),
        .I4(\lRegisters[1]_1 [16]),
        .O(\lSlvReg1[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF22222F22)) 
    \lSlvReg1[21]_i_2 
       (.I0(lBufferFull),
        .I1(\lRegisters[1]_1 [16]),
        .I2(lTxDoneSetR),
        .I3(lTxDoneSet),
        .I4(\lRegisters[1]_1 [0]),
        .I5(\lSlvReg0[31]_i_1_n_0 ),
        .O(\lSlvReg1[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8080808080008080)) 
    \lSlvReg1[21]_i_3 
       (.I0(lSlvReg11__2),
        .I1(s00_axi_wstrb[2]),
        .I2(s00_axi_wdata[21]),
        .I3(\lRegisters[1]_1 [0]),
        .I4(lTxDoneSet),
        .I5(lTxDoneSetR),
        .O(\lSlvReg1[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \lSlvReg1[21]_i_4 
       (.I0(p_0_in[4]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[0]),
        .I5(p_29_in),
        .O(lSlvReg11__2));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \lSlvReg1[22]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(sInitDone_n),
        .O(\lSlvReg1[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[2]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(lAdcSPI_Idle),
        .O(\lSlvReg1[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[3]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [0]),
        .O(\lSlvReg1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[4]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [1]),
        .O(\lSlvReg1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[5]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [2]),
        .O(\lSlvReg1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[6]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [3]),
        .O(\lSlvReg1[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[7]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [4]),
        .O(\lSlvReg1[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[8]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [5]),
        .O(\lSlvReg1[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \lSlvReg1[9]_i_1 
       (.I0(\lSlvReg0[31]_i_1_n_0 ),
        .I1(\lSlvReg1_reg[9]_0 [6]),
        .O(\lSlvReg1[9]_i_1_n_0 ));
  FDRE \lSlvReg1_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[0]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [0]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[10]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [9]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[11]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [10]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[12]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [11]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[13]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [12]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[14]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [13]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[15]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [14]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[16]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [15]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[21]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [16]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[22]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [17]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[2]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [1]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[3]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [2]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[4]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [3]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[5]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [4]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[6]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [5]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[7]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [6]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[8]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [7]),
        .R(1'b0));
  FDRE \lSlvReg1_reg[9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\lSlvReg1[9]_i_1_n_0 ),
        .Q(\lRegisters[1]_1 [8]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \lSlvReg2[15]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[1]),
        .O(\lSlvReg2[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \lSlvReg2[23]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[2]),
        .O(\lSlvReg2[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \lSlvReg2[31]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[3]),
        .O(\lSlvReg2[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \lSlvReg2[31]_i_2 
       (.I0(lAxiWreadyLoc_reg_0),
        .I1(lAxiAwreadyLoc_reg_0),
        .I2(s00_axi_wvalid),
        .I3(s00_axi_awvalid),
        .O(p_29_in));
  LUT2 #(
    .INIT(4'hE)) 
    \lSlvReg2[31]_i_3 
       (.I0(p_0_in[3]),
        .I1(p_0_in[4]),
        .O(\lSlvReg2[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \lSlvReg2[7]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[0]),
        .O(\lSlvReg2[7]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(lReg2Rd[0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(lReg2Rd[10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(lReg2Rd[11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(lReg2Rd[12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(lReg2Rd[13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(lReg2Rd[14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(lReg2Rd[15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(lReg2Rd[16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(lReg2Rd[17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(lReg2Rd[18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(lReg2Rd[19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(lReg2Rd[1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(lReg2Rd[20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(lReg2Rd[21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg2_reg_n_0_[22] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg2_reg_n_0_[23] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg2_reg_n_0_[24] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg2_reg_n_0_[25] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg2_reg_n_0_[26] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg2_reg_n_0_[27] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg2_reg_n_0_[28] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg2_reg_n_0_[29] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(lReg2Rd[2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg2_reg_n_0_[30] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg2_reg_n_0_[31] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(lReg2Rd[3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(lReg2Rd[4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(lReg2Rd[5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(lReg2Rd[6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(lReg2Rd[7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(lReg2Rd[8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg2_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(lReg2Rd[9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg3[15]_i_1 
       (.I0(lSPI_TxFifoWrEn0),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg3[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg3[23]_i_1 
       (.I0(lSPI_TxFifoWrEn0),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg3[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg3[31]_i_1 
       (.I0(lSPI_TxFifoWrEn0),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg3[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg3[7]_i_1 
       (.I0(lSPI_TxFifoWrEn0),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg3[7]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg3_reg[23]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg3_reg[23]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg3_reg[23]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg3_reg[23]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg3_reg[23]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg3_reg[23]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg3_reg[23]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg3_reg[23]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg3_reg[23]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg3_reg[23]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg3_reg[23]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg3_reg[23]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg3_reg[23]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg3_reg[23]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg3_reg[23]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg3_reg[23]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg3_reg_n_0_[24] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg3_reg_n_0_[25] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg3_reg_n_0_[26] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg3_reg_n_0_[27] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg3_reg_n_0_[28] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg3_reg_n_0_[29] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg3_reg[23]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg3_reg_n_0_[30] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg3_reg_n_0_[31] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg3_reg[23]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg3_reg[23]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg3_reg[23]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg3_reg[23]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg3_reg[23]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg3_reg[23]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg3_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg3_reg[23]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg5[15]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[1]),
        .O(\lSlvReg5[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg5[23]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[2]),
        .O(\lSlvReg5[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg5[31]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[3]),
        .O(\lSlvReg5[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg5[7]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[0]),
        .O(\lSlvReg5[7]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg5_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg5_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg5_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg5_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg5_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg5_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg5_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg5_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg5_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg5_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg5_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg5_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg5_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg5_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg5_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg5_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg5_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg5_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg5_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg5_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg5_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg5_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg5_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg5_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg5_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg5_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg5_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg5_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg5_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg5_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg5_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg5_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg5_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg6[15]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[1]),
        .O(\lSlvReg6[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg6[23]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[2]),
        .O(\lSlvReg6[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg6[31]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[3]),
        .O(\lSlvReg6[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \lSlvReg6[7]_i_1 
       (.I0(p_29_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(\lSlvReg2[31]_i_3_n_0 ),
        .I5(s00_axi_wstrb[0]),
        .O(\lSlvReg6[7]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg6_reg_n_0_[0] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg6_reg_n_0_[10] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg6_reg_n_0_[11] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg6_reg_n_0_[12] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg6_reg_n_0_[13] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg6_reg_n_0_[14] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg6_reg_n_0_[15] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg6_reg_n_0_[16] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg6_reg_n_0_[17] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg6_reg_n_0_[18] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg6_reg_n_0_[19] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg6_reg_n_0_[1] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg6_reg_n_0_[20] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg6_reg_n_0_[21] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg6_reg_n_0_[22] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg6_reg_n_0_[23] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg6_reg_n_0_[24] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg6_reg_n_0_[25] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg6_reg_n_0_[26] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg6_reg_n_0_[27] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg6_reg_n_0_[28] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg6_reg_n_0_[29] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg6_reg_n_0_[2] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg6_reg_n_0_[30] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg6_reg_n_0_[31] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg6_reg_n_0_[3] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg6_reg_n_0_[4] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg6_reg_n_0_[5] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg6_reg_n_0_[6] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg6_reg_n_0_[7] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg6_reg_n_0_[8] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg6_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg6_reg_n_0_[9] ),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg7[15]_i_1 
       (.I0(lSlvReg71__3),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg7[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg7[23]_i_1 
       (.I0(lSlvReg71__3),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg7[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg7[31]_i_1 
       (.I0(lSlvReg71__3),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg7[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \lSlvReg7[31]_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(p_29_in),
        .O(lSlvReg71__3));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg7[7]_i_1 
       (.I0(lSlvReg71__3),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg7[7]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg7_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg7_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg7_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg7_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg7_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg7_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg7_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg7_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg7_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg7_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg7_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg7_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg7_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg7_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg7_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg7_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg7_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg7_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg7_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg7_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg7_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg7_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg7_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg7_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg7_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg7_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg7_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg7_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg7_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg7_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg7_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg7_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg7_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg8[15]_i_1 
       (.I0(lSlvReg81__2),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg8[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg8[23]_i_1 
       (.I0(lSlvReg81__2),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg8[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg8[31]_i_1 
       (.I0(lSlvReg81__2),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg8[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \lSlvReg8[31]_i_2 
       (.I0(p_0_in[4]),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[3]),
        .I5(p_29_in),
        .O(lSlvReg81__2));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg8[7]_i_1 
       (.I0(lSlvReg81__2),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg8[7]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg8_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg8_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg8_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg8_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg8_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg8_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg8_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg8_reg[31]_0 [16]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg8_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg8_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg8_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg8_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg8_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg8_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg8_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg8_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg8_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg8_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg8_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg8_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg8_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg8_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg8_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg8_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg8_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg8_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg8_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg8_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg8_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg8_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg8_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg8_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg8_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg9[15]_i_1 
       (.I0(lSlvReg91__2),
        .I1(s00_axi_wstrb[1]),
        .O(\lSlvReg9[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg9[23]_i_1 
       (.I0(lSlvReg91__2),
        .I1(s00_axi_wstrb[2]),
        .O(\lSlvReg9[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg9[31]_i_1 
       (.I0(lSlvReg91__2),
        .I1(s00_axi_wstrb[3]),
        .O(\lSlvReg9[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \lSlvReg9[31]_i_2 
       (.I0(p_0_in[4]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[0]),
        .I5(p_29_in),
        .O(lSlvReg91__2));
  LUT2 #(
    .INIT(4'h8)) 
    \lSlvReg9[7]_i_1 
       (.I0(lSlvReg91__2),
        .I1(s00_axi_wstrb[0]),
        .O(\lSlvReg9[7]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\lSlvReg9_reg[31]_0 [0]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\lSlvReg9_reg[31]_0 [10]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\lSlvReg9_reg[31]_0 [11]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\lSlvReg9_reg[31]_0 [12]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\lSlvReg9_reg[31]_0 [13]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\lSlvReg9_reg[31]_0 [14]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\lSlvReg9_reg[31]_0 [15]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDSE \lSlvReg9_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\lSlvReg9_reg[31]_0 [16]),
        .S(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\lSlvReg9_reg[31]_0 [17]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\lSlvReg9_reg[31]_0 [18]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\lSlvReg9_reg[31]_0 [19]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\lSlvReg9_reg[31]_0 [1]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\lSlvReg9_reg[31]_0 [20]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\lSlvReg9_reg[31]_0 [21]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\lSlvReg9_reg[31]_0 [22]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\lSlvReg9_reg[31]_0 [23]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\lSlvReg9_reg[31]_0 [24]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\lSlvReg9_reg[31]_0 [25]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\lSlvReg9_reg[31]_0 [26]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\lSlvReg9_reg[31]_0 [27]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\lSlvReg9_reg[31]_0 [28]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\lSlvReg9_reg[31]_0 [29]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\lSlvReg9_reg[31]_0 [2]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\lSlvReg9_reg[31]_0 [30]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\lSlvReg9_reg[31]_0 [31]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\lSlvReg9_reg[31]_0 [3]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\lSlvReg9_reg[31]_0 [4]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\lSlvReg9_reg[31]_0 [5]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\lSlvReg9_reg[31]_0 [6]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\lSlvReg9_reg[31]_0 [7]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\lSlvReg9_reg[31]_0 [8]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  FDRE \lSlvReg9_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\lSlvReg9[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\lSlvReg9_reg[31]_0 [9]),
        .R(\lSlvReg0[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \lTxFifoCounter[6]_i_1 
       (.I0(wr_en),
        .I1(lTxFifoRdEn),
        .O(E));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    \sAddrTrigger[13]_i_10 
       (.I0(\lSlvReg8_reg[31]_0 [0]),
        .I1(Q[0]),
        .I2(minusOp[1]),
        .I3(\lSlvReg8_reg[31]_0 [2]),
        .I4(minusOp[0]),
        .I5(\lSlvReg8_reg[31]_0 [1]),
        .O(\sAddrTrigger[13]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sAddrTrigger[13]_i_6 
       (.I0(\lSlvReg8_reg[31]_0 [12]),
        .I1(minusOp[11]),
        .I2(\lSlvReg8_reg[31]_0 [13]),
        .I3(minusOp[12]),
        .O(\sAddrTrigger[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sAddrTrigger[13]_i_7 
       (.I0(\lSlvReg8_reg[31]_0 [9]),
        .I1(minusOp[8]),
        .I2(minusOp[10]),
        .I3(\lSlvReg8_reg[31]_0 [11]),
        .I4(minusOp[9]),
        .I5(\lSlvReg8_reg[31]_0 [10]),
        .O(\sAddrTrigger[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sAddrTrigger[13]_i_8 
       (.I0(\lSlvReg8_reg[31]_0 [6]),
        .I1(minusOp[5]),
        .I2(minusOp[7]),
        .I3(\lSlvReg8_reg[31]_0 [8]),
        .I4(minusOp[6]),
        .I5(\lSlvReg8_reg[31]_0 [7]),
        .O(\sAddrTrigger[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sAddrTrigger[13]_i_9 
       (.I0(\lSlvReg8_reg[31]_0 [3]),
        .I1(minusOp[2]),
        .I2(minusOp[4]),
        .I3(\lSlvReg8_reg[31]_0 [5]),
        .I4(minusOp[3]),
        .I5(\lSlvReg8_reg[31]_0 [4]),
        .O(\sAddrTrigger[13]_i_9_n_0 ));
  CARRY4 \sAddrTrigger_reg[13]_i_4 
       (.CI(\sAddrTrigger_reg[13]_i_5_n_0 ),
        .CO({\NLW_sAddrTrigger_reg[13]_i_4_CO_UNCONNECTED [3:1],\lSlvReg8_reg[12]_0 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O(\NLW_sAddrTrigger_reg[13]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\sAddrTrigger[13]_i_6_n_0 }));
  CARRY4 \sAddrTrigger_reg[13]_i_5 
       (.CI(1'b0),
        .CO({\sAddrTrigger_reg[13]_i_5_n_0 ,\sAddrTrigger_reg[13]_i_5_n_1 ,\sAddrTrigger_reg[13]_i_5_n_2 ,\sAddrTrigger_reg[13]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_sAddrTrigger_reg[13]_i_5_O_UNCONNECTED [3:0]),
        .S({\sAddrTrigger[13]_i_7_n_0 ,\sAddrTrigger[13]_i_8_n_0 ,\sAddrTrigger[13]_i_9_n_0 ,\sAddrTrigger[13]_i_10_n_0 }));
endmodule

(* ORIG_REF_NAME = "Circular_Buffer" *) 
module design_1_AXI_ZmodADC1410_1_0_Circular_Buffer
   (lBufferFull,
    xsBufEmpty_reg_0,
    lSetStop,
    xsS2MM_TvalidLoc_reg_0,
    Q,
    s_axis_s2mm_tkeep,
    s_axis_s2mm_tlast,
    sTriggerCondition23_in,
    lSlvReg1125_out__0,
    s_axis_s2mm_tdata,
    SR,
    SysClk,
    sCh2In,
    AxiStreamClk,
    sCh1In,
    s00_axi_aclk,
    \xsTdataAux_reg[31]_0 ,
    s_axis_s2mm_tready,
    DI,
    S,
    i__carry_i_3__0_0,
    i__carry_i_3__0_1,
    i__carry_i_2__0_0,
    i__carry_i_2__0_1,
    i__carry__0_i_1__0_0,
    i__carry__0_i_1__0_1,
    \FSM_sequential_sCurrentState_reg[0]_i_2_0 ,
    out,
    \sAddrTrigger_reg[0]_0 ,
    D,
    sInitDone_n,
    \FSM_sequential_sCurrentState_reg[1]_0 ,
    \FSM_sequential_sCurrentState_reg[1]_1 ,
    \sAddrTrigger_reg[0]_1 ,
    \minusOp_inferred__1/i__carry__2_0 ,
    \eqOp_inferred__6/i__carry__0_0 ,
    \xsBufferFullAddr_reg[13]_0 ,
    xsTvalidDisable_reg_0,
    \FSM_sequential_sCurrentState_reg[3]_0 );
  output lBufferFull;
  output xsBufEmpty_reg_0;
  output lSetStop;
  output xsS2MM_TvalidLoc_reg_0;
  output [12:0]Q;
  output [0:0]s_axis_s2mm_tkeep;
  output s_axis_s2mm_tlast;
  output sTriggerCondition23_in;
  output lSlvReg1125_out__0;
  output [27:0]s_axis_s2mm_tdata;
  input [0:0]SR;
  input SysClk;
  input [13:0]sCh2In;
  input AxiStreamClk;
  input [13:0]sCh1In;
  input s00_axi_aclk;
  input [0:0]\xsTdataAux_reg[31]_0 ;
  input s_axis_s2mm_tready;
  input [2:0]DI;
  input [3:0]S;
  input [3:0]i__carry_i_3__0_0;
  input [3:0]i__carry_i_3__0_1;
  input [3:0]i__carry_i_2__0_0;
  input [3:0]i__carry_i_2__0_1;
  input [0:0]i__carry__0_i_1__0_0;
  input [0:0]i__carry__0_i_1__0_1;
  input [17:0]\FSM_sequential_sCurrentState_reg[0]_i_2_0 ;
  input [0:0]out;
  input [0:0]\sAddrTrigger_reg[0]_0 ;
  input [0:0]D;
  input sInitDone_n;
  input [0:0]\FSM_sequential_sCurrentState_reg[1]_0 ;
  input \FSM_sequential_sCurrentState_reg[1]_1 ;
  input [0:0]\sAddrTrigger_reg[0]_1 ;
  input [13:0]\minusOp_inferred__1/i__carry__2_0 ;
  input [13:0]\eqOp_inferred__6/i__carry__0_0 ;
  input [13:0]\xsBufferFullAddr_reg[13]_0 ;
  input xsTvalidDisable_reg_0;
  input [0:0]\FSM_sequential_sCurrentState_reg[3]_0 ;

  wire AxiStreamClk;
  wire [0:0]D;
  wire [2:0]DI;
  wire \FSM_sequential_sCurrentState[0]_i_10_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_11_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_8_n_0 ;
  wire \FSM_sequential_sCurrentState[0]_i_9_n_0 ;
  wire \FSM_sequential_sCurrentState[2]_i_2_n_0 ;
  wire \FSM_sequential_sCurrentState[3]_i_6_n_0 ;
  wire [17:0]\FSM_sequential_sCurrentState_reg[0]_i_2_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_4_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0]_i_5_n_0 ;
  wire [0:0]\FSM_sequential_sCurrentState_reg[1]_0 ;
  wire \FSM_sequential_sCurrentState_reg[1]_1 ;
  wire [0:0]\FSM_sequential_sCurrentState_reg[3]_0 ;
  wire InstBufEmptyHandShake_n_0;
  wire InstBufFullHandShake_n_3;
  wire InstLoadOutCntHandshake_n_1;
  wire InstLoadOutCntHandshake_n_10;
  wire InstLoadOutCntHandshake_n_11;
  wire InstLoadOutCntHandshake_n_12;
  wire InstLoadOutCntHandshake_n_13;
  wire InstLoadOutCntHandshake_n_14;
  wire InstLoadOutCntHandshake_n_15;
  wire InstLoadOutCntHandshake_n_16;
  wire InstLoadOutCntHandshake_n_17;
  wire InstLoadOutCntHandshake_n_2;
  wire InstLoadOutCntHandshake_n_3;
  wire InstLoadOutCntHandshake_n_4;
  wire InstLoadOutCntHandshake_n_5;
  wire InstLoadOutCntHandshake_n_6;
  wire InstLoadOutCntHandshake_n_7;
  wire InstLoadOutCntHandshake_n_8;
  wire InstLoadOutCntHandshake_n_9;
  wire InstOutAddrCntEnHandShake_n_1;
  wire InstOutAddrCntStartHandshake_n_0;
  wire InstOutAddrCntStartHandshake_n_1;
  wire InstOutAddrCntStartHandshake_n_10;
  wire InstOutAddrCntStartHandshake_n_11;
  wire InstOutAddrCntStartHandshake_n_12;
  wire InstOutAddrCntStartHandshake_n_13;
  wire InstOutAddrCntStartHandshake_n_14;
  wire InstOutAddrCntStartHandshake_n_15;
  wire InstOutAddrCntStartHandshake_n_2;
  wire InstOutAddrCntStartHandshake_n_3;
  wire InstOutAddrCntStartHandshake_n_4;
  wire InstOutAddrCntStartHandshake_n_5;
  wire InstOutAddrCntStartHandshake_n_6;
  wire InstOutAddrCntStartHandshake_n_7;
  wire InstOutAddrCntStartHandshake_n_8;
  wire InstOutAddrCntStartHandshake_n_9;
  wire [12:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire SysClk;
  wire eqOp;
  wire eqOp0_out;
  wire eqOp1_out;
  wire eqOp2_out;
  wire eqOp5_out;
  wire \eqOp_inferred__0/i__carry__0_n_3 ;
  wire \eqOp_inferred__0/i__carry_n_0 ;
  wire \eqOp_inferred__0/i__carry_n_1 ;
  wire \eqOp_inferred__0/i__carry_n_2 ;
  wire \eqOp_inferred__0/i__carry_n_3 ;
  wire \eqOp_inferred__3/i__carry_n_0 ;
  wire \eqOp_inferred__3/i__carry_n_1 ;
  wire \eqOp_inferred__3/i__carry_n_2 ;
  wire \eqOp_inferred__3/i__carry_n_3 ;
  wire \eqOp_inferred__5/i__carry_n_0 ;
  wire \eqOp_inferred__5/i__carry_n_1 ;
  wire \eqOp_inferred__5/i__carry_n_2 ;
  wire \eqOp_inferred__5/i__carry_n_3 ;
  wire [13:0]\eqOp_inferred__6/i__carry__0_0 ;
  wire \eqOp_inferred__6/i__carry_n_0 ;
  wire \eqOp_inferred__6/i__carry_n_1 ;
  wire \eqOp_inferred__6/i__carry_n_2 ;
  wire \eqOp_inferred__6/i__carry_n_3 ;
  wire geqOp;
  wire geqOp26_in;
  wire geqOp_carry__0_i_1_n_0;
  wire geqOp_carry__0_i_2_n_0;
  wire geqOp_carry__0_i_3_n_0;
  wire geqOp_carry__0_i_4_n_0;
  wire geqOp_carry__0_i_5_n_0;
  wire geqOp_carry__0_i_6_n_0;
  wire geqOp_carry__0_n_2;
  wire geqOp_carry__0_n_3;
  wire geqOp_carry_i_1_n_0;
  wire geqOp_carry_i_2_n_0;
  wire geqOp_carry_i_3_n_0;
  wire geqOp_carry_i_4_n_0;
  wire geqOp_carry_i_5_n_0;
  wire geqOp_carry_i_6_n_0;
  wire geqOp_carry_i_7_n_0;
  wire geqOp_carry_i_8_n_0;
  wire geqOp_carry_n_0;
  wire geqOp_carry_n_1;
  wire geqOp_carry_n_2;
  wire geqOp_carry_n_3;
  wire \geqOp_inferred__0/i__carry__0_n_2 ;
  wire \geqOp_inferred__0/i__carry__0_n_3 ;
  wire \geqOp_inferred__0/i__carry_n_0 ;
  wire \geqOp_inferred__0/i__carry_n_1 ;
  wire \geqOp_inferred__0/i__carry_n_2 ;
  wire \geqOp_inferred__0/i__carry_n_3 ;
  wire iRdy;
  wire [0:0]i__carry__0_i_1__0_0;
  wire [0:0]i__carry__0_i_1__0_1;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_1__14_n_0;
  wire i__carry__0_i_1__15_n_0;
  wire i__carry__0_i_1__16_n_0;
  wire i__carry__0_i_1__1_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4__10_n_0;
  wire i__carry__0_i_4__11_n_0;
  wire i__carry__0_i_5__0_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry__0_i_6__0_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_1__16_n_0;
  wire i__carry_i_1__1_n_0;
  wire i__carry_i_1__2_n_0;
  wire i__carry_i_1__3_n_0;
  wire i__carry_i_1_n_0;
  wire [3:0]i__carry_i_2__0_0;
  wire [3:0]i__carry_i_2__0_1;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2__16_n_0;
  wire i__carry_i_2__1_n_0;
  wire i__carry_i_2__2_n_0;
  wire i__carry_i_2__3_n_0;
  wire i__carry_i_2_n_0;
  wire [3:0]i__carry_i_3__0_0;
  wire [3:0]i__carry_i_3__0_1;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3__15_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_3__2_n_0;
  wire i__carry_i_3__3_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_4__16_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_4__2_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5__0_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6__0_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7__0_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8__0_n_0;
  wire i__carry_i_8_n_0;
  wire lBufferFull;
  wire lSetStop;
  wire lSlvReg1125_out__0;
  wire leqOp;
  wire leqOp27_in;
  wire leqOp_carry__0_i_1_n_0;
  wire leqOp_carry__0_i_2_n_0;
  wire leqOp_carry__0_i_3_n_0;
  wire leqOp_carry__0_i_4_n_0;
  wire leqOp_carry__0_i_5_n_0;
  wire leqOp_carry__0_i_6_n_0;
  wire leqOp_carry__0_n_2;
  wire leqOp_carry__0_n_3;
  wire leqOp_carry_i_1_n_0;
  wire leqOp_carry_i_2_n_0;
  wire leqOp_carry_i_3_n_0;
  wire leqOp_carry_i_4_n_0;
  wire leqOp_carry_i_5_n_0;
  wire leqOp_carry_i_6_n_0;
  wire leqOp_carry_i_7_n_0;
  wire leqOp_carry_i_8_n_0;
  wire leqOp_carry_n_0;
  wire leqOp_carry_n_1;
  wire leqOp_carry_n_2;
  wire leqOp_carry_n_3;
  wire \leqOp_inferred__0/i__carry__0_n_2 ;
  wire \leqOp_inferred__0/i__carry__0_n_3 ;
  wire \leqOp_inferred__0/i__carry_n_0 ;
  wire \leqOp_inferred__0/i__carry_n_1 ;
  wire \leqOp_inferred__0/i__carry_n_2 ;
  wire \leqOp_inferred__0/i__carry_n_3 ;
  wire [13:0]minusOp0_out;
  wire minusOp_carry__0_i_1_n_0;
  wire minusOp_carry__0_i_2_n_0;
  wire minusOp_carry__0_i_3_n_0;
  wire minusOp_carry__0_i_4_n_0;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry__0_n_4;
  wire minusOp_carry__0_n_5;
  wire minusOp_carry__0_n_6;
  wire minusOp_carry__0_n_7;
  wire minusOp_carry__1_i_1_n_0;
  wire minusOp_carry__1_i_2_n_0;
  wire minusOp_carry__1_i_3_n_0;
  wire minusOp_carry__1_i_4_n_0;
  wire minusOp_carry__1_n_0;
  wire minusOp_carry__1_n_1;
  wire minusOp_carry__1_n_2;
  wire minusOp_carry__1_n_3;
  wire minusOp_carry__1_n_4;
  wire minusOp_carry__1_n_5;
  wire minusOp_carry__1_n_6;
  wire minusOp_carry__1_n_7;
  wire minusOp_carry__2_i_1_n_0;
  wire minusOp_carry__2_i_2_n_0;
  wire minusOp_carry__2_n_3;
  wire minusOp_carry__2_n_6;
  wire minusOp_carry__2_n_7;
  wire minusOp_carry_i_1_n_0;
  wire minusOp_carry_i_2_n_0;
  wire minusOp_carry_i_3_n_0;
  wire minusOp_carry_i_4_n_0;
  wire minusOp_carry_i_5_n_0;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire \minusOp_inferred__1/i__carry__0_n_0 ;
  wire \minusOp_inferred__1/i__carry__0_n_1 ;
  wire \minusOp_inferred__1/i__carry__0_n_2 ;
  wire \minusOp_inferred__1/i__carry__0_n_3 ;
  wire \minusOp_inferred__1/i__carry__1_n_0 ;
  wire \minusOp_inferred__1/i__carry__1_n_1 ;
  wire \minusOp_inferred__1/i__carry__1_n_2 ;
  wire \minusOp_inferred__1/i__carry__1_n_3 ;
  wire [13:0]\minusOp_inferred__1/i__carry__2_0 ;
  wire \minusOp_inferred__1/i__carry__2_n_3 ;
  wire \minusOp_inferred__1/i__carry_n_0 ;
  wire \minusOp_inferred__1/i__carry_n_1 ;
  wire \minusOp_inferred__1/i__carry_n_2 ;
  wire \minusOp_inferred__1/i__carry_n_3 ;
  wire neqOp;
  wire [0:0]out;
  wire p_2_in;
  wire [31:2]p_2_in__0;
  wire p_3_in29_in;
  wire [13:0]plusOp;
  wire [13:1]plusOp7;
  wire plusOp_carry__0_i_1_n_0;
  wire plusOp_carry__0_i_2_n_0;
  wire plusOp_carry__0_i_3_n_0;
  wire plusOp_carry__0_i_4_n_0;
  wire plusOp_carry__0_n_0;
  wire plusOp_carry__0_n_1;
  wire plusOp_carry__0_n_2;
  wire plusOp_carry__0_n_3;
  wire plusOp_carry__1_i_1_n_0;
  wire plusOp_carry__1_i_2_n_0;
  wire plusOp_carry__1_i_3_n_0;
  wire plusOp_carry__1_i_4_n_0;
  wire plusOp_carry__1_n_0;
  wire plusOp_carry__1_n_1;
  wire plusOp_carry__1_n_2;
  wire plusOp_carry__1_n_3;
  wire plusOp_carry__2_i_1_n_0;
  wire plusOp_carry__2_i_2_n_0;
  wire plusOp_carry__2_n_3;
  wire plusOp_carry_i_1_n_0;
  wire plusOp_carry_i_2_n_0;
  wire plusOp_carry_i_3_n_0;
  wire plusOp_carry_i_4_n_0;
  wire plusOp_carry_n_0;
  wire plusOp_carry_n_1;
  wire plusOp_carry_n_2;
  wire plusOp_carry_n_3;
  wire s00_axi_aclk;
  wire [13:13]sAddrTrigger;
  wire \sAddrTrigger[13]_i_2_n_0 ;
  wire \sAddrTrigger[13]_i_3_n_0 ;
  wire [0:0]\sAddrTrigger_reg[0]_0 ;
  wire [0:0]\sAddrTrigger_reg[0]_1 ;
  wire sBufferFull;
  wire [13:0]sCh1In;
  wire [13:0]sCh2In;
  wire [3:0]sCurrentState;
  wire sInAddrCntEn;
  wire sInAddrCounter0;
  wire [13:0]sInAddrCounterR;
  wire \sInAddrCounter[0]_i_2_n_0 ;
  wire [13:0]sInAddrCounter_reg;
  wire \sInAddrCounter_reg[0]_i_1_n_0 ;
  wire \sInAddrCounter_reg[0]_i_1_n_1 ;
  wire \sInAddrCounter_reg[0]_i_1_n_2 ;
  wire \sInAddrCounter_reg[0]_i_1_n_3 ;
  wire \sInAddrCounter_reg[0]_i_1_n_4 ;
  wire \sInAddrCounter_reg[0]_i_1_n_5 ;
  wire \sInAddrCounter_reg[0]_i_1_n_6 ;
  wire \sInAddrCounter_reg[0]_i_1_n_7 ;
  wire \sInAddrCounter_reg[12]_i_1_n_3 ;
  wire \sInAddrCounter_reg[12]_i_1_n_6 ;
  wire \sInAddrCounter_reg[12]_i_1_n_7 ;
  wire \sInAddrCounter_reg[4]_i_1_n_0 ;
  wire \sInAddrCounter_reg[4]_i_1_n_1 ;
  wire \sInAddrCounter_reg[4]_i_1_n_2 ;
  wire \sInAddrCounter_reg[4]_i_1_n_3 ;
  wire \sInAddrCounter_reg[4]_i_1_n_4 ;
  wire \sInAddrCounter_reg[4]_i_1_n_5 ;
  wire \sInAddrCounter_reg[4]_i_1_n_6 ;
  wire \sInAddrCounter_reg[4]_i_1_n_7 ;
  wire \sInAddrCounter_reg[8]_i_1_n_0 ;
  wire \sInAddrCounter_reg[8]_i_1_n_1 ;
  wire \sInAddrCounter_reg[8]_i_1_n_2 ;
  wire \sInAddrCounter_reg[8]_i_1_n_3 ;
  wire \sInAddrCounter_reg[8]_i_1_n_4 ;
  wire \sInAddrCounter_reg[8]_i_1_n_5 ;
  wire \sInAddrCounter_reg[8]_i_1_n_6 ;
  wire \sInAddrCounter_reg[8]_i_1_n_7 ;
  wire sInitDone_n;
  wire sLoadBufStart;
  wire [3:0]sNextState__0;
  wire sOutAddrCntEn;
  wire sOutAddrCntEnDin;
  wire \sOutAddrCntEnDin[0]_i_1_n_0 ;
  wire sOutAddrCntEnPush;
  wire sOutAddrCntEnPush0;
  wire sOutAddrCntEnR;
  wire sOutAddrCntEnSetPush;
  wire sOutAddrCntEnSetPush_i_1_n_0;
  wire sOutAddrCntEnSetPush_i_2_n_0;
  wire sSetStopRdy;
  wire sTriggerCondition23_in;
  wire \sTriggerSourceR[0]_i_1_n_0 ;
  wire \sTriggerSourceR[10]_i_1_n_0 ;
  wire \sTriggerSourceR[11]_i_1_n_0 ;
  wire \sTriggerSourceR[12]_i_1_n_0 ;
  wire \sTriggerSourceR[1]_i_1_n_0 ;
  wire \sTriggerSourceR[2]_i_1_n_0 ;
  wire \sTriggerSourceR[3]_i_1_n_0 ;
  wire \sTriggerSourceR[4]_i_1_n_0 ;
  wire \sTriggerSourceR[5]_i_1_n_0 ;
  wire \sTriggerSourceR[6]_i_1_n_0 ;
  wire \sTriggerSourceR[7]_i_1_n_0 ;
  wire \sTriggerSourceR[8]_i_1_n_0 ;
  wire \sTriggerSourceR[9]_i_1_n_0 ;
  wire \sTriggerSourceR_reg_n_0_[0] ;
  wire \sTriggerSourceR_reg_n_0_[10] ;
  wire \sTriggerSourceR_reg_n_0_[11] ;
  wire \sTriggerSourceR_reg_n_0_[12] ;
  wire \sTriggerSourceR_reg_n_0_[1] ;
  wire \sTriggerSourceR_reg_n_0_[2] ;
  wire \sTriggerSourceR_reg_n_0_[3] ;
  wire \sTriggerSourceR_reg_n_0_[4] ;
  wire \sTriggerSourceR_reg_n_0_[5] ;
  wire \sTriggerSourceR_reg_n_0_[6] ;
  wire \sTriggerSourceR_reg_n_0_[7] ;
  wire \sTriggerSourceR_reg_n_0_[8] ;
  wire \sTriggerSourceR_reg_n_0_[9] ;
  wire [27:27]sWeaBuffer;
  wire [27:0]s_axis_s2mm_tdata;
  wire \s_axis_s2mm_tdata[31]_i_2_n_0 ;
  wire [0:0]s_axis_s2mm_tkeep;
  wire s_axis_s2mm_tlast;
  wire s_axis_s2mm_tready;
  wire xsBufEmptyPush;
  wire xsBufEmptyPush0;
  wire xsBufEmptyR;
  wire xsBufEmpty_reg_0;
  wire [13:0]xsBufferFullAddr;
  wire [13:0]\xsBufferFullAddr_reg[13]_0 ;
  wire xsOutAddrCntEn;
  wire xsOutAddrCntEnR;
  wire xsOutAddrCntEnRR;
  wire xsOutAddrCntPulse;
  wire xsOutAddrCntPulseR;
  wire [13:0]xsOutAddrCntStart;
  wire xsOutAddrCounter2;
  wire [13:0]xsOutAddrCounter_reg;
  wire [31:2]xsS2MM_TdataLoc;
  wire [3:3]xsS2MM_TkeepLoc;
  wire \xsS2MM_TkeepLoc[3]_i_1_n_0 ;
  wire xsS2MM_TlastLoc_i_10_n_0;
  wire xsS2MM_TlastLoc_i_6_n_0;
  wire xsS2MM_TlastLoc_i_7_n_0;
  wire xsS2MM_TlastLoc_i_8_n_0;
  wire xsS2MM_TlastLoc_i_9_n_0;
  wire xsS2MM_TlastLoc_reg_i_11_n_0;
  wire xsS2MM_TlastLoc_reg_i_11_n_1;
  wire xsS2MM_TlastLoc_reg_i_11_n_2;
  wire xsS2MM_TlastLoc_reg_i_11_n_3;
  wire xsS2MM_TlastLoc_reg_i_13_n_0;
  wire xsS2MM_TlastLoc_reg_i_13_n_1;
  wire xsS2MM_TlastLoc_reg_i_13_n_2;
  wire xsS2MM_TlastLoc_reg_i_13_n_3;
  wire xsS2MM_TlastLoc_reg_i_14_n_0;
  wire xsS2MM_TlastLoc_reg_i_14_n_1;
  wire xsS2MM_TlastLoc_reg_i_14_n_2;
  wire xsS2MM_TlastLoc_reg_i_14_n_3;
  wire xsS2MM_TlastLoc_reg_i_5_n_0;
  wire xsS2MM_TlastLoc_reg_i_5_n_1;
  wire xsS2MM_TlastLoc_reg_i_5_n_2;
  wire xsS2MM_TlastLoc_reg_i_5_n_3;
  wire xsS2MM_TreadyR;
  wire xsS2MM_TvalidLoc_i_1_n_0;
  wire xsS2MM_TvalidLoc_reg_0;
  wire [0:0]\xsTdataAux_reg[31]_0 ;
  wire \xsTdataAux_reg_n_0_[10] ;
  wire \xsTdataAux_reg_n_0_[11] ;
  wire \xsTdataAux_reg_n_0_[12] ;
  wire \xsTdataAux_reg_n_0_[13] ;
  wire \xsTdataAux_reg_n_0_[14] ;
  wire \xsTdataAux_reg_n_0_[15] ;
  wire \xsTdataAux_reg_n_0_[18] ;
  wire \xsTdataAux_reg_n_0_[19] ;
  wire \xsTdataAux_reg_n_0_[20] ;
  wire \xsTdataAux_reg_n_0_[21] ;
  wire \xsTdataAux_reg_n_0_[22] ;
  wire \xsTdataAux_reg_n_0_[23] ;
  wire \xsTdataAux_reg_n_0_[24] ;
  wire \xsTdataAux_reg_n_0_[25] ;
  wire \xsTdataAux_reg_n_0_[26] ;
  wire \xsTdataAux_reg_n_0_[27] ;
  wire \xsTdataAux_reg_n_0_[28] ;
  wire \xsTdataAux_reg_n_0_[29] ;
  wire \xsTdataAux_reg_n_0_[2] ;
  wire \xsTdataAux_reg_n_0_[30] ;
  wire \xsTdataAux_reg_n_0_[31] ;
  wire \xsTdataAux_reg_n_0_[3] ;
  wire \xsTdataAux_reg_n_0_[4] ;
  wire \xsTdataAux_reg_n_0_[5] ;
  wire \xsTdataAux_reg_n_0_[6] ;
  wire \xsTdataAux_reg_n_0_[7] ;
  wire \xsTdataAux_reg_n_0_[8] ;
  wire \xsTdataAux_reg_n_0_[9] ;
  wire xsTreadyFalling;
  wire xsTvalidDisable_i_1_n_0;
  wire xsTvalidDisable_i_5_n_0;
  wire xsTvalidDisable_i_6_n_0;
  wire xsTvalidDisable_i_7_n_0;
  wire xsTvalidDisable_i_8_n_0;
  wire xsTvalidDisable_i_9_n_0;
  wire xsTvalidDisable_reg_0;
  wire xsTvalidDisable_reg_i_4_n_0;
  wire xsTvalidDisable_reg_i_4_n_1;
  wire xsTvalidDisable_reg_i_4_n_2;
  wire xsTvalidDisable_reg_i_4_n_3;
  wire xsTvalidDisable_reg_n_0;
  wire [3:0]\NLW_eqOp_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:1]\NLW_eqOp_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__3/i__carry_O_UNCONNECTED ;
  wire [3:1]\NLW_eqOp_inferred__3/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__3/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__5/i__carry_O_UNCONNECTED ;
  wire [3:1]\NLW_eqOp_inferred__5/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__5/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__6/i__carry_O_UNCONNECTED ;
  wire [3:1]\NLW_eqOp_inferred__6/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_eqOp_inferred__6/i__carry__0_O_UNCONNECTED ;
  wire [3:0]NLW_geqOp_carry_O_UNCONNECTED;
  wire [3:3]NLW_geqOp_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_geqOp_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_geqOp_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_geqOp_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_geqOp_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]NLW_leqOp_carry_O_UNCONNECTED;
  wire [3:3]NLW_leqOp_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_leqOp_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_leqOp_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_leqOp_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_leqOp_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:1]NLW_minusOp_carry__2_CO_UNCONNECTED;
  wire [3:2]NLW_minusOp_carry__2_O_UNCONNECTED;
  wire [3:1]\NLW_minusOp_inferred__1/i__carry__2_CO_UNCONNECTED ;
  wire [3:2]\NLW_minusOp_inferred__1/i__carry__2_O_UNCONNECTED ;
  wire [3:1]NLW_plusOp_carry__2_CO_UNCONNECTED;
  wire [3:2]NLW_plusOp_carry__2_O_UNCONNECTED;
  wire [3:1]\NLW_sInAddrCounter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_sInAddrCounter_reg[12]_i_1_O_UNCONNECTED ;
  wire [3:0]NLW_xsS2MM_TlastLoc_reg_i_12_CO_UNCONNECTED;
  wire [3:1]NLW_xsS2MM_TlastLoc_reg_i_12_O_UNCONNECTED;
  wire [3:1]NLW_xsS2MM_TlastLoc_reg_i_3_CO_UNCONNECTED;
  wire [3:0]NLW_xsS2MM_TlastLoc_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_xsS2MM_TlastLoc_reg_i_5_O_UNCONNECTED;
  wire [3:1]NLW_xsTvalidDisable_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_xsTvalidDisable_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_xsTvalidDisable_reg_i_4_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h000000000FF0F8FF)) 
    \FSM_sequential_sCurrentState[0]_i_1 
       (.I0(sTriggerCondition23_in),
        .I1(\sAddrTrigger_reg[0]_0 ),
        .I2(sCurrentState[3]),
        .I3(sCurrentState[1]),
        .I4(sCurrentState[2]),
        .I5(sCurrentState[0]),
        .O(sNextState__0[0]));
  LUT6 #(
    .INIT(64'h3332232200000000)) 
    \FSM_sequential_sCurrentState[0]_i_10 
       (.I0(geqOp26_in),
        .I1(p_2_in),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(sCh1In[13]),
        .I4(sCh2In[13]),
        .I5(leqOp),
        .O(\FSM_sequential_sCurrentState[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hA820FC3000000000)) 
    \FSM_sequential_sCurrentState[0]_i_11 
       (.I0(leqOp27_in),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[13]),
        .I3(sCh2In[13]),
        .I4(p_2_in),
        .I5(geqOp),
        .O(\FSM_sequential_sCurrentState[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h000EE0EE00000000)) 
    \FSM_sequential_sCurrentState[0]_i_8 
       (.I0(leqOp27_in),
        .I1(p_2_in),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(sCh1In[13]),
        .I4(sCh2In[13]),
        .I5(geqOp),
        .O(\FSM_sequential_sCurrentState[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hABEF000000000000)) 
    \FSM_sequential_sCurrentState[0]_i_9 
       (.I0(geqOp26_in),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[13]),
        .I3(sCh2In[13]),
        .I4(p_2_in),
        .I5(leqOp),
        .O(\FSM_sequential_sCurrentState[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h00BB33FF3333CF00)) 
    \FSM_sequential_sCurrentState[1]_i_1 
       (.I0(\FSM_sequential_sCurrentState_reg[1]_0 ),
        .I1(sCurrentState[3]),
        .I2(\FSM_sequential_sCurrentState_reg[1]_1 ),
        .I3(sCurrentState[1]),
        .I4(sCurrentState[2]),
        .I5(sCurrentState[0]),
        .O(sNextState__0[1]));
  LUT6 #(
    .INIT(64'h00BBFC3033FF3030)) 
    \FSM_sequential_sCurrentState[2]_i_1 
       (.I0(\FSM_sequential_sCurrentState_reg[1]_0 ),
        .I1(sCurrentState[3]),
        .I2(\FSM_sequential_sCurrentState[2]_i_2_n_0 ),
        .I3(sCurrentState[1]),
        .I4(sCurrentState[2]),
        .I5(sCurrentState[0]),
        .O(sNextState__0[2]));
  LUT6 #(
    .INIT(64'hFF002000FF0020FF)) 
    \FSM_sequential_sCurrentState[2]_i_2 
       (.I0(sTriggerCondition23_in),
        .I1(\sAddrTrigger_reg[0]_0 ),
        .I2(\sAddrTrigger_reg[0]_1 ),
        .I3(sCurrentState[1]),
        .I4(sCurrentState[0]),
        .I5(eqOp),
        .O(\FSM_sequential_sCurrentState[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_sCurrentState[2]_i_3 
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [2]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .O(eqOp));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h30CC8CCC)) 
    \FSM_sequential_sCurrentState[3]_i_3 
       (.I0(\FSM_sequential_sCurrentState_reg[1]_0 ),
        .I1(sCurrentState[3]),
        .I2(sCurrentState[0]),
        .I3(sCurrentState[2]),
        .I4(sCurrentState[1]),
        .O(sNextState__0[3]));
  LUT5 #(
    .INIT(32'hFFBAAABA)) 
    \FSM_sequential_sCurrentState[3]_i_6 
       (.I0(sCurrentState[1]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [2]),
        .I2(\FSM_sequential_sCurrentState_reg[1]_0 ),
        .I3(sCurrentState[0]),
        .I4(eqOp5_out),
        .O(\FSM_sequential_sCurrentState[3]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "stloadbuffernone:0101,stloadbuffernormal:0100,stwaitstop:1101,stwaittrigger:0010,stoutaddrcntack:0111,stoutaddrcntpush:0110,stsetstopack:1100,starm:0001,stidle:0000,stsendbufferdummy:0011,stsetstop:1011,stbufferfullack:1001,stsendbuffer:1010,iSTATE:1110,stbufferfullpush:1000" *) 
  FDRE \FSM_sequential_sCurrentState_reg[0] 
       (.C(SysClk),
        .CE(InstBufFullHandShake_n_3),
        .D(sNextState__0[0]),
        .Q(sCurrentState[0]),
        .R(\FSM_sequential_sCurrentState_reg[3]_0 ));
  MUXF8 \FSM_sequential_sCurrentState_reg[0]_i_2 
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_4_n_0 ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_5_n_0 ),
        .O(sTriggerCondition23_in),
        .S(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [3]));
  MUXF7 \FSM_sequential_sCurrentState_reg[0]_i_4 
       (.I0(\FSM_sequential_sCurrentState[0]_i_8_n_0 ),
        .I1(\FSM_sequential_sCurrentState[0]_i_9_n_0 ),
        .O(\FSM_sequential_sCurrentState_reg[0]_i_4_n_0 ),
        .S(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [17]));
  MUXF7 \FSM_sequential_sCurrentState_reg[0]_i_5 
       (.I0(\FSM_sequential_sCurrentState[0]_i_10_n_0 ),
        .I1(\FSM_sequential_sCurrentState[0]_i_11_n_0 ),
        .O(\FSM_sequential_sCurrentState_reg[0]_i_5_n_0 ),
        .S(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [17]));
  (* FSM_ENCODED_STATES = "stloadbuffernone:0101,stloadbuffernormal:0100,stwaitstop:1101,stwaittrigger:0010,stoutaddrcntack:0111,stoutaddrcntpush:0110,stsetstopack:1100,starm:0001,stidle:0000,stsendbufferdummy:0011,stsetstop:1011,stbufferfullack:1001,stsendbuffer:1010,iSTATE:1110,stbufferfullpush:1000" *) 
  FDRE \FSM_sequential_sCurrentState_reg[1] 
       (.C(SysClk),
        .CE(InstBufFullHandShake_n_3),
        .D(sNextState__0[1]),
        .Q(sCurrentState[1]),
        .R(\FSM_sequential_sCurrentState_reg[3]_0 ));
  (* FSM_ENCODED_STATES = "stloadbuffernone:0101,stloadbuffernormal:0100,stwaitstop:1101,stwaittrigger:0010,stoutaddrcntack:0111,stoutaddrcntpush:0110,stsetstopack:1100,starm:0001,stidle:0000,stsendbufferdummy:0011,stsetstop:1011,stbufferfullack:1001,stsendbuffer:1010,iSTATE:1110,stbufferfullpush:1000" *) 
  FDRE \FSM_sequential_sCurrentState_reg[2] 
       (.C(SysClk),
        .CE(InstBufFullHandShake_n_3),
        .D(sNextState__0[2]),
        .Q(sCurrentState[2]),
        .R(\FSM_sequential_sCurrentState_reg[3]_0 ));
  (* FSM_ENCODED_STATES = "stloadbuffernone:0101,stloadbuffernormal:0100,stwaitstop:1101,stwaittrigger:0010,stoutaddrcntack:0111,stoutaddrcntpush:0110,stsetstopack:1100,starm:0001,stidle:0000,stsendbufferdummy:0011,stsetstop:1011,stbufferfullack:1001,stsendbuffer:1010,iSTATE:1110,stbufferfullpush:1000" *) 
  FDRE \FSM_sequential_sCurrentState_reg[3] 
       (.C(SysClk),
        .CE(InstBufFullHandShake_n_3),
        .D(sNextState__0[3]),
        .Q(sCurrentState[3]),
        .R(\FSM_sequential_sCurrentState_reg[3]_0 ));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__1 \GenerateBuffer[0].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[0]),
        .doutb(xsS2MM_TdataLoc[2]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__11 \GenerateBuffer[10].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[10]),
        .doutb(xsS2MM_TdataLoc[12]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__12 \GenerateBuffer[11].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[11]),
        .doutb(xsS2MM_TdataLoc[13]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__13 \GenerateBuffer[12].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[12]),
        .doutb(xsS2MM_TdataLoc[14]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__14 \GenerateBuffer[13].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[13]),
        .doutb(xsS2MM_TdataLoc[15]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__15 \GenerateBuffer[14].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[0]),
        .doutb(xsS2MM_TdataLoc[18]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__16 \GenerateBuffer[15].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[1]),
        .doutb(xsS2MM_TdataLoc[19]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__17 \GenerateBuffer[16].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[2]),
        .doutb(xsS2MM_TdataLoc[20]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__18 \GenerateBuffer[17].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[3]),
        .doutb(xsS2MM_TdataLoc[21]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__19 \GenerateBuffer[18].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[4]),
        .doutb(xsS2MM_TdataLoc[22]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__20 \GenerateBuffer[19].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[5]),
        .doutb(xsS2MM_TdataLoc[23]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__2 \GenerateBuffer[1].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[1]),
        .doutb(xsS2MM_TdataLoc[3]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__21 \GenerateBuffer[20].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[6]),
        .doutb(xsS2MM_TdataLoc[24]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__22 \GenerateBuffer[21].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[7]),
        .doutb(xsS2MM_TdataLoc[25]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__23 \GenerateBuffer[22].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[8]),
        .doutb(xsS2MM_TdataLoc[26]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__24 \GenerateBuffer[23].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[9]),
        .doutb(xsS2MM_TdataLoc[27]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__25 \GenerateBuffer[24].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[10]),
        .doutb(xsS2MM_TdataLoc[28]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__26 \GenerateBuffer[25].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[11]),
        .doutb(xsS2MM_TdataLoc[29]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__27 \GenerateBuffer[26].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[12]),
        .doutb(xsS2MM_TdataLoc[30]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0 \GenerateBuffer[27].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh1In[13]),
        .doutb(xsS2MM_TdataLoc[31]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__3 \GenerateBuffer[2].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[2]),
        .doutb(xsS2MM_TdataLoc[4]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__4 \GenerateBuffer[3].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[3]),
        .doutb(xsS2MM_TdataLoc[5]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__5 \GenerateBuffer[4].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[4]),
        .doutb(xsS2MM_TdataLoc[6]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__6 \GenerateBuffer[5].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[5]),
        .doutb(xsS2MM_TdataLoc[7]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__7 \GenerateBuffer[6].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[6]),
        .doutb(xsS2MM_TdataLoc[8]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__8 \GenerateBuffer[7].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[7]),
        .doutb(xsS2MM_TdataLoc[9]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__9 \GenerateBuffer[8].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[8]),
        .doutb(xsS2MM_TdataLoc[10]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__10 \GenerateBuffer[9].InstBRAM_Buffer 
       (.addra(sInAddrCounterR),
        .addrb(xsOutAddrCounter_reg),
        .clka(SysClk),
        .clkb(AxiStreamClk),
        .dina(sCh2In[9]),
        .doutb(xsS2MM_TdataLoc[11]),
        .ena(1'b1),
        .enb(1'b1),
        .wea(sWeaBuffer));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_102 InstBufEmptyHandShake
       (.AxiStreamClk(AxiStreamClk),
        .Q(sCurrentState[0]),
        .SR(SR),
        .SysClk(SysClk),
        .iRdy_reg_0(InstBufEmptyHandShake_n_0),
        .sSetStopRdy(sSetStopRdy),
        .xsBufEmptyPush(xsBufEmptyPush),
        .xsBufEmptyPush0(xsBufEmptyPush0),
        .xsBufEmptyPush_reg(xsBufEmpty_reg_0),
        .xsBufEmptyR(xsBufEmptyR));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_103 InstBufFullHandShake
       (.AxiStreamClk(AxiStreamClk),
        .D(D),
        .E(InstBufFullHandShake_n_3),
        .\FSM_sequential_sCurrentState[3]_i_4_0 (InstBufEmptyHandShake_n_0),
        .\FSM_sequential_sCurrentState_reg[0] (InstOutAddrCntStartHandshake_n_1),
        .\FSM_sequential_sCurrentState_reg[0]_0 (\FSM_sequential_sCurrentState[3]_i_6_n_0 ),
        .\FSM_sequential_sCurrentState_reg[0]_1 (\FSM_sequential_sCurrentState_reg[1]_0 ),
        .Q(sCurrentState),
        .SR(SR),
        .iRdy(iRdy),
        .lBufferFull(lBufferFull),
        .lSlvReg1125_out__0(lSlvReg1125_out__0),
        .s00_axi_aclk(s00_axi_aclk),
        .sBufferFull(sBufferFull),
        .sSetStopRdy(sSetStopRdy));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_104 InstBufSetStopHandShake
       (.Q(sCurrentState),
        .SR(SR),
        .SysClk(SysClk),
        .lSetStop(lSetStop),
        .s00_axi_aclk(s00_axi_aclk),
        .sSetStopRdy(sSetStopRdy));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_105 InstLoadOutCntHandshake
       (.AxiStreamClk(AxiStreamClk),
        .CO(eqOp0_out),
        .O({InstLoadOutCntHandshake_n_2,InstLoadOutCntHandshake_n_3,InstLoadOutCntHandshake_n_4,InstLoadOutCntHandshake_n_5}),
        .Q(xsOutAddrCntStart),
        .SR(SR),
        .SysClk(SysClk),
        .iRdy(iRdy),
        .out(out),
        .sBufferFull(sBufferFull),
        .s_axis_s2mm_tlast(s_axis_s2mm_tlast),
        .s_axis_s2mm_tready(s_axis_s2mm_tready),
        .xsBufEmpty_reg(InstLoadOutCntHandshake_n_16),
        .xsBufEmpty_reg_0(xsBufEmpty_reg_0),
        .xsOutAddrCntEn(xsOutAddrCntEn),
        .xsOutAddrCntEnR(xsOutAddrCntEnR),
        .xsOutAddrCntEnRR(xsOutAddrCntEnRR),
        .xsOutAddrCntEnR_reg(InstLoadOutCntHandshake_n_1),
        .xsOutAddrCounter2(xsOutAddrCounter2),
        .xsOutAddrCounter_reg(xsOutAddrCounter_reg),
        .\xsOutAddrCounter_reg[11] ({InstLoadOutCntHandshake_n_10,InstLoadOutCntHandshake_n_11,InstLoadOutCntHandshake_n_12,InstLoadOutCntHandshake_n_13}),
        .\xsOutAddrCounter_reg[13] ({InstLoadOutCntHandshake_n_14,InstLoadOutCntHandshake_n_15}),
        .\xsOutAddrCounter_reg[7] ({InstLoadOutCntHandshake_n_6,InstLoadOutCntHandshake_n_7,InstLoadOutCntHandshake_n_8,InstLoadOutCntHandshake_n_9}),
        .xsS2MM_TlastLoc_reg(InstLoadOutCntHandshake_n_17),
        .xsS2MM_TlastLoc_reg_0(\eqOp_inferred__0/i__carry__0_n_3 ));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_106 InstOutAddrCntEnHandShake
       (.AxiStreamClk(AxiStreamClk),
        .SR(SR),
        .SysClk(SysClk),
        .\oData_reg[0]_0 (InstOutAddrCntEnHandShake_n_1),
        .sOutAddrCntEnDin(sOutAddrCntEnDin),
        .sOutAddrCntEnPush(sOutAddrCntEnPush),
        .sOutAddrCntEnPush0(sOutAddrCntEnPush0),
        .sOutAddrCntEnSetPush(sOutAddrCntEnSetPush),
        .xsOutAddrCntEn(xsOutAddrCntEn));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized1_107 InstOutAddrCntStartHandshake
       (.AxiStreamClk(AxiStreamClk),
        .CO(eqOp1_out),
        .E(InstOutAddrCntStartHandshake_n_0),
        .\FSM_sequential_sCurrentState_reg[0] (eqOp2_out),
        .\FSM_sequential_sCurrentState_reg[0]_0 (\sAddrTrigger_reg[0]_0 ),
        .O({minusOp_carry__2_n_6,minusOp_carry__2_n_7}),
        .Q(sCurrentState),
        .SR(SR),
        .SysClk(SysClk),
        .\iData_int_reg[0]_0 (\FSM_sequential_sCurrentState_reg[0]_i_2_0 [2]),
        .\iData_int_reg[11]_0 ({minusOp_carry__1_n_4,minusOp_carry__1_n_5,minusOp_carry__1_n_6,minusOp_carry__1_n_7}),
        .\iData_int_reg[3]_0 ({minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .\iData_int_reg[7]_0 ({minusOp_carry__0_n_4,minusOp_carry__0_n_5,minusOp_carry__0_n_6,minusOp_carry__0_n_7}),
        .iRdy_reg_0(InstOutAddrCntStartHandshake_n_1),
        .\oData_reg[13]_0 ({InstOutAddrCntStartHandshake_n_2,InstOutAddrCntStartHandshake_n_3,InstOutAddrCntStartHandshake_n_4,InstOutAddrCntStartHandshake_n_5,InstOutAddrCntStartHandshake_n_6,InstOutAddrCntStartHandshake_n_7,InstOutAddrCntStartHandshake_n_8,InstOutAddrCntStartHandshake_n_9,InstOutAddrCntStartHandshake_n_10,InstOutAddrCntStartHandshake_n_11,InstOutAddrCntStartHandshake_n_12,InstOutAddrCntStartHandshake_n_13,InstOutAddrCntStartHandshake_n_14,InstOutAddrCntStartHandshake_n_15}));
  CARRY4 \eqOp_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\eqOp_inferred__0/i__carry_n_0 ,\eqOp_inferred__0/i__carry_n_1 ,\eqOp_inferred__0/i__carry_n_2 ,\eqOp_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__16_n_0,i__carry_i_2__16_n_0,i__carry_i_3__15_n_0,i__carry_i_4__16_n_0}));
  CARRY4 \eqOp_inferred__0/i__carry__0 
       (.CI(\eqOp_inferred__0/i__carry_n_0 ),
        .CO({\NLW_eqOp_inferred__0/i__carry__0_CO_UNCONNECTED [3:1],\eqOp_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,i__carry__0_i_1__14_n_0}));
  CARRY4 \eqOp_inferred__3/i__carry 
       (.CI(1'b0),
        .CO({\eqOp_inferred__3/i__carry_n_0 ,\eqOp_inferred__3/i__carry_n_1 ,\eqOp_inferred__3/i__carry_n_2 ,\eqOp_inferred__3/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__3/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  CARRY4 \eqOp_inferred__3/i__carry__0 
       (.CI(\eqOp_inferred__3/i__carry_n_0 ),
        .CO({\NLW_eqOp_inferred__3/i__carry__0_CO_UNCONNECTED [3:1],eqOp5_out}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__3/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,i__carry__0_i_1_n_0}));
  CARRY4 \eqOp_inferred__5/i__carry 
       (.CI(1'b0),
        .CO({\eqOp_inferred__5/i__carry_n_0 ,\eqOp_inferred__5/i__carry_n_1 ,\eqOp_inferred__5/i__carry_n_2 ,\eqOp_inferred__5/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__5/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__0_n_0,i__carry_i_2__0_n_0,i__carry_i_3__0_n_0,i__carry_i_4__0_n_0}));
  CARRY4 \eqOp_inferred__5/i__carry__0 
       (.CI(\eqOp_inferred__5/i__carry_n_0 ),
        .CO({\NLW_eqOp_inferred__5/i__carry__0_CO_UNCONNECTED [3:1],eqOp2_out}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__5/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,i__carry__0_i_1__0_n_0}));
  CARRY4 \eqOp_inferred__6/i__carry 
       (.CI(1'b0),
        .CO({\eqOp_inferred__6/i__carry_n_0 ,\eqOp_inferred__6/i__carry_n_1 ,\eqOp_inferred__6/i__carry_n_2 ,\eqOp_inferred__6/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__6/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__1_n_0,i__carry_i_2__1_n_0,i__carry_i_3__1_n_0,i__carry_i_4__1_n_0}));
  CARRY4 \eqOp_inferred__6/i__carry__0 
       (.CI(\eqOp_inferred__6/i__carry_n_0 ),
        .CO({\NLW_eqOp_inferred__6/i__carry__0_CO_UNCONNECTED [3:1],eqOp1_out}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_eqOp_inferred__6/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,i__carry__0_i_1__1_n_0}));
  CARRY4 geqOp_carry
       (.CI(1'b0),
        .CO({geqOp_carry_n_0,geqOp_carry_n_1,geqOp_carry_n_2,geqOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI({geqOp_carry_i_1_n_0,geqOp_carry_i_2_n_0,geqOp_carry_i_3_n_0,geqOp_carry_i_4_n_0}),
        .O(NLW_geqOp_carry_O_UNCONNECTED[3:0]),
        .S({geqOp_carry_i_5_n_0,geqOp_carry_i_6_n_0,geqOp_carry_i_7_n_0,geqOp_carry_i_8_n_0}));
  CARRY4 geqOp_carry__0
       (.CI(geqOp_carry_n_0),
        .CO({NLW_geqOp_carry__0_CO_UNCONNECTED[3],geqOp,geqOp_carry__0_n_2,geqOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,geqOp_carry__0_i_1_n_0,geqOp_carry__0_i_2_n_0,geqOp_carry__0_i_3_n_0}),
        .O(NLW_geqOp_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,geqOp_carry__0_i_4_n_0,geqOp_carry__0_i_5_n_0,geqOp_carry__0_i_6_n_0}));
  LUT4 #(
    .INIT(16'h00E4)) 
    geqOp_carry__0_i_1
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[12]),
        .I2(sCh2In[12]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .O(geqOp_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry__0_i_2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[10]),
        .I2(sCh2In[10]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .I5(\sTriggerSourceR[11]_i_1_n_0 ),
        .O(geqOp_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry__0_i_3
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[8]),
        .I2(sCh2In[8]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .I5(\sTriggerSourceR[9]_i_1_n_0 ),
        .O(geqOp_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'hA965)) 
    geqOp_carry__0_i_4
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[12]),
        .I3(sCh2In[12]),
        .O(geqOp_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry__0_i_5
       (.I0(sCh2In[10]),
        .I1(sCh1In[10]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I4(\sTriggerSourceR[11]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .O(geqOp_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry__0_i_6
       (.I0(sCh2In[8]),
        .I1(sCh1In[8]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I4(\sTriggerSourceR[9]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .O(geqOp_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry_i_1
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[6]),
        .I2(sCh2In[6]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .I5(\sTriggerSourceR[7]_i_1_n_0 ),
        .O(geqOp_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry_i_2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[4]),
        .I2(sCh2In[4]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .I5(\sTriggerSourceR[5]_i_1_n_0 ),
        .O(geqOp_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry_i_3
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[2]),
        .I2(sCh2In[2]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .I5(\sTriggerSourceR[3]_i_1_n_0 ),
        .O(geqOp_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h00E4FFFF000000E4)) 
    geqOp_carry_i_4
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[0]),
        .I2(sCh2In[0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .I5(\sTriggerSourceR[1]_i_1_n_0 ),
        .O(geqOp_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry_i_5
       (.I0(sCh2In[6]),
        .I1(sCh1In[6]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I4(\sTriggerSourceR[7]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .O(geqOp_carry_i_5_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry_i_6
       (.I0(sCh2In[4]),
        .I1(sCh1In[4]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I4(\sTriggerSourceR[5]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .O(geqOp_carry_i_6_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry_i_7
       (.I0(sCh2In[2]),
        .I1(sCh1In[2]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I4(\sTriggerSourceR[3]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .O(geqOp_carry_i_7_n_0));
  LUT6 #(
    .INIT(64'hAC5300000000AC53)) 
    geqOp_carry_i_8
       (.I0(sCh2In[0]),
        .I1(sCh1In[0]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I4(\sTriggerSourceR[1]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .O(geqOp_carry_i_8_n_0));
  CARRY4 \geqOp_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\geqOp_inferred__0/i__carry_n_0 ,\geqOp_inferred__0/i__carry_n_1 ,\geqOp_inferred__0/i__carry_n_2 ,\geqOp_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({i__carry_i_1__3_n_0,i__carry_i_2__3_n_0,i__carry_i_3__3_n_0,i__carry_i_4__3_n_0}),
        .O(\NLW_geqOp_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__0_n_0,i__carry_i_6__0_n_0,i__carry_i_7__0_n_0,i__carry_i_8__0_n_0}));
  CARRY4 \geqOp_inferred__0/i__carry__0 
       (.CI(\geqOp_inferred__0/i__carry_n_0 ),
        .CO({\NLW_geqOp_inferred__0/i__carry__0_CO_UNCONNECTED [3],geqOp26_in,\geqOp_inferred__0/i__carry__0_n_2 ,\geqOp_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,i__carry__0_i_1__16_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__0_n_0}),
        .O(\NLW_geqOp_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__0_i_4__11_n_0,i__carry__0_i_5__0_n_0,i__carry__0_i_6__0_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_1
       (.I0(sInAddrCounter_reg[12]),
        .I1(\minusOp_inferred__1/i__carry__2_0 [12]),
        .I2(sInAddrCounter_reg[13]),
        .I3(\minusOp_inferred__1/i__carry__2_0 [13]),
        .O(i__carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_1__0
       (.I0(sInAddrCounter_reg[12]),
        .I1(minusOp0_out[12]),
        .I2(sInAddrCounter_reg[13]),
        .I3(minusOp0_out[13]),
        .O(i__carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_1__1
       (.I0(sInAddrCounter_reg[12]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [12]),
        .I2(sInAddrCounter_reg[13]),
        .I3(\eqOp_inferred__6/i__carry__0_0 [13]),
        .O(i__carry__0_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_1__14
       (.I0(xsBufferFullAddr[13]),
        .I1(xsOutAddrCounter_reg[13]),
        .I2(xsBufferFullAddr[12]),
        .I3(xsOutAddrCounter_reg[12]),
        .O(i__carry__0_i_1__14_n_0));
  LUT4 #(
    .INIT(16'h028A)) 
    i__carry__0_i_1__15
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[12]),
        .I3(sCh2In[12]),
        .O(i__carry__0_i_1__15_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1__16
       (.I0(\sTriggerSourceR_reg_n_0_[12] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .O(i__carry__0_i_1__16_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry__0_i_2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[10]),
        .I3(sCh2In[10]),
        .I4(\sTriggerSourceR[11]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .O(i__carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__0
       (.I0(\sTriggerSourceR_reg_n_0_[10] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .I3(\sTriggerSourceR_reg_n_0_[11] ),
        .O(i__carry__0_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry__0_i_3
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[8]),
        .I3(sCh2In[8]),
        .I4(\sTriggerSourceR[9]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .O(i__carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__0
       (.I0(\sTriggerSourceR_reg_n_0_[8] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .I3(\sTriggerSourceR_reg_n_0_[9] ),
        .O(i__carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hE41B)) 
    i__carry__0_i_4__10
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I1(sCh1In[12]),
        .I2(sCh2In[12]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .O(i__carry__0_i_4__10_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_4__11
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .I1(\sTriggerSourceR_reg_n_0_[12] ),
        .O(i__carry__0_i_4__11_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry__0_i_5
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I1(sCh2In[10]),
        .I2(sCh1In[10]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .I5(\sTriggerSourceR[11]_i_1_n_0 ),
        .O(i__carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__0
       (.I0(\sTriggerSourceR_reg_n_0_[10] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I2(\sTriggerSourceR_reg_n_0_[11] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .O(i__carry__0_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry__0_i_6
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I1(sCh2In[8]),
        .I2(sCh1In[8]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .I5(\sTriggerSourceR[9]_i_1_n_0 ),
        .O(i__carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__0
       (.I0(\sTriggerSourceR_reg_n_0_[8] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I2(\sTriggerSourceR_reg_n_0_[9] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .O(i__carry__0_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    i__carry__2_i_2
       (.I0(Q[12]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [12]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [12]),
        .I3(\minusOp_inferred__1/i__carry__2_0 [13]),
        .I4(\eqOp_inferred__6/i__carry__0_0 [13]),
        .I5(sAddrTrigger),
        .O(i__carry__2_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1
       (.I0(sInAddrCounter_reg[9]),
        .I1(\minusOp_inferred__1/i__carry__2_0 [9]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [11]),
        .I3(sInAddrCounter_reg[11]),
        .I4(\minusOp_inferred__1/i__carry__2_0 [10]),
        .I5(sInAddrCounter_reg[10]),
        .O(i__carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__0
       (.I0(sInAddrCounter_reg[9]),
        .I1(minusOp0_out[9]),
        .I2(minusOp0_out[11]),
        .I3(sInAddrCounter_reg[11]),
        .I4(minusOp0_out[10]),
        .I5(sInAddrCounter_reg[10]),
        .O(i__carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__1
       (.I0(sInAddrCounter_reg[9]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [9]),
        .I2(\eqOp_inferred__6/i__carry__0_0 [11]),
        .I3(sInAddrCounter_reg[11]),
        .I4(\eqOp_inferred__6/i__carry__0_0 [10]),
        .I5(sInAddrCounter_reg[10]),
        .O(i__carry_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__16
       (.I0(xsOutAddrCounter_reg[9]),
        .I1(xsBufferFullAddr[9]),
        .I2(xsOutAddrCounter_reg[10]),
        .I3(xsBufferFullAddr[10]),
        .I4(xsBufferFullAddr[11]),
        .I5(xsOutAddrCounter_reg[11]),
        .O(i__carry_i_1__16_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry_i_1__2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[6]),
        .I3(sCh2In[6]),
        .I4(\sTriggerSourceR[7]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .O(i__carry_i_1__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__3
       (.I0(\sTriggerSourceR_reg_n_0_[6] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .I3(\sTriggerSourceR_reg_n_0_[7] ),
        .O(i__carry_i_1__3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2
       (.I0(sInAddrCounter_reg[6]),
        .I1(\minusOp_inferred__1/i__carry__2_0 [6]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [8]),
        .I3(sInAddrCounter_reg[8]),
        .I4(\minusOp_inferred__1/i__carry__2_0 [7]),
        .I5(sInAddrCounter_reg[7]),
        .O(i__carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__0
       (.I0(sInAddrCounter_reg[6]),
        .I1(minusOp0_out[6]),
        .I2(minusOp0_out[8]),
        .I3(sInAddrCounter_reg[8]),
        .I4(minusOp0_out[7]),
        .I5(sInAddrCounter_reg[7]),
        .O(i__carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__1
       (.I0(sInAddrCounter_reg[6]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [6]),
        .I2(\eqOp_inferred__6/i__carry__0_0 [8]),
        .I3(sInAddrCounter_reg[8]),
        .I4(\eqOp_inferred__6/i__carry__0_0 [7]),
        .I5(sInAddrCounter_reg[7]),
        .O(i__carry_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__16
       (.I0(xsOutAddrCounter_reg[6]),
        .I1(xsBufferFullAddr[6]),
        .I2(xsOutAddrCounter_reg[7]),
        .I3(xsBufferFullAddr[7]),
        .I4(xsBufferFullAddr[8]),
        .I5(xsOutAddrCounter_reg[8]),
        .O(i__carry_i_2__16_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry_i_2__2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[4]),
        .I3(sCh2In[4]),
        .I4(\sTriggerSourceR[5]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .O(i__carry_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__3
       (.I0(\sTriggerSourceR_reg_n_0_[4] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .I3(\sTriggerSourceR_reg_n_0_[5] ),
        .O(i__carry_i_2__3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3
       (.I0(sInAddrCounter_reg[3]),
        .I1(\minusOp_inferred__1/i__carry__2_0 [3]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [5]),
        .I3(sInAddrCounter_reg[5]),
        .I4(\minusOp_inferred__1/i__carry__2_0 [4]),
        .I5(sInAddrCounter_reg[4]),
        .O(i__carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__0
       (.I0(sInAddrCounter_reg[3]),
        .I1(minusOp0_out[3]),
        .I2(minusOp0_out[5]),
        .I3(sInAddrCounter_reg[5]),
        .I4(minusOp0_out[4]),
        .I5(sInAddrCounter_reg[4]),
        .O(i__carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__1
       (.I0(sInAddrCounter_reg[3]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [3]),
        .I2(\eqOp_inferred__6/i__carry__0_0 [5]),
        .I3(sInAddrCounter_reg[5]),
        .I4(\eqOp_inferred__6/i__carry__0_0 [4]),
        .I5(sInAddrCounter_reg[4]),
        .O(i__carry_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__15
       (.I0(xsBufferFullAddr[4]),
        .I1(xsOutAddrCounter_reg[4]),
        .I2(xsOutAddrCounter_reg[5]),
        .I3(xsBufferFullAddr[5]),
        .I4(xsOutAddrCounter_reg[3]),
        .I5(xsBufferFullAddr[3]),
        .O(i__carry_i_3__15_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry_i_3__2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[2]),
        .I3(sCh2In[2]),
        .I4(\sTriggerSourceR[3]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .O(i__carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__3
       (.I0(\sTriggerSourceR_reg_n_0_[2] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .I3(\sTriggerSourceR_reg_n_0_[3] ),
        .O(i__carry_i_3__3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4
       (.I0(sInAddrCounter_reg[0]),
        .I1(\minusOp_inferred__1/i__carry__2_0 [0]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [2]),
        .I3(sInAddrCounter_reg[2]),
        .I4(\minusOp_inferred__1/i__carry__2_0 [1]),
        .I5(sInAddrCounter_reg[1]),
        .O(i__carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__0
       (.I0(sInAddrCounter_reg[0]),
        .I1(minusOp0_out[0]),
        .I2(minusOp0_out[2]),
        .I3(sInAddrCounter_reg[2]),
        .I4(minusOp0_out[1]),
        .I5(sInAddrCounter_reg[1]),
        .O(i__carry_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__1
       (.I0(sInAddrCounter_reg[0]),
        .I1(\eqOp_inferred__6/i__carry__0_0 [0]),
        .I2(\eqOp_inferred__6/i__carry__0_0 [2]),
        .I3(sInAddrCounter_reg[2]),
        .I4(\eqOp_inferred__6/i__carry__0_0 [1]),
        .I5(sInAddrCounter_reg[1]),
        .O(i__carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__16
       (.I0(xsOutAddrCounter_reg[1]),
        .I1(xsBufferFullAddr[1]),
        .I2(xsOutAddrCounter_reg[2]),
        .I3(xsBufferFullAddr[2]),
        .I4(xsBufferFullAddr[0]),
        .I5(xsOutAddrCounter_reg[0]),
        .O(i__carry_i_4__16_n_0));
  LUT6 #(
    .INIT(64'h028AFFFF0000028A)) 
    i__carry_i_4__2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I2(sCh1In[0]),
        .I3(sCh2In[0]),
        .I4(\sTriggerSourceR[1]_i_1_n_0 ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .O(i__carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__3
       (.I0(\sTriggerSourceR_reg_n_0_[0] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .I3(\sTriggerSourceR_reg_n_0_[1] ),
        .O(i__carry_i_4__3_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry_i_5
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I1(sCh2In[6]),
        .I2(sCh1In[6]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .I5(\sTriggerSourceR[7]_i_1_n_0 ),
        .O(i__carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__0
       (.I0(\sTriggerSourceR_reg_n_0_[6] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I2(\sTriggerSourceR_reg_n_0_[7] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .O(i__carry_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry_i_6
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I1(sCh2In[4]),
        .I2(sCh1In[4]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .I5(\sTriggerSourceR[5]_i_1_n_0 ),
        .O(i__carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__0
       (.I0(\sTriggerSourceR_reg_n_0_[4] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I2(\sTriggerSourceR_reg_n_0_[5] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .O(i__carry_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry_i_7
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I1(sCh2In[2]),
        .I2(sCh1In[2]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .I5(\sTriggerSourceR[3]_i_1_n_0 ),
        .O(i__carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__0
       (.I0(\sTriggerSourceR_reg_n_0_[2] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I2(\sTriggerSourceR_reg_n_0_[3] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .O(i__carry_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h99A50000000099A5)) 
    i__carry_i_8
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I1(sCh2In[0]),
        .I2(sCh1In[0]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .I5(\sTriggerSourceR[1]_i_1_n_0 ),
        .O(i__carry_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__0
       (.I0(\sTriggerSourceR_reg_n_0_[0] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I2(\sTriggerSourceR_reg_n_0_[1] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .O(i__carry_i_8__0_n_0));
  CARRY4 leqOp_carry
       (.CI(1'b0),
        .CO({leqOp_carry_n_0,leqOp_carry_n_1,leqOp_carry_n_2,leqOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI({leqOp_carry_i_1_n_0,leqOp_carry_i_2_n_0,leqOp_carry_i_3_n_0,leqOp_carry_i_4_n_0}),
        .O(NLW_leqOp_carry_O_UNCONNECTED[3:0]),
        .S({leqOp_carry_i_5_n_0,leqOp_carry_i_6_n_0,leqOp_carry_i_7_n_0,leqOp_carry_i_8_n_0}));
  CARRY4 leqOp_carry__0
       (.CI(leqOp_carry_n_0),
        .CO({NLW_leqOp_carry__0_CO_UNCONNECTED[3],leqOp27_in,leqOp_carry__0_n_2,leqOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,leqOp_carry__0_i_1_n_0,leqOp_carry__0_i_2_n_0,leqOp_carry__0_i_3_n_0}),
        .O(NLW_leqOp_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,leqOp_carry__0_i_4_n_0,leqOp_carry__0_i_5_n_0,leqOp_carry__0_i_6_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    leqOp_carry__0_i_1
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .I1(\sTriggerSourceR_reg_n_0_[12] ),
        .O(leqOp_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry__0_i_2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I1(\sTriggerSourceR_reg_n_0_[10] ),
        .I2(\sTriggerSourceR_reg_n_0_[11] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .O(leqOp_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry__0_i_3
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I1(\sTriggerSourceR_reg_n_0_[8] ),
        .I2(\sTriggerSourceR_reg_n_0_[9] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .O(leqOp_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    leqOp_carry__0_i_4
       (.I0(\sTriggerSourceR_reg_n_0_[12] ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [16]),
        .O(leqOp_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry__0_i_5
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [14]),
        .I1(\sTriggerSourceR_reg_n_0_[10] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [15]),
        .I3(\sTriggerSourceR_reg_n_0_[11] ),
        .O(leqOp_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry__0_i_6
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [12]),
        .I1(\sTriggerSourceR_reg_n_0_[8] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [13]),
        .I3(\sTriggerSourceR_reg_n_0_[9] ),
        .O(leqOp_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry_i_1
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I1(\sTriggerSourceR_reg_n_0_[6] ),
        .I2(\sTriggerSourceR_reg_n_0_[7] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .O(leqOp_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry_i_2
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I1(\sTriggerSourceR_reg_n_0_[4] ),
        .I2(\sTriggerSourceR_reg_n_0_[5] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .O(leqOp_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry_i_3
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I1(\sTriggerSourceR_reg_n_0_[2] ),
        .I2(\sTriggerSourceR_reg_n_0_[3] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .O(leqOp_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    leqOp_carry_i_4
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I1(\sTriggerSourceR_reg_n_0_[0] ),
        .I2(\sTriggerSourceR_reg_n_0_[1] ),
        .I3(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .O(leqOp_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry_i_5
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [10]),
        .I1(\sTriggerSourceR_reg_n_0_[6] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [11]),
        .I3(\sTriggerSourceR_reg_n_0_[7] ),
        .O(leqOp_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry_i_6
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [8]),
        .I1(\sTriggerSourceR_reg_n_0_[4] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [9]),
        .I3(\sTriggerSourceR_reg_n_0_[5] ),
        .O(leqOp_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry_i_7
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [6]),
        .I1(\sTriggerSourceR_reg_n_0_[2] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [7]),
        .I3(\sTriggerSourceR_reg_n_0_[3] ),
        .O(leqOp_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    leqOp_carry_i_8
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [4]),
        .I1(\sTriggerSourceR_reg_n_0_[0] ),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [5]),
        .I3(\sTriggerSourceR_reg_n_0_[1] ),
        .O(leqOp_carry_i_8_n_0));
  CARRY4 \leqOp_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\leqOp_inferred__0/i__carry_n_0 ,\leqOp_inferred__0/i__carry_n_1 ,\leqOp_inferred__0/i__carry_n_2 ,\leqOp_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({i__carry_i_1__2_n_0,i__carry_i_2__2_n_0,i__carry_i_3__2_n_0,i__carry_i_4__2_n_0}),
        .O(\NLW_leqOp_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5_n_0,i__carry_i_6_n_0,i__carry_i_7_n_0,i__carry_i_8_n_0}));
  CARRY4 \leqOp_inferred__0/i__carry__0 
       (.CI(\leqOp_inferred__0/i__carry_n_0 ),
        .CO({\NLW_leqOp_inferred__0/i__carry__0_CO_UNCONNECTED [3],leqOp,\leqOp_inferred__0/i__carry__0_n_2 ,\leqOp_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,i__carry__0_i_1__15_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0}),
        .O(\NLW_leqOp_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__0_i_4__10_n_0,i__carry__0_i_5_n_0,i__carry__0_i_6_n_0}));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(minusOp_carry_i_1_n_0),
        .DI(Q[3:0]),
        .O({minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .S({minusOp_carry_i_2_n_0,minusOp_carry_i_3_n_0,minusOp_carry_i_4_n_0,minusOp_carry_i_5_n_0}));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O({minusOp_carry__0_n_4,minusOp_carry__0_n_5,minusOp_carry__0_n_6,minusOp_carry__0_n_7}),
        .S({minusOp_carry__0_i_1_n_0,minusOp_carry__0_i_2_n_0,minusOp_carry__0_i_3_n_0,minusOp_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__0_i_1
       (.I0(Q[7]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [7]),
        .O(minusOp_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__0_i_2
       (.I0(Q[6]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [6]),
        .O(minusOp_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__0_i_3
       (.I0(Q[5]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [5]),
        .O(minusOp_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__0_i_4
       (.I0(Q[4]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [4]),
        .O(minusOp_carry__0_i_4_n_0));
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO({minusOp_carry__1_n_0,minusOp_carry__1_n_1,minusOp_carry__1_n_2,minusOp_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O({minusOp_carry__1_n_4,minusOp_carry__1_n_5,minusOp_carry__1_n_6,minusOp_carry__1_n_7}),
        .S({minusOp_carry__1_i_1_n_0,minusOp_carry__1_i_2_n_0,minusOp_carry__1_i_3_n_0,minusOp_carry__1_i_4_n_0}));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__1_i_1
       (.I0(Q[11]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [11]),
        .O(minusOp_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__1_i_2
       (.I0(Q[10]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [10]),
        .O(minusOp_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__1_i_3
       (.I0(Q[9]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [9]),
        .O(minusOp_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__1_i_4
       (.I0(Q[8]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [8]),
        .O(minusOp_carry__1_i_4_n_0));
  CARRY4 minusOp_carry__2
       (.CI(minusOp_carry__1_n_0),
        .CO({NLW_minusOp_carry__2_CO_UNCONNECTED[3:1],minusOp_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[12]}),
        .O({NLW_minusOp_carry__2_O_UNCONNECTED[3:2],minusOp_carry__2_n_6,minusOp_carry__2_n_7}),
        .S({1'b0,1'b0,minusOp_carry__2_i_1_n_0,minusOp_carry__2_i_2_n_0}));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__2_i_1
       (.I0(sAddrTrigger),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [13]),
        .O(minusOp_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry__2_i_2
       (.I0(Q[12]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [12]),
        .O(minusOp_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_1
       (.I0(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .O(minusOp_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry_i_2
       (.I0(Q[3]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [3]),
        .O(minusOp_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry_i_3
       (.I0(Q[2]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [2]),
        .O(minusOp_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry_i_4
       (.I0(Q[1]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [1]),
        .O(minusOp_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'hA9)) 
    minusOp_carry_i_5
       (.I0(Q[0]),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\minusOp_inferred__1/i__carry__2_0 [0]),
        .O(minusOp_carry_i_5_n_0));
  CARRY4 \minusOp_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\minusOp_inferred__1/i__carry_n_0 ,\minusOp_inferred__1/i__carry_n_1 ,\minusOp_inferred__1/i__carry_n_2 ,\minusOp_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({DI,Q[0]}),
        .O(minusOp0_out[3:0]),
        .S(S));
  CARRY4 \minusOp_inferred__1/i__carry__0 
       (.CI(\minusOp_inferred__1/i__carry_n_0 ),
        .CO({\minusOp_inferred__1/i__carry__0_n_0 ,\minusOp_inferred__1/i__carry__0_n_1 ,\minusOp_inferred__1/i__carry__0_n_2 ,\minusOp_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(i__carry_i_3__0_0),
        .O(minusOp0_out[7:4]),
        .S(i__carry_i_3__0_1));
  CARRY4 \minusOp_inferred__1/i__carry__1 
       (.CI(\minusOp_inferred__1/i__carry__0_n_0 ),
        .CO({\minusOp_inferred__1/i__carry__1_n_0 ,\minusOp_inferred__1/i__carry__1_n_1 ,\minusOp_inferred__1/i__carry__1_n_2 ,\minusOp_inferred__1/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(i__carry_i_2__0_0),
        .O(minusOp0_out[11:8]),
        .S(i__carry_i_2__0_1));
  CARRY4 \minusOp_inferred__1/i__carry__2 
       (.CI(\minusOp_inferred__1/i__carry__1_n_0 ),
        .CO({\NLW_minusOp_inferred__1/i__carry__2_CO_UNCONNECTED [3:1],\minusOp_inferred__1/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,i__carry__0_i_1__0_0}),
        .O({\NLW_minusOp_inferred__1/i__carry__2_O_UNCONNECTED [3:2],minusOp0_out[13:12]}),
        .S({1'b0,1'b0,i__carry__2_i_2_n_0,i__carry__0_i_1__0_1}));
  CARRY4 plusOp_carry
       (.CI(1'b0),
        .CO({plusOp_carry_n_0,plusOp_carry_n_1,plusOp_carry_n_2,plusOp_carry_n_3}),
        .CYINIT(1'b0),
        .DI(xsOutAddrCntStart[3:0]),
        .O(plusOp[3:0]),
        .S({plusOp_carry_i_1_n_0,plusOp_carry_i_2_n_0,plusOp_carry_i_3_n_0,plusOp_carry_i_4_n_0}));
  CARRY4 plusOp_carry__0
       (.CI(plusOp_carry_n_0),
        .CO({plusOp_carry__0_n_0,plusOp_carry__0_n_1,plusOp_carry__0_n_2,plusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(xsOutAddrCntStart[7:4]),
        .O(plusOp[7:4]),
        .S({plusOp_carry__0_i_1_n_0,plusOp_carry__0_i_2_n_0,plusOp_carry__0_i_3_n_0,plusOp_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__0_i_1
       (.I0(xsOutAddrCntStart[7]),
        .I1(\xsBufferFullAddr_reg[13]_0 [7]),
        .O(plusOp_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__0_i_2
       (.I0(xsOutAddrCntStart[6]),
        .I1(\xsBufferFullAddr_reg[13]_0 [6]),
        .O(plusOp_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__0_i_3
       (.I0(xsOutAddrCntStart[5]),
        .I1(\xsBufferFullAddr_reg[13]_0 [5]),
        .O(plusOp_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__0_i_4
       (.I0(xsOutAddrCntStart[4]),
        .I1(\xsBufferFullAddr_reg[13]_0 [4]),
        .O(plusOp_carry__0_i_4_n_0));
  CARRY4 plusOp_carry__1
       (.CI(plusOp_carry__0_n_0),
        .CO({plusOp_carry__1_n_0,plusOp_carry__1_n_1,plusOp_carry__1_n_2,plusOp_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(xsOutAddrCntStart[11:8]),
        .O(plusOp[11:8]),
        .S({plusOp_carry__1_i_1_n_0,plusOp_carry__1_i_2_n_0,plusOp_carry__1_i_3_n_0,plusOp_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__1_i_1
       (.I0(xsOutAddrCntStart[11]),
        .I1(\xsBufferFullAddr_reg[13]_0 [11]),
        .O(plusOp_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__1_i_2
       (.I0(xsOutAddrCntStart[10]),
        .I1(\xsBufferFullAddr_reg[13]_0 [10]),
        .O(plusOp_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__1_i_3
       (.I0(xsOutAddrCntStart[9]),
        .I1(\xsBufferFullAddr_reg[13]_0 [9]),
        .O(plusOp_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__1_i_4
       (.I0(xsOutAddrCntStart[8]),
        .I1(\xsBufferFullAddr_reg[13]_0 [8]),
        .O(plusOp_carry__1_i_4_n_0));
  CARRY4 plusOp_carry__2
       (.CI(plusOp_carry__1_n_0),
        .CO({NLW_plusOp_carry__2_CO_UNCONNECTED[3:1],plusOp_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,xsOutAddrCntStart[12]}),
        .O({NLW_plusOp_carry__2_O_UNCONNECTED[3:2],plusOp[13:12]}),
        .S({1'b0,1'b0,plusOp_carry__2_i_1_n_0,plusOp_carry__2_i_2_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__2_i_1
       (.I0(xsOutAddrCntStart[13]),
        .I1(\xsBufferFullAddr_reg[13]_0 [13]),
        .O(plusOp_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry__2_i_2
       (.I0(xsOutAddrCntStart[12]),
        .I1(\xsBufferFullAddr_reg[13]_0 [12]),
        .O(plusOp_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry_i_1
       (.I0(xsOutAddrCntStart[3]),
        .I1(\xsBufferFullAddr_reg[13]_0 [3]),
        .O(plusOp_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry_i_2
       (.I0(xsOutAddrCntStart[2]),
        .I1(\xsBufferFullAddr_reg[13]_0 [2]),
        .O(plusOp_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry_i_3
       (.I0(xsOutAddrCntStart[1]),
        .I1(\xsBufferFullAddr_reg[13]_0 [1]),
        .O(plusOp_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    plusOp_carry_i_4
       (.I0(xsOutAddrCntStart[0]),
        .I1(\xsBufferFullAddr_reg[13]_0 [0]),
        .O(plusOp_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'hA8A80808A8080808)) 
    \sAddrTrigger[13]_i_1 
       (.I0(\sAddrTrigger[13]_i_2_n_0 ),
        .I1(\sAddrTrigger[13]_i_3_n_0 ),
        .I2(sCurrentState[1]),
        .I3(\sAddrTrigger_reg[0]_1 ),
        .I4(sTriggerCondition23_in),
        .I5(\sAddrTrigger_reg[0]_0 ),
        .O(sLoadBufStart));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \sAddrTrigger[13]_i_2 
       (.I0(sCurrentState[2]),
        .I1(sCurrentState[0]),
        .I2(sCurrentState[3]),
        .O(\sAddrTrigger[13]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \sAddrTrigger[13]_i_3 
       (.I0(\FSM_sequential_sCurrentState_reg[1]_0 ),
        .I1(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [1]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [2]),
        .O(\sAddrTrigger[13]_i_3_n_0 ));
  FDRE \sAddrTrigger_reg[0] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \sAddrTrigger_reg[10] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \sAddrTrigger_reg[11] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \sAddrTrigger_reg[12] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \sAddrTrigger_reg[13] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[13]),
        .Q(sAddrTrigger),
        .R(SR));
  FDRE \sAddrTrigger_reg[1] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \sAddrTrigger_reg[2] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \sAddrTrigger_reg[3] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \sAddrTrigger_reg[4] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \sAddrTrigger_reg[5] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \sAddrTrigger_reg[6] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \sAddrTrigger_reg[7] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \sAddrTrigger_reg[8] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \sAddrTrigger_reg[9] 
       (.C(SysClk),
        .CE(sLoadBufStart),
        .D(sInAddrCounterR[9]),
        .Q(Q[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFFAEB)) 
    \sInAddrCounterR[13]_i_1 
       (.I0(sInitDone_n),
        .I1(sCurrentState[0]),
        .I2(sCurrentState[1]),
        .I3(sCurrentState[2]),
        .I4(sCurrentState[3]),
        .O(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[0]),
        .Q(sInAddrCounterR[0]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[10] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[10]),
        .Q(sInAddrCounterR[10]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[11] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[11]),
        .Q(sInAddrCounterR[11]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[12] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[12]),
        .Q(sInAddrCounterR[12]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[13] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[13]),
        .Q(sInAddrCounterR[13]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[1]),
        .Q(sInAddrCounterR[1]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[2] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[2]),
        .Q(sInAddrCounterR[2]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[3] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[3]),
        .Q(sInAddrCounterR[3]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[4] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[4]),
        .Q(sInAddrCounterR[4]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[5] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[5]),
        .Q(sInAddrCounterR[5]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[6] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[6]),
        .Q(sInAddrCounterR[6]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[7] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[7]),
        .Q(sInAddrCounterR[7]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[8] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[8]),
        .Q(sInAddrCounterR[8]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounterR_reg[9] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCounter_reg[9]),
        .Q(sInAddrCounterR[9]),
        .R(sInAddrCounter0));
  LUT1 #(
    .INIT(2'h1)) 
    \sInAddrCounter[0]_i_2 
       (.I0(sInAddrCounter_reg[0]),
        .O(\sInAddrCounter[0]_i_2_n_0 ));
  FDRE \sInAddrCounter_reg[0] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[0]_i_1_n_7 ),
        .Q(sInAddrCounter_reg[0]),
        .R(sInAddrCounter0));
  CARRY4 \sInAddrCounter_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\sInAddrCounter_reg[0]_i_1_n_0 ,\sInAddrCounter_reg[0]_i_1_n_1 ,\sInAddrCounter_reg[0]_i_1_n_2 ,\sInAddrCounter_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\sInAddrCounter_reg[0]_i_1_n_4 ,\sInAddrCounter_reg[0]_i_1_n_5 ,\sInAddrCounter_reg[0]_i_1_n_6 ,\sInAddrCounter_reg[0]_i_1_n_7 }),
        .S({sInAddrCounter_reg[3:1],\sInAddrCounter[0]_i_2_n_0 }));
  FDRE \sInAddrCounter_reg[10] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[8]_i_1_n_5 ),
        .Q(sInAddrCounter_reg[10]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[11] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[8]_i_1_n_4 ),
        .Q(sInAddrCounter_reg[11]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[12] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[12]_i_1_n_7 ),
        .Q(sInAddrCounter_reg[12]),
        .R(sInAddrCounter0));
  CARRY4 \sInAddrCounter_reg[12]_i_1 
       (.CI(\sInAddrCounter_reg[8]_i_1_n_0 ),
        .CO({\NLW_sInAddrCounter_reg[12]_i_1_CO_UNCONNECTED [3:1],\sInAddrCounter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sInAddrCounter_reg[12]_i_1_O_UNCONNECTED [3:2],\sInAddrCounter_reg[12]_i_1_n_6 ,\sInAddrCounter_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,sInAddrCounter_reg[13:12]}));
  FDRE \sInAddrCounter_reg[13] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[12]_i_1_n_6 ),
        .Q(sInAddrCounter_reg[13]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[1] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[0]_i_1_n_6 ),
        .Q(sInAddrCounter_reg[1]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[2] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[0]_i_1_n_5 ),
        .Q(sInAddrCounter_reg[2]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[3] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[0]_i_1_n_4 ),
        .Q(sInAddrCounter_reg[3]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[4] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[4]_i_1_n_7 ),
        .Q(sInAddrCounter_reg[4]),
        .R(sInAddrCounter0));
  CARRY4 \sInAddrCounter_reg[4]_i_1 
       (.CI(\sInAddrCounter_reg[0]_i_1_n_0 ),
        .CO({\sInAddrCounter_reg[4]_i_1_n_0 ,\sInAddrCounter_reg[4]_i_1_n_1 ,\sInAddrCounter_reg[4]_i_1_n_2 ,\sInAddrCounter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sInAddrCounter_reg[4]_i_1_n_4 ,\sInAddrCounter_reg[4]_i_1_n_5 ,\sInAddrCounter_reg[4]_i_1_n_6 ,\sInAddrCounter_reg[4]_i_1_n_7 }),
        .S(sInAddrCounter_reg[7:4]));
  FDRE \sInAddrCounter_reg[5] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[4]_i_1_n_6 ),
        .Q(sInAddrCounter_reg[5]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[6] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[4]_i_1_n_5 ),
        .Q(sInAddrCounter_reg[6]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[7] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[4]_i_1_n_4 ),
        .Q(sInAddrCounter_reg[7]),
        .R(sInAddrCounter0));
  FDRE \sInAddrCounter_reg[8] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[8]_i_1_n_7 ),
        .Q(sInAddrCounter_reg[8]),
        .R(sInAddrCounter0));
  CARRY4 \sInAddrCounter_reg[8]_i_1 
       (.CI(\sInAddrCounter_reg[4]_i_1_n_0 ),
        .CO({\sInAddrCounter_reg[8]_i_1_n_0 ,\sInAddrCounter_reg[8]_i_1_n_1 ,\sInAddrCounter_reg[8]_i_1_n_2 ,\sInAddrCounter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sInAddrCounter_reg[8]_i_1_n_4 ,\sInAddrCounter_reg[8]_i_1_n_5 ,\sInAddrCounter_reg[8]_i_1_n_6 ,\sInAddrCounter_reg[8]_i_1_n_7 }),
        .S(sInAddrCounter_reg[11:8]));
  FDRE \sInAddrCounter_reg[9] 
       (.C(SysClk),
        .CE(sInAddrCntEn),
        .D(\sInAddrCounter_reg[8]_i_1_n_6 ),
        .Q(sInAddrCounter_reg[9]),
        .R(sInAddrCounter0));
  LUT6 #(
    .INIT(64'h0008FFFF00000008)) 
    \sOutAddrCntEnDin[0]_i_1 
       (.I0(sCurrentState[1]),
        .I1(sCurrentState[3]),
        .I2(sCurrentState[0]),
        .I3(sCurrentState[2]),
        .I4(sOutAddrCntEnR),
        .I5(sOutAddrCntEnDin),
        .O(\sOutAddrCntEnDin[0]_i_1_n_0 ));
  FDRE \sOutAddrCntEnDin_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sOutAddrCntEnDin[0]_i_1_n_0 ),
        .Q(sOutAddrCntEnDin),
        .R(SR));
  FDRE sOutAddrCntEnPush_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sOutAddrCntEnPush0),
        .Q(sOutAddrCntEnPush),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \sOutAddrCntEnR[0]_i_1 
       (.I0(sCurrentState[2]),
        .I1(sCurrentState[0]),
        .I2(sCurrentState[3]),
        .I3(sCurrentState[1]),
        .O(sOutAddrCntEn));
  FDRE \sOutAddrCntEnR_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sOutAddrCntEn),
        .Q(sOutAddrCntEnR),
        .R(SR));
  LUT3 #(
    .INIT(8'hBA)) 
    sOutAddrCntEnSetPush_i_1
       (.I0(sOutAddrCntEnSetPush_i_2_n_0),
        .I1(sOutAddrCntEnPush),
        .I2(sOutAddrCntEnSetPush),
        .O(sOutAddrCntEnSetPush_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'hFFF70008)) 
    sOutAddrCntEnSetPush_i_2
       (.I0(sCurrentState[1]),
        .I1(sCurrentState[3]),
        .I2(sCurrentState[0]),
        .I3(sCurrentState[2]),
        .I4(sOutAddrCntEnR),
        .O(sOutAddrCntEnSetPush_i_2_n_0));
  FDRE sOutAddrCntEnSetPush_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sOutAddrCntEnSetPush_i_1_n_0),
        .Q(sOutAddrCntEnSetPush),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[0]_i_1 
       (.I0(sCh2In[0]),
        .I1(sCh1In[0]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[10]_i_1 
       (.I0(sCh2In[10]),
        .I1(sCh1In[10]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[11]_i_1 
       (.I0(sCh2In[11]),
        .I1(sCh1In[11]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[12]_i_1 
       (.I0(sCh2In[12]),
        .I1(sCh1In[12]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[13]_i_1 
       (.I0(sCh2In[13]),
        .I1(sCh1In[13]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(p_3_in29_in));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[1]_i_1 
       (.I0(sCh2In[1]),
        .I1(sCh1In[1]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[2]_i_1 
       (.I0(sCh2In[2]),
        .I1(sCh1In[2]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[3]_i_1 
       (.I0(sCh2In[3]),
        .I1(sCh1In[3]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[4]_i_1 
       (.I0(sCh2In[4]),
        .I1(sCh1In[4]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[5]_i_1 
       (.I0(sCh2In[5]),
        .I1(sCh1In[5]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[6]_i_1 
       (.I0(sCh2In[6]),
        .I1(sCh1In[6]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[7]_i_1 
       (.I0(sCh2In[7]),
        .I1(sCh1In[7]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[8]_i_1 
       (.I0(sCh2In[8]),
        .I1(sCh1In[8]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \sTriggerSourceR[9]_i_1 
       (.I0(sCh2In[9]),
        .I1(sCh1In[9]),
        .I2(\FSM_sequential_sCurrentState_reg[0]_i_2_0 [0]),
        .O(\sTriggerSourceR[9]_i_1_n_0 ));
  FDRE \sTriggerSourceR_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[0]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[0] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[10] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[10]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[10] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[11] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[11]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[11] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[12] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[12]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[12] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[13] 
       (.C(SysClk),
        .CE(1'b1),
        .D(p_3_in29_in),
        .Q(p_2_in),
        .R(SR));
  FDRE \sTriggerSourceR_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[1]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[1] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[2] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[2]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[2] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[3] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[3]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[3] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[4] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[4]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[4] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[5] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[5]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[5] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[6] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[6]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[6] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[7] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[7]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[7] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[8] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[8]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[8] ),
        .R(SR));
  FDRE \sTriggerSourceR_reg[9] 
       (.C(SysClk),
        .CE(1'b1),
        .D(\sTriggerSourceR[9]_i_1_n_0 ),
        .Q(\sTriggerSourceR_reg_n_0_[9] ),
        .R(SR));
  LUT4 #(
    .INIT(16'h0514)) 
    \sWeaBuffer[27]_i_1 
       (.I0(sCurrentState[3]),
        .I1(sCurrentState[2]),
        .I2(sCurrentState[1]),
        .I3(sCurrentState[0]),
        .O(sInAddrCntEn));
  FDRE \sWeaBuffer_reg[27] 
       (.C(SysClk),
        .CE(1'b1),
        .D(sInAddrCntEn),
        .Q(sWeaBuffer),
        .R(sInAddrCounter0));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[10]_i_1 
       (.I0(xsS2MM_TdataLoc[10]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[10] ),
        .O(p_2_in__0[10]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[11]_i_1 
       (.I0(xsS2MM_TdataLoc[11]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[11] ),
        .O(p_2_in__0[11]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[12]_i_1 
       (.I0(xsS2MM_TdataLoc[12]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[12] ),
        .O(p_2_in__0[12]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[13]_i_1 
       (.I0(xsS2MM_TdataLoc[13]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[13] ),
        .O(p_2_in__0[13]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[14]_i_1 
       (.I0(xsS2MM_TdataLoc[14]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[14] ),
        .O(p_2_in__0[14]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[15]_i_1 
       (.I0(xsS2MM_TdataLoc[15]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[15] ),
        .O(p_2_in__0[15]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[18]_i_1 
       (.I0(xsS2MM_TdataLoc[18]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[18] ),
        .O(p_2_in__0[18]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[19]_i_1 
       (.I0(xsS2MM_TdataLoc[19]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[19] ),
        .O(p_2_in__0[19]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[20]_i_1 
       (.I0(xsS2MM_TdataLoc[20]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[20] ),
        .O(p_2_in__0[20]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[21]_i_1 
       (.I0(xsS2MM_TdataLoc[21]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[21] ),
        .O(p_2_in__0[21]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[22]_i_1 
       (.I0(xsS2MM_TdataLoc[22]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[22] ),
        .O(p_2_in__0[22]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[23]_i_1 
       (.I0(xsS2MM_TdataLoc[23]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[23] ),
        .O(p_2_in__0[23]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[24]_i_1 
       (.I0(xsS2MM_TdataLoc[24]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[24] ),
        .O(p_2_in__0[24]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[25]_i_1 
       (.I0(xsS2MM_TdataLoc[25]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[25] ),
        .O(p_2_in__0[25]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[26]_i_1 
       (.I0(xsS2MM_TdataLoc[26]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[26] ),
        .O(p_2_in__0[26]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[27]_i_1 
       (.I0(xsS2MM_TdataLoc[27]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[27] ),
        .O(p_2_in__0[27]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[28]_i_1 
       (.I0(xsS2MM_TdataLoc[28]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[28] ),
        .O(p_2_in__0[28]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[29]_i_1 
       (.I0(xsS2MM_TdataLoc[29]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[29] ),
        .O(p_2_in__0[29]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[2]_i_1 
       (.I0(xsS2MM_TdataLoc[2]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[2] ),
        .O(p_2_in__0[2]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[30]_i_1 
       (.I0(xsS2MM_TdataLoc[30]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[30] ),
        .O(p_2_in__0[30]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axis_s2mm_tdata[31]_i_2 
       (.I0(xsOutAddrCntPulseR),
        .I1(xsS2MM_TvalidLoc_reg_0),
        .I2(s_axis_s2mm_tready),
        .O(\s_axis_s2mm_tdata[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[31]_i_3 
       (.I0(xsS2MM_TdataLoc[31]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[31] ),
        .O(p_2_in__0[31]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[3]_i_1 
       (.I0(xsS2MM_TdataLoc[3]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[3] ),
        .O(p_2_in__0[3]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[4]_i_1 
       (.I0(xsS2MM_TdataLoc[4]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[4] ),
        .O(p_2_in__0[4]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[5]_i_1 
       (.I0(xsS2MM_TdataLoc[5]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[5] ),
        .O(p_2_in__0[5]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[6]_i_1 
       (.I0(xsS2MM_TdataLoc[6]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[6] ),
        .O(p_2_in__0[6]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[7]_i_1 
       (.I0(xsS2MM_TdataLoc[7]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[7] ),
        .O(p_2_in__0[7]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[8]_i_1 
       (.I0(xsS2MM_TdataLoc[8]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[8] ),
        .O(p_2_in__0[8]));
  LUT5 #(
    .INIT(32'hBAAA8AAA)) 
    \s_axis_s2mm_tdata[9]_i_1 
       (.I0(xsS2MM_TdataLoc[9]),
        .I1(xsS2MM_TreadyR),
        .I2(xsS2MM_TvalidLoc_reg_0),
        .I3(s_axis_s2mm_tready),
        .I4(\xsTdataAux_reg_n_0_[9] ),
        .O(p_2_in__0[9]));
  FDRE \s_axis_s2mm_tdata_reg[10] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[10]),
        .Q(s_axis_s2mm_tdata[8]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[11] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[11]),
        .Q(s_axis_s2mm_tdata[9]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[12] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[12]),
        .Q(s_axis_s2mm_tdata[10]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[13] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[13]),
        .Q(s_axis_s2mm_tdata[11]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[14] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[14]),
        .Q(s_axis_s2mm_tdata[12]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[15] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[15]),
        .Q(s_axis_s2mm_tdata[13]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[18] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[18]),
        .Q(s_axis_s2mm_tdata[14]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[19] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[19]),
        .Q(s_axis_s2mm_tdata[15]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[20] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[20]),
        .Q(s_axis_s2mm_tdata[16]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[21] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[21]),
        .Q(s_axis_s2mm_tdata[17]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[22] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[22]),
        .Q(s_axis_s2mm_tdata[18]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[23] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[23]),
        .Q(s_axis_s2mm_tdata[19]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[24] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[24]),
        .Q(s_axis_s2mm_tdata[20]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[25] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[25]),
        .Q(s_axis_s2mm_tdata[21]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[26] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[26]),
        .Q(s_axis_s2mm_tdata[22]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[27] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[27]),
        .Q(s_axis_s2mm_tdata[23]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[28] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[28]),
        .Q(s_axis_s2mm_tdata[24]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[29] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[29]),
        .Q(s_axis_s2mm_tdata[25]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[2] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[2]),
        .Q(s_axis_s2mm_tdata[0]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[30] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[30]),
        .Q(s_axis_s2mm_tdata[26]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[31] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[31]),
        .Q(s_axis_s2mm_tdata[27]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[3] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[3]),
        .Q(s_axis_s2mm_tdata[1]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[4] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[4]),
        .Q(s_axis_s2mm_tdata[2]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[5] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[5]),
        .Q(s_axis_s2mm_tdata[3]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[6] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[6]),
        .Q(s_axis_s2mm_tdata[4]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[7] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[7]),
        .Q(s_axis_s2mm_tdata[5]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[8] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[8]),
        .Q(s_axis_s2mm_tdata[6]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \s_axis_s2mm_tdata_reg[9] 
       (.C(AxiStreamClk),
        .CE(\s_axis_s2mm_tdata[31]_i_2_n_0 ),
        .D(p_2_in__0[9]),
        .Q(s_axis_s2mm_tdata[7]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsBufEmptyPush_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsBufEmptyPush0),
        .Q(xsBufEmptyPush),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsBufEmptyR_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsBufEmpty_reg_0),
        .Q(xsBufEmptyR),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsBufEmpty_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(InstLoadOutCntHandshake_n_16),
        .Q(xsBufEmpty_reg_0),
        .R(1'b0));
  FDRE \xsBufferFullAddr_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(xsBufferFullAddr[0]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[10] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[10]),
        .Q(xsBufferFullAddr[10]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[11] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[11]),
        .Q(xsBufferFullAddr[11]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[12] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[12]),
        .Q(xsBufferFullAddr[12]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[13] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[13]),
        .Q(xsBufferFullAddr[13]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(xsBufferFullAddr[1]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[2] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(xsBufferFullAddr[2]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[3] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(xsBufferFullAddr[3]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[4] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(xsBufferFullAddr[4]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[5] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(xsBufferFullAddr[5]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[6] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(xsBufferFullAddr[6]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[7] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[7]),
        .Q(xsBufferFullAddr[7]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[8] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[8]),
        .Q(xsBufferFullAddr[8]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsBufferFullAddr_reg[9] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(plusOp[9]),
        .Q(xsBufferFullAddr[9]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsOutAddrCntEnRR_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsOutAddrCntEnR),
        .Q(xsOutAddrCntEnRR),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsOutAddrCntEnR_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsOutAddrCntEn),
        .Q(xsOutAddrCntEnR),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE xsOutAddrCntEn_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(InstOutAddrCntEnHandShake_n_1),
        .Q(xsOutAddrCntEn),
        .R(\xsTdataAux_reg[31]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xsOutAddrCntPulseR_i_1
       (.I0(xsOutAddrCntEn),
        .I1(xsOutAddrCntEnR),
        .O(xsOutAddrCntPulse));
  FDRE xsOutAddrCntPulseR_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsOutAddrCntPulse),
        .Q(xsOutAddrCntPulseR),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[0] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_15),
        .Q(xsOutAddrCntStart[0]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[10] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_5),
        .Q(xsOutAddrCntStart[10]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[11] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_4),
        .Q(xsOutAddrCntStart[11]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[12] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_3),
        .Q(xsOutAddrCntStart[12]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[13] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_2),
        .Q(xsOutAddrCntStart[13]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[1] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_14),
        .Q(xsOutAddrCntStart[1]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[2] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_13),
        .Q(xsOutAddrCntStart[2]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[3] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_12),
        .Q(xsOutAddrCntStart[3]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[4] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_11),
        .Q(xsOutAddrCntStart[4]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[5] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_10),
        .Q(xsOutAddrCntStart[5]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[6] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_9),
        .Q(xsOutAddrCntStart[6]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[7] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_8),
        .Q(xsOutAddrCntStart[7]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[8] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_7),
        .Q(xsOutAddrCntStart[8]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCntStart_reg[9] 
       (.C(AxiStreamClk),
        .CE(InstOutAddrCntStartHandshake_n_0),
        .D(InstOutAddrCntStartHandshake_n_6),
        .Q(xsOutAddrCntStart[9]),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsOutAddrCounter_reg[0] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_5),
        .Q(xsOutAddrCounter_reg[0]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[10] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_11),
        .Q(xsOutAddrCounter_reg[10]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[11] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_10),
        .Q(xsOutAddrCounter_reg[11]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[12] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_15),
        .Q(xsOutAddrCounter_reg[12]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[13] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_14),
        .Q(xsOutAddrCounter_reg[13]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[1] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_4),
        .Q(xsOutAddrCounter_reg[1]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[2] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_3),
        .Q(xsOutAddrCounter_reg[2]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[3] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_2),
        .Q(xsOutAddrCounter_reg[3]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[4] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_9),
        .Q(xsOutAddrCounter_reg[4]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[5] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_8),
        .Q(xsOutAddrCounter_reg[5]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[6] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_7),
        .Q(xsOutAddrCounter_reg[6]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[7] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_6),
        .Q(xsOutAddrCounter_reg[7]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[8] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_13),
        .Q(xsOutAddrCounter_reg[8]),
        .R(1'b0));
  FDRE \xsOutAddrCounter_reg[9] 
       (.C(AxiStreamClk),
        .CE(InstLoadOutCntHandshake_n_1),
        .D(InstLoadOutCntHandshake_n_12),
        .Q(xsOutAddrCounter_reg[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \xsS2MM_TkeepLoc[3]_i_1 
       (.I0(xsS2MM_TkeepLoc),
        .I1(out),
        .I2(xsBufEmpty_reg_0),
        .O(\xsS2MM_TkeepLoc[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0080008088880080)) 
    \xsS2MM_TkeepLoc[3]_i_2 
       (.I0(xsOutAddrCntEnRR),
        .I1(xsOutAddrCntEn),
        .I2(neqOp),
        .I3(xsTvalidDisable_reg_n_0),
        .I4(eqOp0_out),
        .I5(s_axis_s2mm_tready),
        .O(xsS2MM_TkeepLoc));
  FDRE \xsS2MM_TkeepLoc_reg[3] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(\xsS2MM_TkeepLoc[3]_i_1_n_0 ),
        .Q(s_axis_s2mm_tkeep),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    xsS2MM_TlastLoc_i_10
       (.I0(xsBufferFullAddr[0]),
        .I1(xsOutAddrCounter_reg[0]),
        .I2(xsOutAddrCounter_reg[2]),
        .I3(plusOp7[2]),
        .I4(xsOutAddrCounter_reg[1]),
        .I5(plusOp7[1]),
        .O(xsS2MM_TlastLoc_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h8)) 
    xsS2MM_TlastLoc_i_2
       (.I0(xsOutAddrCntEn),
        .I1(xsOutAddrCntEnRR),
        .O(xsOutAddrCounter2));
  LUT4 #(
    .INIT(16'h9009)) 
    xsS2MM_TlastLoc_i_6
       (.I0(plusOp7[12]),
        .I1(xsOutAddrCounter_reg[12]),
        .I2(plusOp7[13]),
        .I3(xsOutAddrCounter_reg[13]),
        .O(xsS2MM_TlastLoc_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsS2MM_TlastLoc_i_7
       (.I0(xsOutAddrCounter_reg[11]),
        .I1(plusOp7[11]),
        .I2(xsOutAddrCounter_reg[10]),
        .I3(plusOp7[10]),
        .I4(plusOp7[9]),
        .I5(xsOutAddrCounter_reg[9]),
        .O(xsS2MM_TlastLoc_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsS2MM_TlastLoc_i_8
       (.I0(xsOutAddrCounter_reg[8]),
        .I1(plusOp7[8]),
        .I2(xsOutAddrCounter_reg[6]),
        .I3(plusOp7[6]),
        .I4(plusOp7[7]),
        .I5(xsOutAddrCounter_reg[7]),
        .O(xsS2MM_TlastLoc_i_8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsS2MM_TlastLoc_i_9
       (.I0(plusOp7[4]),
        .I1(xsOutAddrCounter_reg[4]),
        .I2(xsOutAddrCounter_reg[5]),
        .I3(plusOp7[5]),
        .I4(xsOutAddrCounter_reg[3]),
        .I5(plusOp7[3]),
        .O(xsS2MM_TlastLoc_i_9_n_0));
  FDRE xsS2MM_TlastLoc_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(InstLoadOutCntHandshake_n_17),
        .Q(s_axis_s2mm_tlast),
        .R(1'b0));
  CARRY4 xsS2MM_TlastLoc_reg_i_11
       (.CI(xsS2MM_TlastLoc_reg_i_13_n_0),
        .CO({xsS2MM_TlastLoc_reg_i_11_n_0,xsS2MM_TlastLoc_reg_i_11_n_1,xsS2MM_TlastLoc_reg_i_11_n_2,xsS2MM_TlastLoc_reg_i_11_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(plusOp7[12:9]),
        .S(xsBufferFullAddr[12:9]));
  CARRY4 xsS2MM_TlastLoc_reg_i_12
       (.CI(xsS2MM_TlastLoc_reg_i_11_n_0),
        .CO(NLW_xsS2MM_TlastLoc_reg_i_12_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_xsS2MM_TlastLoc_reg_i_12_O_UNCONNECTED[3:1],plusOp7[13]}),
        .S({1'b0,1'b0,1'b0,xsBufferFullAddr[13]}));
  CARRY4 xsS2MM_TlastLoc_reg_i_13
       (.CI(xsS2MM_TlastLoc_reg_i_14_n_0),
        .CO({xsS2MM_TlastLoc_reg_i_13_n_0,xsS2MM_TlastLoc_reg_i_13_n_1,xsS2MM_TlastLoc_reg_i_13_n_2,xsS2MM_TlastLoc_reg_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(plusOp7[8:5]),
        .S(xsBufferFullAddr[8:5]));
  CARRY4 xsS2MM_TlastLoc_reg_i_14
       (.CI(1'b0),
        .CO({xsS2MM_TlastLoc_reg_i_14_n_0,xsS2MM_TlastLoc_reg_i_14_n_1,xsS2MM_TlastLoc_reg_i_14_n_2,xsS2MM_TlastLoc_reg_i_14_n_3}),
        .CYINIT(xsBufferFullAddr[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(plusOp7[4:1]),
        .S(xsBufferFullAddr[4:1]));
  CARRY4 xsS2MM_TlastLoc_reg_i_3
       (.CI(xsS2MM_TlastLoc_reg_i_5_n_0),
        .CO({NLW_xsS2MM_TlastLoc_reg_i_3_CO_UNCONNECTED[3:1],eqOp0_out}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_xsS2MM_TlastLoc_reg_i_3_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,xsS2MM_TlastLoc_i_6_n_0}));
  CARRY4 xsS2MM_TlastLoc_reg_i_5
       (.CI(1'b0),
        .CO({xsS2MM_TlastLoc_reg_i_5_n_0,xsS2MM_TlastLoc_reg_i_5_n_1,xsS2MM_TlastLoc_reg_i_5_n_2,xsS2MM_TlastLoc_reg_i_5_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_xsS2MM_TlastLoc_reg_i_5_O_UNCONNECTED[3:0]),
        .S({xsS2MM_TlastLoc_i_7_n_0,xsS2MM_TlastLoc_i_8_n_0,xsS2MM_TlastLoc_i_9_n_0,xsS2MM_TlastLoc_i_10_n_0}));
  FDRE xsS2MM_TreadyR_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(s_axis_s2mm_tready),
        .Q(xsS2MM_TreadyR),
        .R(\xsTdataAux_reg[31]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h20)) 
    xsS2MM_TvalidLoc_i_1
       (.I0(xsS2MM_TkeepLoc),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .O(xsS2MM_TvalidLoc_i_1_n_0));
  FDRE xsS2MM_TvalidLoc_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsS2MM_TvalidLoc_i_1_n_0),
        .Q(xsS2MM_TvalidLoc_reg_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \xsTdataAux[31]_i_1 
       (.I0(xsS2MM_TreadyR),
        .I1(s_axis_s2mm_tready),
        .O(xsTreadyFalling));
  FDRE \xsTdataAux_reg[10] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[10]),
        .Q(\xsTdataAux_reg_n_0_[10] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[11] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[11]),
        .Q(\xsTdataAux_reg_n_0_[11] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[12] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[12]),
        .Q(\xsTdataAux_reg_n_0_[12] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[13] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[13]),
        .Q(\xsTdataAux_reg_n_0_[13] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[14] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[14]),
        .Q(\xsTdataAux_reg_n_0_[14] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[15] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[15]),
        .Q(\xsTdataAux_reg_n_0_[15] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[18] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[18]),
        .Q(\xsTdataAux_reg_n_0_[18] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[19] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[19]),
        .Q(\xsTdataAux_reg_n_0_[19] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[20] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[20]),
        .Q(\xsTdataAux_reg_n_0_[20] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[21] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[21]),
        .Q(\xsTdataAux_reg_n_0_[21] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[22] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[22]),
        .Q(\xsTdataAux_reg_n_0_[22] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[23] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[23]),
        .Q(\xsTdataAux_reg_n_0_[23] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[24] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[24]),
        .Q(\xsTdataAux_reg_n_0_[24] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[25] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[25]),
        .Q(\xsTdataAux_reg_n_0_[25] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[26] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[26]),
        .Q(\xsTdataAux_reg_n_0_[26] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[27] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[27]),
        .Q(\xsTdataAux_reg_n_0_[27] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[28] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[28]),
        .Q(\xsTdataAux_reg_n_0_[28] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[29] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[29]),
        .Q(\xsTdataAux_reg_n_0_[29] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[2] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[2]),
        .Q(\xsTdataAux_reg_n_0_[2] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[30] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[30]),
        .Q(\xsTdataAux_reg_n_0_[30] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[31] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[31]),
        .Q(\xsTdataAux_reg_n_0_[31] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[3] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[3]),
        .Q(\xsTdataAux_reg_n_0_[3] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[4] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[4]),
        .Q(\xsTdataAux_reg_n_0_[4] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[5] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[5]),
        .Q(\xsTdataAux_reg_n_0_[5] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[6] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[6]),
        .Q(\xsTdataAux_reg_n_0_[6] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[7] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[7]),
        .Q(\xsTdataAux_reg_n_0_[7] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[8] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[8]),
        .Q(\xsTdataAux_reg_n_0_[8] ),
        .R(\xsTdataAux_reg[31]_0 ));
  FDRE \xsTdataAux_reg[9] 
       (.C(AxiStreamClk),
        .CE(xsTreadyFalling),
        .D(xsS2MM_TdataLoc[9]),
        .Q(\xsTdataAux_reg_n_0_[9] ),
        .R(\xsTdataAux_reg[31]_0 ));
  LUT6 #(
    .INIT(64'hA0A8202000000000)) 
    xsTvalidDisable_i_1
       (.I0(xsOutAddrCounter2),
        .I1(eqOp0_out),
        .I2(xsTvalidDisable_reg_n_0),
        .I3(neqOp),
        .I4(s_axis_s2mm_tready),
        .I5(xsTvalidDisable_reg_0),
        .O(xsTvalidDisable_i_1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    xsTvalidDisable_i_5
       (.I0(plusOp7[12]),
        .I1(xsOutAddrCounter_reg[12]),
        .I2(plusOp7[13]),
        .I3(xsOutAddrCounter_reg[13]),
        .O(xsTvalidDisable_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsTvalidDisable_i_6
       (.I0(xsOutAddrCounter_reg[11]),
        .I1(plusOp7[11]),
        .I2(xsOutAddrCounter_reg[10]),
        .I3(plusOp7[10]),
        .I4(plusOp7[9]),
        .I5(xsOutAddrCounter_reg[9]),
        .O(xsTvalidDisable_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsTvalidDisable_i_7
       (.I0(xsOutAddrCounter_reg[8]),
        .I1(plusOp7[8]),
        .I2(xsOutAddrCounter_reg[6]),
        .I3(plusOp7[6]),
        .I4(plusOp7[7]),
        .I5(xsOutAddrCounter_reg[7]),
        .O(xsTvalidDisable_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    xsTvalidDisable_i_8
       (.I0(plusOp7[4]),
        .I1(xsOutAddrCounter_reg[4]),
        .I2(xsOutAddrCounter_reg[5]),
        .I3(plusOp7[5]),
        .I4(xsOutAddrCounter_reg[3]),
        .I5(plusOp7[3]),
        .O(xsTvalidDisable_i_8_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    xsTvalidDisable_i_9
       (.I0(xsBufferFullAddr[0]),
        .I1(xsOutAddrCounter_reg[0]),
        .I2(xsOutAddrCounter_reg[2]),
        .I3(plusOp7[2]),
        .I4(xsOutAddrCounter_reg[1]),
        .I5(plusOp7[1]),
        .O(xsTvalidDisable_i_9_n_0));
  FDRE xsTvalidDisable_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(xsTvalidDisable_i_1_n_0),
        .Q(xsTvalidDisable_reg_n_0),
        .R(1'b0));
  CARRY4 xsTvalidDisable_reg_i_2
       (.CI(xsTvalidDisable_reg_i_4_n_0),
        .CO({NLW_xsTvalidDisable_reg_i_2_CO_UNCONNECTED[3:1],neqOp}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O(NLW_xsTvalidDisable_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,xsTvalidDisable_i_5_n_0}));
  CARRY4 xsTvalidDisable_reg_i_4
       (.CI(1'b0),
        .CO({xsTvalidDisable_reg_i_4_n_0,xsTvalidDisable_reg_i_4_n_1,xsTvalidDisable_reg_i_4_n_2,xsTvalidDisable_reg_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_xsTvalidDisable_reg_i_4_O_UNCONNECTED[3:0]),
        .S({xsTvalidDisable_i_6_n_0,xsTvalidDisable_i_7_n_0,xsTvalidDisable_i_8_n_0,xsTvalidDisable_i_9_n_0}));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData
   (sAdcSPI_IdleRdy,
    \oData_reg[0]_0 ,
    in0,
    s00_axi_aclk,
    sAdcSPI_IdlePush,
    SysClk,
    sAdcSPI_IdleDin);
  output sAdcSPI_IdleRdy;
  output \oData_reg[0]_0 ;
  input in0;
  input s00_axi_aclk;
  input sAdcSPI_IdlePush;
  input SysClk;
  input sAdcSPI_IdleDin;

  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire \iData_int[0]_i_1__2_n_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire iPushT;
  wire iPushTBack;
  wire iPushT_i_1__24_n_0;
  wire iPush_q;
  wire iRdy0__0;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire \oData_reg[0]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;
  wire sAdcSPI_IdleDin;
  wire sAdcSPI_IdlePush;
  wire sAdcSPI_IdleRdy;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_42 SyncAsyncPushT
       (.D(iPushT),
        .\iData_int_reg[0] (SyncAsyncPushT_n_1),
        .\oData_reg[0] (\iData_int_reg_n_0_[0] ),
        .\oData_reg[0]_0 (oPushT_q_reg_n_0),
        .\oData_reg[0]_1 (\oData_reg[0]_0 ),
        .\oSyncStages_reg[1]_0 (in0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_43 SyncAsyncPushTBack
       (.D(oPushTBack_reg_n_0),
        .SysClk(SysClk),
        .\oSyncStages_reg[0]_0 (in0),
        .out(iPushTBack));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_44 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (in0),
        .out(iReset));
  LUT4 #(
    .INIT(16'hFB08)) 
    \iData_int[0]_i_1__2 
       (.I0(sAdcSPI_IdleDin),
        .I1(sAdcSPI_IdlePush),
        .I2(iPush_q),
        .I3(\iData_int_reg_n_0_[0] ),
        .O(\iData_int[0]_i_1__2_n_0 ));
  FDCE \iData_int_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(\iData_int[0]_i_1__2_n_0 ),
        .Q(\iData_int_reg_n_0_[0] ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__24
       (.I0(iPush_q),
        .I1(sAdcSPI_IdlePush),
        .I2(iPushT),
        .O(iPushT_i_1__24_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(iPushT_i_1__24_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(sAdcSPI_IdlePush),
        .Q(iPush_q));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0009)) 
    iRdy0
       (.I0(iPushT),
        .I1(iPushTBack),
        .I2(iReset),
        .I3(sAdcSPI_IdlePush),
        .O(iRdy0__0));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0__0),
        .Q(sAdcSPI_IdleRdy));
  FDCE \oData_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(\oData_reg[0]_0 ));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_102
   (iRdy_reg_0,
    xsBufEmptyPush0,
    SR,
    SysClk,
    xsBufEmptyPush,
    AxiStreamClk,
    sSetStopRdy,
    Q,
    xsBufEmptyPush_reg,
    xsBufEmptyR);
  output iRdy_reg_0;
  output xsBufEmptyPush0;
  input [0:0]SR;
  input SysClk;
  input xsBufEmptyPush;
  input AxiStreamClk;
  input sSetStopRdy;
  input [0:0]Q;
  input xsBufEmptyPush_reg;
  input xsBufEmptyR;

  wire AxiStreamClk;
  wire [0:0]Q;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SyncAsyncPushTBack_n_0;
  wire SyncAsyncPushT_n_1;
  wire SyncAsyncPushT_n_2;
  wire SysClk;
  wire \iData_int[0]_i_1__1_n_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire iPushT;
  wire iPushT_i_1__22_n_0;
  wire iPush_q;
  wire iRdy_reg_0;
  wire iReset;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire sBufEmpty;
  wire sBufEmptyValid;
  wire sSetStopRdy;
  wire xsBufEmptyPush;
  wire xsBufEmptyPush0;
  wire xsBufEmptyPush_reg;
  wire xsBufEmptyR;
  wire xsBufEmptyRdy;

  LUT4 #(
    .INIT(16'hB888)) 
    \FSM_sequential_sCurrentState[3]_i_8 
       (.I0(sSetStopRdy),
        .I1(Q),
        .I2(sBufEmpty),
        .I3(sBufEmptyValid),
        .O(iRdy_reg_0));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_128 SyncAsyncPushT
       (.AR(SR),
        .D(iPushT),
        .SysClk(SysClk),
        .\iData_int_reg[0] (SyncAsyncPushT_n_1),
        .\oData_reg[0] (\iData_int_reg_n_0_[0] ),
        .\oData_reg[0]_0 (oPushT_q_reg_n_0),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_2),
        .out(oPushT),
        .sBufEmpty(sBufEmpty));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_129 SyncAsyncPushTBack
       (.AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .\oSyncStages_reg[1]_0 (SR),
        .out(iReset),
        .xsBufEmptyPush(xsBufEmptyPush),
        .xsBufEmptyPush_reg(SyncAsyncPushTBack_n_0));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_130 SyncReset
       (.AxiStreamClk(AxiStreamClk),
        .\oSyncStages_reg[0] (SR),
        .out(iReset));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \iData_int[0]_i_1__1 
       (.I0(xsBufEmptyR),
        .I1(xsBufEmptyPush),
        .I2(iPush_q),
        .I3(\iData_int_reg_n_0_[0] ),
        .O(\iData_int[0]_i_1__1_n_0 ));
  FDCE \iData_int_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(\iData_int[0]_i_1__1_n_0 ),
        .Q(\iData_int_reg_n_0_[0] ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__22
       (.I0(iPush_q),
        .I1(xsBufEmptyPush),
        .I2(iPushT),
        .O(iPushT_i_1__22_n_0));
  FDCE iPushT_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iPushT_i_1__22_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(xsBufEmptyPush),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushTBack_n_0),
        .Q(xsBufEmptyRdy));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_1),
        .Q(sBufEmpty));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_2),
        .Q(sBufEmptyValid));
  LUT4 #(
    .INIT(16'h0028)) 
    xsBufEmptyPush_i_1
       (.I0(xsBufEmptyRdy),
        .I1(xsBufEmptyPush_reg),
        .I2(xsBufEmptyR),
        .I3(xsBufEmptyPush),
        .O(xsBufEmptyPush0));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_103
   (sBufferFull,
    lBufferFull,
    lSlvReg1125_out__0,
    E,
    SR,
    s00_axi_aclk,
    AxiStreamClk,
    iRdy,
    \FSM_sequential_sCurrentState[3]_i_4_0 ,
    Q,
    D,
    \FSM_sequential_sCurrentState_reg[0] ,
    \FSM_sequential_sCurrentState_reg[0]_0 ,
    \FSM_sequential_sCurrentState_reg[0]_1 ,
    sSetStopRdy);
  output sBufferFull;
  output lBufferFull;
  output lSlvReg1125_out__0;
  output [0:0]E;
  input [0:0]SR;
  input s00_axi_aclk;
  input AxiStreamClk;
  input iRdy;
  input \FSM_sequential_sCurrentState[3]_i_4_0 ;
  input [3:0]Q;
  input [0:0]D;
  input \FSM_sequential_sCurrentState_reg[0] ;
  input \FSM_sequential_sCurrentState_reg[0]_0 ;
  input [0:0]\FSM_sequential_sCurrentState_reg[0]_1 ;
  input sSetStopRdy;

  wire AxiStreamClk;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_sCurrentState[3]_i_4_0 ;
  wire \FSM_sequential_sCurrentState[3]_i_4_n_0 ;
  wire \FSM_sequential_sCurrentState[3]_i_7_n_0 ;
  wire \FSM_sequential_sCurrentState_reg[0] ;
  wire \FSM_sequential_sCurrentState_reg[0]_0 ;
  wire [0:0]\FSM_sequential_sCurrentState_reg[0]_1 ;
  wire [3:0]Q;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SyncAsyncPushT_n_1;
  wire iPushT;
  wire iPushT_i_1__19_n_0;
  wire iPush_q;
  wire iRdy;
  wire iRdy0;
  wire iReset;
  wire lBufferFull;
  wire lSlvReg1125_out__0;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;
  wire sBufFullRdy;
  wire sBufferFull;
  wire sSetStopRdy;

  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \FSM_sequential_sCurrentState[3]_i_2 
       (.I0(\FSM_sequential_sCurrentState[3]_i_4_n_0 ),
        .I1(Q[3]),
        .I2(\FSM_sequential_sCurrentState_reg[0] ),
        .I3(Q[2]),
        .I4(\FSM_sequential_sCurrentState_reg[0]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h8ABABABA8ABA8A8A)) 
    \FSM_sequential_sCurrentState[3]_i_4 
       (.I0(\FSM_sequential_sCurrentState[3]_i_7_n_0 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\FSM_sequential_sCurrentState_reg[0]_1 ),
        .I4(Q[0]),
        .I5(sSetStopRdy),
        .O(\FSM_sequential_sCurrentState[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAFFFFF0AAF088)) 
    \FSM_sequential_sCurrentState[3]_i_7 
       (.I0(sBufFullRdy),
        .I1(iRdy),
        .I2(\FSM_sequential_sCurrentState[3]_i_4_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\FSM_sequential_sCurrentState[3]_i_7_n_0 ));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_124 SyncAsyncPushT
       (.AR(SR),
        .D(iPushT),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_1),
        .oValid_reg(oPushT_q_reg_n_0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_125 SyncAsyncPushTBack
       (.AR(SR),
        .AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .iRdy0(iRdy0),
        .iRdy_reg(sBufferFull),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_126 SyncReset
       (.AxiStreamClk(AxiStreamClk),
        .\oSyncStages_reg[0] (SR),
        .out(iReset));
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__19
       (.I0(iPush_q),
        .I1(sBufferFull),
        .I2(iPushT),
        .O(iPushT_i_1__19_n_0));
  FDCE iPushT_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iPushT_i_1__19_n_0),
        .Q(iPushT));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    iPush_q_i_1
       (.I0(sBufFullRdy),
        .I1(iRdy),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(sBufferFull));
  FDCE iPush_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(sBufferFull),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iRdy0),
        .Q(sBufFullRdy));
  LUT2 #(
    .INIT(4'h2)) 
    \lSlvReg1[0]_i_3 
       (.I0(lBufferFull),
        .I1(D),
        .O(lSlvReg1125_out__0));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_1),
        .Q(lBufferFull));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_104
   (sSetStopRdy,
    lSetStop,
    SR,
    s00_axi_aclk,
    SysClk,
    Q);
  output sSetStopRdy;
  output lSetStop;
  input [0:0]SR;
  input s00_axi_aclk;
  input SysClk;
  input [3:0]Q;

  wire [3:0]Q;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__20_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iReset;
  wire lSetStop;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;
  wire sSetStop;
  wire sSetStopRdy;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_120 SyncAsyncPushT
       (.AR(SR),
        .D(iPushT),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_1),
        .oValid_reg(oPushT_q_reg_n_0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_121 SyncAsyncPushTBack
       (.AR(SR),
        .D(iPushT),
        .SysClk(SysClk),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .sSetStop(sSetStop));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_122 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (SR),
        .out(iReset));
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__20
       (.I0(iPush_q),
        .I1(sSetStop),
        .I2(iPushT),
        .O(iPushT_i_1__20_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iPushT_i_1__20_n_0),
        .Q(iPushT));
  LUT5 #(
    .INIT(32'h40000000)) 
    iPush_q_i_1__1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(sSetStopRdy),
        .O(sSetStop));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(sSetStop),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iRdy0),
        .Q(sSetStopRdy));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_1),
        .Q(lSetStop));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_105
   (iRdy,
    xsOutAddrCntEnR_reg,
    O,
    \xsOutAddrCounter_reg[7] ,
    \xsOutAddrCounter_reg[11] ,
    \xsOutAddrCounter_reg[13] ,
    xsBufEmpty_reg,
    xsS2MM_TlastLoc_reg,
    SR,
    AxiStreamClk,
    sBufferFull,
    SysClk,
    out,
    xsOutAddrCntEnR,
    s_axis_s2mm_tready,
    xsOutAddrCntEnRR,
    xsOutAddrCntEn,
    xsOutAddrCounter_reg,
    xsBufEmpty_reg_0,
    Q,
    xsOutAddrCounter2,
    CO,
    s_axis_s2mm_tlast,
    xsS2MM_TlastLoc_reg_0);
  output iRdy;
  output xsOutAddrCntEnR_reg;
  output [3:0]O;
  output [3:0]\xsOutAddrCounter_reg[7] ;
  output [3:0]\xsOutAddrCounter_reg[11] ;
  output [1:0]\xsOutAddrCounter_reg[13] ;
  output xsBufEmpty_reg;
  output xsS2MM_TlastLoc_reg;
  input [0:0]SR;
  input AxiStreamClk;
  input sBufferFull;
  input SysClk;
  input [0:0]out;
  input xsOutAddrCntEnR;
  input s_axis_s2mm_tready;
  input xsOutAddrCntEnRR;
  input xsOutAddrCntEn;
  input [13:0]xsOutAddrCounter_reg;
  input xsBufEmpty_reg_0;
  input [13:0]Q;
  input xsOutAddrCounter2;
  input [0:0]CO;
  input s_axis_s2mm_tlast;
  input [0:0]xsS2MM_TlastLoc_reg_0;

  wire AxiStreamClk;
  wire [0:0]CO;
  wire [3:0]O;
  wire [13:0]Q;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__18_n_0;
  wire iPush_q;
  wire iRdy;
  wire iRdy0;
  wire iReset;
  wire oPushT;
  wire oPushTBack;
  wire oPushTChanged;
  wire oPushT_q;
  wire oValid;
  wire [0:0]out;
  wire p_1_in;
  wire sBufferFull;
  wire s_axis_s2mm_tlast;
  wire s_axis_s2mm_tready;
  wire xsBufEmpty_reg;
  wire xsBufEmpty_reg_0;
  wire xsOutAddrCntEn;
  wire xsOutAddrCntEnR;
  wire xsOutAddrCntEnRR;
  wire xsOutAddrCntEnR_reg;
  wire xsOutAddrCounter2;
  wire \xsOutAddrCounter[0]_i_3_n_0 ;
  wire \xsOutAddrCounter[0]_i_4_n_0 ;
  wire \xsOutAddrCounter[0]_i_5_n_0 ;
  wire \xsOutAddrCounter[0]_i_6_n_0 ;
  wire \xsOutAddrCounter[0]_i_7_n_0 ;
  wire \xsOutAddrCounter[0]_i_8_n_0 ;
  wire \xsOutAddrCounter[12]_i_2_n_0 ;
  wire \xsOutAddrCounter[12]_i_3_n_0 ;
  wire \xsOutAddrCounter[4]_i_2_n_0 ;
  wire \xsOutAddrCounter[4]_i_3_n_0 ;
  wire \xsOutAddrCounter[4]_i_4_n_0 ;
  wire \xsOutAddrCounter[4]_i_5_n_0 ;
  wire \xsOutAddrCounter[8]_i_2_n_0 ;
  wire \xsOutAddrCounter[8]_i_3_n_0 ;
  wire \xsOutAddrCounter[8]_i_4_n_0 ;
  wire \xsOutAddrCounter[8]_i_5_n_0 ;
  wire [13:0]xsOutAddrCounter_reg;
  wire \xsOutAddrCounter_reg[0]_i_2_n_0 ;
  wire \xsOutAddrCounter_reg[0]_i_2_n_1 ;
  wire \xsOutAddrCounter_reg[0]_i_2_n_2 ;
  wire \xsOutAddrCounter_reg[0]_i_2_n_3 ;
  wire [3:0]\xsOutAddrCounter_reg[11] ;
  wire \xsOutAddrCounter_reg[12]_i_1_n_3 ;
  wire [1:0]\xsOutAddrCounter_reg[13] ;
  wire \xsOutAddrCounter_reg[4]_i_1_n_0 ;
  wire \xsOutAddrCounter_reg[4]_i_1_n_1 ;
  wire \xsOutAddrCounter_reg[4]_i_1_n_2 ;
  wire \xsOutAddrCounter_reg[4]_i_1_n_3 ;
  wire [3:0]\xsOutAddrCounter_reg[7] ;
  wire \xsOutAddrCounter_reg[8]_i_1_n_0 ;
  wire \xsOutAddrCounter_reg[8]_i_1_n_1 ;
  wire \xsOutAddrCounter_reg[8]_i_1_n_2 ;
  wire \xsOutAddrCounter_reg[8]_i_1_n_3 ;
  wire xsS2MM_TlastLoc_reg;
  wire [0:0]xsS2MM_TlastLoc_reg_0;
  wire [3:1]\NLW_xsOutAddrCounter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_xsOutAddrCounter_reg[12]_i_1_O_UNCONNECTED ;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_116 SyncAsyncPushT
       (.AR(SR),
        .AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .oPushTChanged(oPushTChanged),
        .oPushT_q(oPushT_q),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_117 SyncAsyncPushTBack
       (.AR(SR),
        .D(iPushT),
        .SysClk(SysClk),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack),
        .out(iReset),
        .sBufferFull(sBufferFull));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_118 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (SR),
        .out(iReset));
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__18
       (.I0(iPush_q),
        .I1(sBufferFull),
        .I2(iPushT),
        .O(iPushT_i_1__18_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iPushT_i_1__18_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(sBufferFull),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iRdy0),
        .Q(iRdy));
  FDCE oPushTBack_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q),
        .Q(oPushTBack));
  FDCE oPushT_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q));
  FDCE oValid_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushTChanged),
        .Q(oValid));
  LUT6 #(
    .INIT(64'h00000000EA2A0000)) 
    xsBufEmpty_i_1
       (.I0(xsBufEmpty_reg_0),
        .I1(xsOutAddrCounter2),
        .I2(CO),
        .I3(s_axis_s2mm_tready),
        .I4(out),
        .I5(oValid),
        .O(xsBufEmpty_reg));
  LUT5 #(
    .INIT(32'hC400FFFF)) 
    \xsOutAddrCounter[0]_i_1 
       (.I0(xsOutAddrCntEnR),
        .I1(s_axis_s2mm_tready),
        .I2(xsOutAddrCntEnRR),
        .I3(xsOutAddrCntEn),
        .I4(\xsOutAddrCounter[0]_i_3_n_0 ),
        .O(xsOutAddrCntEnR_reg));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \xsOutAddrCounter[0]_i_3 
       (.I0(xsBufEmpty_reg_0),
        .I1(out),
        .I2(oValid),
        .O(\xsOutAddrCounter[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \xsOutAddrCounter[0]_i_4 
       (.I0(xsBufEmpty_reg_0),
        .I1(out),
        .I2(oValid),
        .O(\xsOutAddrCounter[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[0]_i_5 
       (.I0(xsOutAddrCounter_reg[3]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[3]),
        .O(\xsOutAddrCounter[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[0]_i_6 
       (.I0(xsOutAddrCounter_reg[2]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[2]),
        .O(\xsOutAddrCounter[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[0]_i_7 
       (.I0(xsOutAddrCounter_reg[1]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[1]),
        .O(\xsOutAddrCounter[0]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAA3AA)) 
    \xsOutAddrCounter[0]_i_8 
       (.I0(Q[0]),
        .I1(xsOutAddrCounter_reg[0]),
        .I2(oValid),
        .I3(out),
        .I4(xsBufEmpty_reg_0),
        .O(\xsOutAddrCounter[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[12]_i_2 
       (.I0(xsOutAddrCounter_reg[13]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[13]),
        .O(\xsOutAddrCounter[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[12]_i_3 
       (.I0(xsOutAddrCounter_reg[12]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[12]),
        .O(\xsOutAddrCounter[12]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[4]_i_2 
       (.I0(xsOutAddrCounter_reg[7]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[7]),
        .O(\xsOutAddrCounter[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[4]_i_3 
       (.I0(xsOutAddrCounter_reg[6]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[6]),
        .O(\xsOutAddrCounter[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[4]_i_4 
       (.I0(xsOutAddrCounter_reg[5]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[5]),
        .O(\xsOutAddrCounter[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[4]_i_5 
       (.I0(xsOutAddrCounter_reg[4]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[4]),
        .O(\xsOutAddrCounter[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[8]_i_2 
       (.I0(xsOutAddrCounter_reg[11]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[11]),
        .O(\xsOutAddrCounter[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[8]_i_3 
       (.I0(xsOutAddrCounter_reg[10]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[10]),
        .O(\xsOutAddrCounter[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[8]_i_4 
       (.I0(xsOutAddrCounter_reg[9]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[9]),
        .O(\xsOutAddrCounter[8]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \xsOutAddrCounter[8]_i_5 
       (.I0(xsOutAddrCounter_reg[8]),
        .I1(xsBufEmpty_reg_0),
        .I2(out),
        .I3(oValid),
        .I4(Q[8]),
        .O(\xsOutAddrCounter[8]_i_5_n_0 ));
  CARRY4 \xsOutAddrCounter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\xsOutAddrCounter_reg[0]_i_2_n_0 ,\xsOutAddrCounter_reg[0]_i_2_n_1 ,\xsOutAddrCounter_reg[0]_i_2_n_2 ,\xsOutAddrCounter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\xsOutAddrCounter[0]_i_4_n_0 }),
        .O(O),
        .S({\xsOutAddrCounter[0]_i_5_n_0 ,\xsOutAddrCounter[0]_i_6_n_0 ,\xsOutAddrCounter[0]_i_7_n_0 ,\xsOutAddrCounter[0]_i_8_n_0 }));
  CARRY4 \xsOutAddrCounter_reg[12]_i_1 
       (.CI(\xsOutAddrCounter_reg[8]_i_1_n_0 ),
        .CO({\NLW_xsOutAddrCounter_reg[12]_i_1_CO_UNCONNECTED [3:1],\xsOutAddrCounter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_xsOutAddrCounter_reg[12]_i_1_O_UNCONNECTED [3:2],\xsOutAddrCounter_reg[13] }),
        .S({1'b0,1'b0,\xsOutAddrCounter[12]_i_2_n_0 ,\xsOutAddrCounter[12]_i_3_n_0 }));
  CARRY4 \xsOutAddrCounter_reg[4]_i_1 
       (.CI(\xsOutAddrCounter_reg[0]_i_2_n_0 ),
        .CO({\xsOutAddrCounter_reg[4]_i_1_n_0 ,\xsOutAddrCounter_reg[4]_i_1_n_1 ,\xsOutAddrCounter_reg[4]_i_1_n_2 ,\xsOutAddrCounter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\xsOutAddrCounter_reg[7] ),
        .S({\xsOutAddrCounter[4]_i_2_n_0 ,\xsOutAddrCounter[4]_i_3_n_0 ,\xsOutAddrCounter[4]_i_4_n_0 ,\xsOutAddrCounter[4]_i_5_n_0 }));
  CARRY4 \xsOutAddrCounter_reg[8]_i_1 
       (.CI(\xsOutAddrCounter_reg[4]_i_1_n_0 ),
        .CO({\xsOutAddrCounter_reg[8]_i_1_n_0 ,\xsOutAddrCounter_reg[8]_i_1_n_1 ,\xsOutAddrCounter_reg[8]_i_1_n_2 ,\xsOutAddrCounter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\xsOutAddrCounter_reg[11] ),
        .S({\xsOutAddrCounter[8]_i_2_n_0 ,\xsOutAddrCounter[8]_i_3_n_0 ,\xsOutAddrCounter[8]_i_4_n_0 ,\xsOutAddrCounter[8]_i_5_n_0 }));
  LUT6 #(
    .INIT(64'h00000000E2E22E22)) 
    xsS2MM_TlastLoc_i_1
       (.I0(s_axis_s2mm_tlast),
        .I1(xsOutAddrCounter2),
        .I2(s_axis_s2mm_tready),
        .I3(CO),
        .I4(xsS2MM_TlastLoc_reg_0),
        .I5(p_1_in),
        .O(xsS2MM_TlastLoc_reg));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'hB)) 
    xsS2MM_TlastLoc_i_4
       (.I0(oValid),
        .I1(out),
        .O(p_1_in));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_106
   (sOutAddrCntEnPush0,
    \oData_reg[0]_0 ,
    SR,
    AxiStreamClk,
    sOutAddrCntEnPush,
    SysClk,
    sOutAddrCntEnSetPush,
    xsOutAddrCntEn,
    sOutAddrCntEnDin);
  output sOutAddrCntEnPush0;
  output \oData_reg[0]_0 ;
  input [0:0]SR;
  input AxiStreamClk;
  input sOutAddrCntEnPush;
  input SysClk;
  input sOutAddrCntEnSetPush;
  input xsOutAddrCntEn;
  input sOutAddrCntEnDin;

  wire AxiStreamClk;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SyncAsyncPushT_n_1;
  wire SyncAsyncPushT_n_2;
  wire SysClk;
  wire \iData_int[0]_i_1__0_n_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire iPushT;
  wire iPushT_i_1__21_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iReset;
  wire \oData_reg[0]_0 ;
  wire \oData_reg_n_0_[0] ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire oValid_reg_n_0;
  wire sOutAddrCntEnDin;
  wire sOutAddrCntEnPush;
  wire sOutAddrCntEnPush0;
  wire sOutAddrCntEnRdy;
  wire sOutAddrCntEnSetPush;
  wire xsOutAddrCntEn;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_112 SyncAsyncPushT
       (.AR(SR),
        .AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .\iData_int_reg[0] (SyncAsyncPushT_n_1),
        .\oData_reg[0] (\iData_int_reg_n_0_[0] ),
        .\oData_reg[0]_0 (oPushT_q_reg_n_0),
        .\oData_reg[0]_1 (\oData_reg_n_0_[0] ),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_2),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_113 SyncAsyncPushTBack
       (.D(iPushT),
        .SysClk(SysClk),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .\oSyncStages_reg[1]_0 (SR),
        .out(iReset),
        .sOutAddrCntEnPush(sOutAddrCntEnPush));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_114 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (SR),
        .out(iReset));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \iData_int[0]_i_1__0 
       (.I0(sOutAddrCntEnDin),
        .I1(sOutAddrCntEnPush),
        .I2(iPush_q),
        .I3(\iData_int_reg_n_0_[0] ),
        .O(\iData_int[0]_i_1__0_n_0 ));
  FDCE \iData_int_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(\iData_int[0]_i_1__0_n_0 ),
        .Q(\iData_int_reg_n_0_[0] ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__21
       (.I0(iPush_q),
        .I1(sOutAddrCntEnPush),
        .I2(iPushT),
        .O(iPushT_i_1__21_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iPushT_i_1__21_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(sOutAddrCntEnPush),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iRdy0),
        .Q(sOutAddrCntEnRdy));
  FDCE \oData_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_1),
        .Q(\oData_reg_n_0_[0] ));
  FDCE oPushTBack_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_2),
        .Q(oValid_reg_n_0));
  LUT3 #(
    .INIT(8'h20)) 
    sOutAddrCntEnPush_i_1
       (.I0(sOutAddrCntEnRdy),
        .I1(sOutAddrCntEnPush),
        .I2(sOutAddrCntEnSetPush),
        .O(sOutAddrCntEnPush0));
  LUT3 #(
    .INIT(8'hB8)) 
    xsOutAddrCntEn_i_1
       (.I0(\oData_reg_n_0_[0] ),
        .I1(oValid_reg_n_0),
        .I2(xsOutAddrCntEn),
        .O(\oData_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_14
   (oValid_reg_0,
    \lRegisters[0]_0 ,
    s00_axi_aclk,
    sADC_SPI_CmdDone,
    SysClk,
    lTxDoneSet_reg,
    Q);
  output oValid_reg_0;
  input [0:0]\lRegisters[0]_0 ;
  input s00_axi_aclk;
  input sADC_SPI_CmdDone;
  input SysClk;
  input lTxDoneSet_reg;
  input [2:0]Q;

  wire [2:0]Q;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__12_n_0;
  wire iPush_q;
  (* DONT_TOUCH *) wire [0:0]\lRegisters[0]_0 ;
  wire lTxDoneSet_reg;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushTChanged;
  wire oPushT_q_reg_n_0;
  wire oValid;
  wire oValid_reg_0;
  wire s00_axi_aclk;
  wire sADC_SPI_CmdDone;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_27 SyncAsyncPushT
       (.AR(\lRegisters[0]_0 ),
        .D(iPushT),
        .oPushTChanged(oPushTChanged),
        .oValid_reg(oPushT_q_reg_n_0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_28 SyncAsyncPushTBack
       (.D(oPushTBack_reg_n_0),
        .SysClk(SysClk),
        .out(\lRegisters[0]_0 ));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_29 SyncReset
       (.SysClk(SysClk),
        .out(\lRegisters[0]_0 ));
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__12
       (.I0(iPush_q),
        .I1(sADC_SPI_CmdDone),
        .I2(iPushT),
        .O(iPushT_i_1__12_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iPushT_i_1__12_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(sADC_SPI_CmdDone),
        .Q(iPush_q));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    lTxDoneSet_i_1
       (.I0(oValid),
        .I1(lTxDoneSet_reg),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\lRegisters[0]_0 ),
        .O(oValid_reg_0));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushTChanged),
        .Q(oValid));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_15
   (S,
    E,
    \lRegisters[0]_0 ,
    s00_axi_aclk,
    sSPI_RxWrEn,
    SysClk,
    Q,
    rd_en);
  output [0:0]S;
  output [0:0]E;
  input [0:0]\lRegisters[0]_0 ;
  input s00_axi_aclk;
  input sSPI_RxWrEn;
  input SysClk;
  input [0:0]Q;
  input rd_en;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]S;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__13_n_0;
  wire iPush_q;
  (* DONT_TOUCH *) wire [0:0]\lRegisters[0]_0 ;
  wire lRxFifoWrEn;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire rd_en;
  wire s00_axi_aclk;
  wire sSPI_RxWrEn;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_23 SyncAsyncPushT
       (.AR(\lRegisters[0]_0 ),
        .D(iPushT),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_1),
        .oValid_reg(oPushT_q_reg_n_0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_24 SyncAsyncPushTBack
       (.D(oPushTBack_reg_n_0),
        .SysClk(SysClk),
        .out(\lRegisters[0]_0 ));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_25 SyncReset
       (.SysClk(SysClk),
        .out(\lRegisters[0]_0 ));
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__13
       (.I0(iPush_q),
        .I1(sSPI_RxWrEn),
        .I2(iPushT),
        .O(iPushT_i_1__13_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iPushT_i_1__13_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(sSPI_RxWrEn),
        .Q(iPush_q));
  LUT2 #(
    .INIT(4'h6)) 
    \lRxFifoCounter[6]_i_1 
       (.I0(lRxFifoWrEn),
        .I1(rd_en),
        .O(E));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(SyncAsyncPushT_n_1),
        .Q(lRxFifoWrEn));
  LUT3 #(
    .INIT(8'h65)) 
    p_0_out__15_carry_i_5
       (.I0(Q),
        .I1(rd_en),
        .I2(lRxFifoWrEn),
        .O(S));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_16
   (iRdy,
    \lRegisters[0]_0 ,
    s00_axi_aclk,
    sPushTxFifoEmpty,
    SysClk);
  output iRdy;
  input [0:0]\lRegisters[0]_0 ;
  input s00_axi_aclk;
  input sPushTxFifoEmpty;
  input SysClk;

  wire SysClk;
  wire iPushT;
  wire iPushTBack;
  wire iPushT_i_1__14_n_0;
  wire iPush_q;
  wire iRdy;
  wire iRdy0__0;
  wire iReset;
  (* DONT_TOUCH *) wire [0:0]\lRegisters[0]_0 ;
  wire oPushT;
  wire oPushTBack;
  wire oPushT_q;
  wire s00_axi_aclk;
  wire sPushTxFifoEmpty;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_19 SyncAsyncPushT
       (.AR(\lRegisters[0]_0 ),
        .D(iPushT),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_20 SyncAsyncPushTBack
       (.D(oPushTBack),
        .SysClk(SysClk),
        .\oSyncStages_reg[0]_0 (\lRegisters[0]_0 ),
        .out(iPushTBack));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_21 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (\lRegisters[0]_0 ),
        .out(iReset));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    iPushT_i_1__14
       (.I0(sPushTxFifoEmpty),
        .I1(iPush_q),
        .I2(iPushT),
        .O(iPushT_i_1__14_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iPushT_i_1__14_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(sPushTxFifoEmpty),
        .Q(iPush_q));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h0009)) 
    iRdy0
       (.I0(iPushT),
        .I1(iPushTBack),
        .I2(iReset),
        .I3(sPushTxFifoEmpty),
        .O(iRdy0__0));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iRdy0__0),
        .Q(iRdy));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT_q),
        .Q(oPushTBack));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT),
        .Q(oPushT_q));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData_17
   (sSPI_TxRdEnRdy,
    lTxFifoRdEn,
    S,
    \lRegisters[0]_0 ,
    s00_axi_aclk,
    sSPI_TxRdEn,
    SysClk,
    Q,
    wr_en);
  output sSPI_TxRdEnRdy;
  output lTxFifoRdEn;
  output [0:0]S;
  input [0:0]\lRegisters[0]_0 ;
  input s00_axi_aclk;
  input sSPI_TxRdEn;
  input SysClk;
  input [0:0]Q;
  input wr_en;

  wire [0:0]Q;
  wire [0:0]S;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire iPushT;
  wire iPushTBack;
  wire iPushT_i_1__23_n_0;
  wire iPush_q;
  wire iRdy0__0;
  wire iReset;
  (* DONT_TOUCH *) wire [0:0]\lRegisters[0]_0 ;
  wire lTxFifoRdEn;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;
  wire sSPI_TxRdEn;
  wire sSPI_TxRdEnRdy;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync SyncAsyncPushT
       (.AR(\lRegisters[0]_0 ),
        .D(iPushT),
        .\oSyncStages_reg[1]_0 (SyncAsyncPushT_n_1),
        .oValid_reg(oPushT_q_reg_n_0),
        .out(oPushT),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_18 SyncAsyncPushTBack
       (.AR(\lRegisters[0]_0 ),
        .D(oPushTBack_reg_n_0),
        .SysClk(SysClk),
        .out(iPushTBack));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1 SyncReset
       (.SysClk(SysClk),
        .\oSyncStages_reg[0] (\lRegisters[0]_0 ),
        .out(iReset));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB4)) 
    iPushT_i_1__23
       (.I0(iPush_q),
        .I1(sSPI_TxRdEn),
        .I2(iPushT),
        .O(iPushT_i_1__23_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iPushT_i_1__23_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(sSPI_TxRdEn),
        .Q(iPush_q));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h0009)) 
    iRdy0
       (.I0(iPushT),
        .I1(iPushTBack),
        .I2(iReset),
        .I3(sSPI_TxRdEn),
        .O(iRdy0__0));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(iRdy0__0),
        .Q(sSPI_TxRdEnRdy));
  FDCE oPushTBack_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\lRegisters[0]_0 ),
        .D(SyncAsyncPushT_n_1),
        .Q(lTxFifoRdEn));
  LUT3 #(
    .INIT(8'h65)) 
    p_0_out_carry_i_5
       (.I0(Q),
        .I1(lTxFifoRdEn),
        .I2(wr_en),
        .O(S));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized1
   (E,
    iRdy_reg_0,
    lAdcSPI_Idle_reg,
    Q,
    in0,
    s00_axi_aclk,
    AxiStreamClk,
    lIpushTL,
    lSetIpushTL,
    lRst_n,
    \lRegisters[0]_0 ,
    lAdcSPI_Idle,
    lAdcSPI_Idle_reg_0,
    D);
  output [0:0]E;
  output iRdy_reg_0;
  output lAdcSPI_Idle_reg;
  output [13:0]Q;
  input in0;
  input s00_axi_aclk;
  input AxiStreamClk;
  input lIpushTL;
  input lSetIpushTL;
  input lRst_n;
  input [0:0]\lRegisters[0]_0 ;
  input lAdcSPI_Idle;
  input lAdcSPI_Idle_reg_0;
  input [13:0]D;

  wire AxiStreamClk;
  wire [13:0]D;
  wire [0:0]E;
  wire [13:0]Q;
  wire [13:0]iData_int;
  wire iPushRising;
  wire iPushT;
  wire iPush_q;
  wire iRdy;
  wire iRdy0;
  wire iRdy_reg_0;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire lAdcSPI_Idle;
  wire lAdcSPI_Idle_reg;
  wire lAdcSPI_Idle_reg_0;
  wire lIpushTL;
  wire [0:0]\lRegisters[0]_0 ;
  wire lRst_n;
  wire lSetIpushTL;
  wire oPushT;
  wire oPushTBack;
  wire oPushTChanged;
  wire oPushT_q;
  wire p_1_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_36 SyncAsyncPushT
       (.AR(in0),
        .AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .E(oPushTChanged),
        .oPushT_q(oPushT_q),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_37 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .iRdy0(iRdy0),
        .lIpushTL(lIpushTL),
        .\oSyncStages_reg[0]_0 (oPushTBack),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_38 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[0]),
        .Q(iData_int[0]));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[10]),
        .Q(iData_int[10]));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[11]),
        .Q(iData_int[11]));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[12]),
        .Q(iData_int[12]));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[13]),
        .Q(iData_int[13]));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[1]),
        .Q(iData_int[1]));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[2]),
        .Q(iData_int[2]));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[3]),
        .Q(iData_int[3]));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[4]),
        .Q(iData_int[4]));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[5]),
        .Q(iData_int[5]));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[6]),
        .Q(iData_int[6]));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[7]),
        .Q(iData_int[7]));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[8]),
        .Q(iData_int[8]));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(D[9]),
        .Q(iData_int[9]));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__0
       (.I0(lIpushTL),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__0
       (.I0(iPushT),
        .O(p_1_in));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(p_1_in),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(lIpushTL),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy));
  LUT5 #(
    .INIT(32'h0000E200)) 
    lAdcSPI_Idle_i_1
       (.I0(lAdcSPI_Idle),
        .I1(E),
        .I2(lAdcSPI_Idle_reg_0),
        .I3(lRst_n),
        .I4(\lRegisters[0]_0 ),
        .O(lAdcSPI_Idle_reg));
  LUT5 #(
    .INIT(32'h00002000)) 
    lIpushTL_i_1
       (.I0(iRdy),
        .I1(lIpushTL),
        .I2(lSetIpushTL),
        .I3(lRst_n),
        .I4(\lRegisters[0]_0 ),
        .O(iRdy_reg_0));
  FDCE \oData_reg[0] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[0]),
        .Q(Q[0]));
  FDCE \oData_reg[10] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[10]),
        .Q(Q[10]));
  FDCE \oData_reg[11] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[11]),
        .Q(Q[11]));
  FDCE \oData_reg[12] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[12]),
        .Q(Q[12]));
  FDCE \oData_reg[13] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[13]),
        .Q(Q[13]));
  FDCE \oData_reg[1] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[1]),
        .Q(Q[1]));
  FDCE \oData_reg[2] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[2]),
        .Q(Q[2]));
  FDCE \oData_reg[3] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[3]),
        .Q(Q[3]));
  FDCE \oData_reg[4] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[4]),
        .Q(Q[4]));
  FDCE \oData_reg[5] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[5]),
        .Q(Q[5]));
  FDCE \oData_reg[6] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[6]),
        .Q(Q[6]));
  FDCE \oData_reg[7] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[7]),
        .Q(Q[7]));
  FDCE \oData_reg[8] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[8]),
        .Q(Q[8]));
  FDCE \oData_reg[9] 
       (.C(AxiStreamClk),
        .CE(oPushTChanged),
        .CLR(in0),
        .D(iData_int[9]),
        .Q(Q[9]));
  FDCE oPushTBack_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q),
        .Q(oPushTBack));
  FDCE oPushT_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q));
  FDCE oValid_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushTChanged),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized1_107
   (E,
    iRdy_reg_0,
    \oData_reg[13]_0 ,
    SR,
    SysClk,
    AxiStreamClk,
    Q,
    CO,
    \FSM_sequential_sCurrentState_reg[0] ,
    \FSM_sequential_sCurrentState_reg[0]_0 ,
    O,
    \iData_int_reg[0]_0 ,
    \iData_int_reg[11]_0 ,
    \iData_int_reg[7]_0 ,
    \iData_int_reg[3]_0 );
  output [0:0]E;
  output iRdy_reg_0;
  output [13:0]\oData_reg[13]_0 ;
  input [0:0]SR;
  input SysClk;
  input AxiStreamClk;
  input [3:0]Q;
  input [0:0]CO;
  input [0:0]\FSM_sequential_sCurrentState_reg[0] ;
  input [0:0]\FSM_sequential_sCurrentState_reg[0]_0 ;
  input [1:0]O;
  input [0:0]\iData_int_reg[0]_0 ;
  input [3:0]\iData_int_reg[11]_0 ;
  input [3:0]\iData_int_reg[7]_0 ;
  input [3:0]\iData_int_reg[3]_0 ;

  wire AxiStreamClk;
  wire [0:0]CO;
  wire [0:0]E;
  wire [0:0]\FSM_sequential_sCurrentState_reg[0] ;
  wire [0:0]\FSM_sequential_sCurrentState_reg[0]_0 ;
  wire [1:0]O;
  wire [3:0]Q;
  (* DONT_TOUCH *) wire [0:0]SR;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [13:0]iData_int;
  wire [0:0]\iData_int_reg[0]_0 ;
  wire [3:0]\iData_int_reg[11]_0 ;
  wire [3:0]\iData_int_reg[3]_0 ;
  wire [3:0]\iData_int_reg[7]_0 ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy_reg_0;
  wire iReset;
  wire [13:0]\oData_reg[13]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire [13:0]p_1_out;
  wire sOutAddrCntStartPush;
  wire sOutAddrCntStartRdy;

  LUT6 #(
    .INIT(64'hB8BBB8BBB8BBB888)) 
    \FSM_sequential_sCurrentState[3]_i_5 
       (.I0(sOutAddrCntStartRdy),
        .I1(Q[1]),
        .I2(CO),
        .I3(Q[0]),
        .I4(\FSM_sequential_sCurrentState_reg[0] ),
        .I5(\FSM_sequential_sCurrentState_reg[0]_0 ),
        .O(iRdy_reg_0));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_108 SyncAsyncPushT
       (.AR(SR),
        .AxiStreamClk(AxiStreamClk),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_109 SyncAsyncPushTBack
       (.AR(SR),
        .D(iPushT),
        .SysClk(SysClk),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .sOutAddrCntStartPush(sOutAddrCntStartPush));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_110 SyncReset
       (.AR(SR),
        .SysClk(SysClk),
        .out(iReset));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[0]_i_1 
       (.I0(\iData_int_reg[3]_0 [0]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[10]_i_1 
       (.I0(\iData_int_reg[11]_0 [2]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[10]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[11]_i_1 
       (.I0(\iData_int_reg[11]_0 [3]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[11]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[12]_i_1 
       (.I0(O[0]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[12]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[13]_i_1 
       (.I0(O[1]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[13]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[1]_i_1 
       (.I0(\iData_int_reg[3]_0 [1]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[2]_i_1 
       (.I0(\iData_int_reg[3]_0 [2]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[3]_i_1 
       (.I0(\iData_int_reg[3]_0 [3]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[4]_i_1 
       (.I0(\iData_int_reg[7]_0 [0]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[5]_i_1 
       (.I0(\iData_int_reg[7]_0 [1]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[6]_i_1 
       (.I0(\iData_int_reg[7]_0 [2]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[7]_i_1 
       (.I0(\iData_int_reg[7]_0 [3]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[8]_i_1 
       (.I0(\iData_int_reg[11]_0 [0]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[8]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \iData_int[9]_i_1 
       (.I0(\iData_int_reg[11]_0 [1]),
        .I1(\iData_int_reg[0]_0 ),
        .O(p_1_out[9]));
  FDCE \iData_int_reg[0] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[0]),
        .Q(iData_int[0]));
  FDCE \iData_int_reg[10] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[10]),
        .Q(iData_int[10]));
  FDCE \iData_int_reg[11] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[11]),
        .Q(iData_int[11]));
  FDCE \iData_int_reg[12] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[12]),
        .Q(iData_int[12]));
  FDCE \iData_int_reg[13] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[13]),
        .Q(iData_int[13]));
  FDCE \iData_int_reg[1] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[1]),
        .Q(iData_int[1]));
  FDCE \iData_int_reg[2] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[2]),
        .Q(iData_int[2]));
  FDCE \iData_int_reg[3] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[3]),
        .Q(iData_int[3]));
  FDCE \iData_int_reg[4] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[4]),
        .Q(iData_int[4]));
  FDCE \iData_int_reg[5] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[5]),
        .Q(iData_int[5]));
  FDCE \iData_int_reg[6] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[6]),
        .Q(iData_int[6]));
  FDCE \iData_int_reg[7] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[7]),
        .Q(iData_int[7]));
  FDCE \iData_int_reg[8] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[8]),
        .Q(iData_int[8]));
  FDCE \iData_int_reg[9] 
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(p_1_out[9]),
        .Q(iData_int[9]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    iPushT_i_1
       (.I0(sOutAddrCntStartRdy),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2
       (.I0(iPushT),
        .O(iPushT_i_2_n_0));
  FDCE iPushT_reg
       (.C(SysClk),
        .CE(iPushRising),
        .CLR(SR),
        .D(iPushT_i_2_n_0),
        .Q(iPushT));
  LUT5 #(
    .INIT(32'h00400000)) 
    iPush_q_i_1__0
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(sOutAddrCntStartRdy),
        .O(sOutAddrCntStartPush));
  FDCE iPush_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(sOutAddrCntStartPush),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(SR),
        .D(iRdy0),
        .Q(sOutAddrCntStartRdy));
  FDCE \oData_reg[0] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[0]),
        .Q(\oData_reg[13]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[10]),
        .Q(\oData_reg[13]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[11]),
        .Q(\oData_reg[13]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[12]),
        .Q(\oData_reg[13]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[13]),
        .Q(\oData_reg[13]_0 [13]));
  FDCE \oData_reg[1] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[1]),
        .Q(\oData_reg[13]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[2]),
        .Q(\oData_reg[13]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[3]),
        .Q(\oData_reg[13]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[4]),
        .Q(\oData_reg[13]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[5]),
        .Q(\oData_reg[13]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[6]),
        .Q(\oData_reg[13]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[7]),
        .Q(\oData_reg[13]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[8]),
        .Q(\oData_reg[13]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(AxiStreamClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(SR),
        .D(iData_int[9]),
        .Q(\oData_reg[13]_0 [9]));
  FDCE oPushTBack_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(SR),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4
   (E,
    D,
    \oData_reg[5]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    \lRstIpushReg_reg[0] ,
    \iData_int_reg[5]_0 );
  output [0:0]E;
  output [0:0]D;
  output [3:0]\oData_reg[5]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input \lRstIpushReg_reg[0] ;
  input [3:0]\iData_int_reg[5]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [3:0]\iData_int_reg[5]_0 ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__1_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy24_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire \lRstIpushReg_reg[0] ;
  wire [3:0]\oData_reg[5]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_98 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[1] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_99 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_100 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[5]_0 [0]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[5]_0 [1]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[5]_0 [2]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[5]_0 [3]),
        .Q(\iData_int_reg_n_0_[5] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__1
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__1
       (.I0(iPushT),
        .O(iPushT_i_2__1_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__1_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy24_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[0]_i_1 
       (.I0(\lRstIpushReg_reg[0] ),
        .I1(Q),
        .I2(iRdy24_out),
        .O(D));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[5]_0 [0]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[5]_0 [1]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[5]_0 [2]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[5]_0 [3]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_0
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_23_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_23_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__9_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy4_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_23_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_94 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_95 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_96 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__9
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__9
       (.I0(iPushT),
        .O(iPushT_i_2__9_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__9_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy4_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[10]_i_1 
       (.I0(p_23_in),
        .I1(Q),
        .I2(iRdy4_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_1
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_24_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_24_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__10_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy2_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_24_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_90 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_91 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_92 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__10
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__10
       (.I0(iPushT),
        .O(iPushT_i_2__10_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__10_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy2_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[11]_i_1 
       (.I0(p_24_in),
        .I1(Q),
        .I2(iRdy2_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_10
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_20_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_20_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__6_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy10_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_20_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_54 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_55 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_56 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__6
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__6
       (.I0(iPushT),
        .O(iPushT_i_2__6_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__6_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy10_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[7]_i_1 
       (.I0(p_20_in),
        .I1(Q),
        .I2(iRdy10_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_11
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_21_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_21_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__7_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy8_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_21_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_50 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_51 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_52 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__7
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__7
       (.I0(iPushT),
        .O(iPushT_i_2__7_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__7_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy8_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[8]_i_1 
       (.I0(p_21_in),
        .I1(Q),
        .I2(iRdy8_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_12
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_22_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_22_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__8_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy6_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_22_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_46 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_47 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_48 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__8
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__8
       (.I0(iPushT),
        .O(iPushT_i_2__8_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__8_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy6_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[9]_i_1 
       (.I0(p_22_in),
        .I1(Q),
        .I2(iRdy6_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_2
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_25_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_25_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__11_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy0_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_25_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_86 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_87 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_88 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__11
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__11
       (.I0(iPushT),
        .O(iPushT_i_2__11_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__11_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy0_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[12]_i_1 
       (.I0(p_25_in),
        .I1(Q),
        .I2(iRdy0_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_3
   (D,
    in0,
    SysClk,
    Q,
    s00_axi_aclk,
    \lRstIpushReg_reg[13] );
  output [0:0]D;
  input in0;
  input SysClk;
  input [0:0]Q;
  input s00_axi_aclk;
  input \lRstIpushReg_reg[13] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__17_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy12_in;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire \lRstIpushReg_reg[13] ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_82 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .SysClk(SysClk),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_83 SyncAsyncPushTBack
       (.D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (in0),
        .\oSyncStages_reg[0]_1 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_84 SyncReset
       (.\oSyncStages_reg[0] (in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    iPushT_i_1__17
       (.I0(Q),
        .I1(iPush_q),
        .I2(iPushT),
        .O(iPushT_i_1__17_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iPushT_i_1__17_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy12_in));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[13]_i_1 
       (.I0(\lRstIpushReg_reg[13] ),
        .I1(Q),
        .I2(iRdy12_in),
        .O(D));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_4
   (D,
    in0,
    SysClk,
    Q,
    s00_axi_aclk,
    p_14_in);
  output [0:0]D;
  input in0;
  input SysClk;
  input [0:0]Q;
  input s00_axi_aclk;
  input p_14_in;

  wire [0:0]D;
  wire [0:0]Q;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__15_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy22_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_14_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_78 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .SysClk(SysClk),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_79 SyncAsyncPushTBack
       (.D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (in0),
        .\oSyncStages_reg[0]_1 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_80 SyncReset
       (.\oSyncStages_reg[0] (in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    iPushT_i_1__15
       (.I0(Q),
        .I1(iPush_q),
        .I2(iPushT),
        .O(iPushT_i_1__15_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iPushT_i_1__15_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy22_out));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[1]_i_1 
       (.I0(p_14_in),
        .I1(Q),
        .I2(iRdy22_out),
        .O(D));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_5
   (E,
    D,
    \oData_reg[15]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_15_in,
    \iData_int_reg[15]_0 );
  output [0:0]E;
  output [0:0]D;
  output [13:0]\oData_reg[15]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_15_in;
  input [13:0]\iData_int_reg[15]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [13:0]\iData_int_reg[15]_0 ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__2_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy20_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [13:0]\oData_reg[15]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_15_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_74 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[2] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_75 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_76 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [8]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [9]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [10]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [11]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [12]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [13]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [0]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [1]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [2]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [3]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [4]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [5]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [6]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[15]_0 [7]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__2
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__2
       (.I0(iPushT),
        .O(iPushT_i_2__2_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__2_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy20_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[2]_i_1 
       (.I0(p_15_in),
        .I1(Q),
        .I2(iRdy20_out),
        .O(D));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[15]_0 [8]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[15]_0 [9]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[15]_0 [10]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[15]_0 [11]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[15]_0 [12]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[15]_0 [13]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[15]_0 [0]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[15]_0 [1]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[15]_0 [2]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[15]_0 [3]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[15]_0 [4]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[15]_0 [5]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[15]_0 [6]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[15]_0 [7]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_6
   (E,
    D,
    \oData_reg[26]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_16_in,
    \iData_int_reg[26]_0 );
  output [0:0]E;
  output [0:0]D;
  output [25:0]\oData_reg[26]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_16_in;
  input [25:0]\iData_int_reg[26]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [25:0]\iData_int_reg[26]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[18] ;
  wire \iData_int_reg_n_0_[19] ;
  wire \iData_int_reg_n_0_[20] ;
  wire \iData_int_reg_n_0_[21] ;
  wire \iData_int_reg_n_0_[22] ;
  wire \iData_int_reg_n_0_[23] ;
  wire \iData_int_reg_n_0_[24] ;
  wire \iData_int_reg_n_0_[25] ;
  wire \iData_int_reg_n_0_[26] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__3_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy18_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [25:0]\oData_reg[26]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_16_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_70 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_71 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_72 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [9]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [10]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [11]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [12]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [13]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [14]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [15]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [16]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[18] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [17]),
        .Q(\iData_int_reg_n_0_[18] ));
  FDCE \iData_int_reg[19] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [18]),
        .Q(\iData_int_reg_n_0_[19] ));
  FDCE \iData_int_reg[20] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [19]),
        .Q(\iData_int_reg_n_0_[20] ));
  FDCE \iData_int_reg[21] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [20]),
        .Q(\iData_int_reg_n_0_[21] ));
  FDCE \iData_int_reg[22] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [21]),
        .Q(\iData_int_reg_n_0_[22] ));
  FDCE \iData_int_reg[23] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [22]),
        .Q(\iData_int_reg_n_0_[23] ));
  FDCE \iData_int_reg[24] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [23]),
        .Q(\iData_int_reg_n_0_[24] ));
  FDCE \iData_int_reg[25] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [24]),
        .Q(\iData_int_reg_n_0_[25] ));
  FDCE \iData_int_reg[26] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [25]),
        .Q(\iData_int_reg_n_0_[26] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [1]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [2]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [3]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [4]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [5]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [6]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [7]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[26]_0 [8]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__3
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__3
       (.I0(iPushT),
        .O(iPushT_i_2__3_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__3_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy18_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[3]_i_1 
       (.I0(p_16_in),
        .I1(Q),
        .I2(iRdy18_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[26]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[26]_0 [9]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[26]_0 [10]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[26]_0 [11]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[26]_0 [12]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[26]_0 [13]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[26]_0 [14]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[26]_0 [15]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[26]_0 [16]));
  FDCE \oData_reg[18] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[18] ),
        .Q(\oData_reg[26]_0 [17]));
  FDCE \oData_reg[19] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[19] ),
        .Q(\oData_reg[26]_0 [18]));
  FDCE \oData_reg[20] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[20] ),
        .Q(\oData_reg[26]_0 [19]));
  FDCE \oData_reg[21] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[21] ),
        .Q(\oData_reg[26]_0 [20]));
  FDCE \oData_reg[22] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[22] ),
        .Q(\oData_reg[26]_0 [21]));
  FDCE \oData_reg[23] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[23] ),
        .Q(\oData_reg[26]_0 [22]));
  FDCE \oData_reg[24] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[24] ),
        .Q(\oData_reg[26]_0 [23]));
  FDCE \oData_reg[25] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[25] ),
        .Q(\oData_reg[26]_0 [24]));
  FDCE \oData_reg[26] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[26] ),
        .Q(\oData_reg[26]_0 [25]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[26]_0 [1]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[26]_0 [2]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[26]_0 [3]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[26]_0 [4]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[26]_0 [5]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[26]_0 [6]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[26]_0 [7]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[26]_0 [8]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_7
   (D,
    in0,
    SysClk,
    Q,
    s00_axi_aclk,
    p_17_in);
  output [0:0]D;
  input in0;
  input SysClk;
  input [0:0]Q;
  input s00_axi_aclk;
  input p_17_in;

  wire [0:0]D;
  wire [0:0]Q;
  wire SysClk;
  wire iPushT;
  wire iPushT_i_1__16_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy16_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_17_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_66 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .SysClk(SysClk),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_67 SyncAsyncPushTBack
       (.D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (in0),
        .\oSyncStages_reg[0]_1 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_68 SyncReset
       (.\oSyncStages_reg[0] (in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    iPushT_i_1__16
       (.I0(Q),
        .I1(iPush_q),
        .I2(iPushT),
        .O(iPushT_i_1__16_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iPushT_i_1__16_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy16_out));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[4]_i_1 
       (.I0(p_17_in),
        .I1(Q),
        .I2(iRdy16_out),
        .O(D));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_8
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_18_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_18_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__4_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy14_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_18_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_62 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_63 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_64 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__4
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__4
       (.I0(iPushT),
        .O(iPushT_i_2__4_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__4_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy14_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[5]_i_1 
       (.I0(p_18_in),
        .I1(Q),
        .I2(iRdy14_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* ORIG_REF_NAME = "HandshakeData" *) 
module design_1_AXI_ZmodADC1410_1_0_HandshakeData__parameterized4_9
   (E,
    D,
    \oData_reg[17]_0 ,
    in0,
    s00_axi_aclk,
    SysClk,
    Q,
    p_19_in,
    \iData_int_reg[17]_0 );
  output [0:0]E;
  output [0:0]D;
  output [17:0]\oData_reg[17]_0 ;
  input in0;
  input s00_axi_aclk;
  input SysClk;
  input [0:0]Q;
  input p_19_in;
  input [17:0]\iData_int_reg[17]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire SyncAsyncPushT_n_1;
  wire SysClk;
  wire [17:0]\iData_int_reg[17]_0 ;
  wire \iData_int_reg_n_0_[0] ;
  wire \iData_int_reg_n_0_[10] ;
  wire \iData_int_reg_n_0_[11] ;
  wire \iData_int_reg_n_0_[12] ;
  wire \iData_int_reg_n_0_[13] ;
  wire \iData_int_reg_n_0_[14] ;
  wire \iData_int_reg_n_0_[15] ;
  wire \iData_int_reg_n_0_[16] ;
  wire \iData_int_reg_n_0_[17] ;
  wire \iData_int_reg_n_0_[1] ;
  wire \iData_int_reg_n_0_[2] ;
  wire \iData_int_reg_n_0_[3] ;
  wire \iData_int_reg_n_0_[4] ;
  wire \iData_int_reg_n_0_[5] ;
  wire \iData_int_reg_n_0_[6] ;
  wire \iData_int_reg_n_0_[7] ;
  wire \iData_int_reg_n_0_[8] ;
  wire \iData_int_reg_n_0_[9] ;
  wire iPushRising;
  wire iPushT;
  wire iPushT_i_2__5_n_0;
  wire iPush_q;
  wire iRdy0;
  wire iRdy12_out;
  wire iReset;
  (* DONT_TOUCH *) wire in0;
  wire [17:0]\oData_reg[17]_0 ;
  wire oPushT;
  wire oPushTBack_reg_n_0;
  wire oPushT_q_reg_n_0;
  wire p_19_in;
  wire s00_axi_aclk;

  design_1_AXI_ZmodADC1410_1_0_SyncAsync_58 SyncAsyncPushT
       (.AR(in0),
        .D(iPushT),
        .E(SyncAsyncPushT_n_1),
        .SysClk(SysClk),
        .\oData_reg[0] (oPushT_q_reg_n_0),
        .out(oPushT));
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_59 SyncAsyncPushTBack
       (.AR(in0),
        .D(iPushT),
        .Q(Q),
        .iRdy0(iRdy0),
        .\oSyncStages_reg[0]_0 (oPushTBack_reg_n_0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_60 SyncReset
       (.AR(in0),
        .out(iReset),
        .s00_axi_aclk(s00_axi_aclk));
  FDCE \iData_int_reg[0] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [0]),
        .Q(\iData_int_reg_n_0_[0] ));
  FDCE \iData_int_reg[10] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [10]),
        .Q(\iData_int_reg_n_0_[10] ));
  FDCE \iData_int_reg[11] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [11]),
        .Q(\iData_int_reg_n_0_[11] ));
  FDCE \iData_int_reg[12] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [12]),
        .Q(\iData_int_reg_n_0_[12] ));
  FDCE \iData_int_reg[13] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [13]),
        .Q(\iData_int_reg_n_0_[13] ));
  FDCE \iData_int_reg[14] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [14]),
        .Q(\iData_int_reg_n_0_[14] ));
  FDCE \iData_int_reg[15] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [15]),
        .Q(\iData_int_reg_n_0_[15] ));
  FDCE \iData_int_reg[16] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [16]),
        .Q(\iData_int_reg_n_0_[16] ));
  FDCE \iData_int_reg[17] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [17]),
        .Q(\iData_int_reg_n_0_[17] ));
  FDCE \iData_int_reg[1] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [1]),
        .Q(\iData_int_reg_n_0_[1] ));
  FDCE \iData_int_reg[2] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [2]),
        .Q(\iData_int_reg_n_0_[2] ));
  FDCE \iData_int_reg[3] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [3]),
        .Q(\iData_int_reg_n_0_[3] ));
  FDCE \iData_int_reg[4] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [4]),
        .Q(\iData_int_reg_n_0_[4] ));
  FDCE \iData_int_reg[5] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [5]),
        .Q(\iData_int_reg_n_0_[5] ));
  FDCE \iData_int_reg[6] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [6]),
        .Q(\iData_int_reg_n_0_[6] ));
  FDCE \iData_int_reg[7] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [7]),
        .Q(\iData_int_reg_n_0_[7] ));
  FDCE \iData_int_reg[8] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [8]),
        .Q(\iData_int_reg_n_0_[8] ));
  FDCE \iData_int_reg[9] 
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(\iData_int_reg[17]_0 [9]),
        .Q(\iData_int_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h2)) 
    iPushT_i_1__5
       (.I0(Q),
        .I1(iPush_q),
        .O(iPushRising));
  LUT1 #(
    .INIT(2'h1)) 
    iPushT_i_2__5
       (.I0(iPushT),
        .O(iPushT_i_2__5_n_0));
  FDCE iPushT_reg
       (.C(s00_axi_aclk),
        .CE(iPushRising),
        .CLR(in0),
        .D(iPushT_i_2__5_n_0),
        .Q(iPushT));
  FDCE iPush_q_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(Q),
        .Q(iPush_q));
  FDCE iRdy_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(in0),
        .D(iRdy0),
        .Q(iRdy12_out));
  LUT3 #(
    .INIT(8'h20)) 
    \lRstIpushReg[6]_i_1 
       (.I0(p_19_in),
        .I1(Q),
        .I2(iRdy12_out),
        .O(D));
  FDCE \oData_reg[0] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[0] ),
        .Q(\oData_reg[17]_0 [0]));
  FDCE \oData_reg[10] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[10] ),
        .Q(\oData_reg[17]_0 [10]));
  FDCE \oData_reg[11] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[11] ),
        .Q(\oData_reg[17]_0 [11]));
  FDCE \oData_reg[12] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[12] ),
        .Q(\oData_reg[17]_0 [12]));
  FDCE \oData_reg[13] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[13] ),
        .Q(\oData_reg[17]_0 [13]));
  FDCE \oData_reg[14] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[14] ),
        .Q(\oData_reg[17]_0 [14]));
  FDCE \oData_reg[15] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[15] ),
        .Q(\oData_reg[17]_0 [15]));
  FDCE \oData_reg[16] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[16] ),
        .Q(\oData_reg[17]_0 [16]));
  FDCE \oData_reg[17] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[17] ),
        .Q(\oData_reg[17]_0 [17]));
  FDCE \oData_reg[1] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[1] ),
        .Q(\oData_reg[17]_0 [1]));
  FDCE \oData_reg[2] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[2] ),
        .Q(\oData_reg[17]_0 [2]));
  FDCE \oData_reg[3] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[3] ),
        .Q(\oData_reg[17]_0 [3]));
  FDCE \oData_reg[4] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[4] ),
        .Q(\oData_reg[17]_0 [4]));
  FDCE \oData_reg[5] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[5] ),
        .Q(\oData_reg[17]_0 [5]));
  FDCE \oData_reg[6] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[6] ),
        .Q(\oData_reg[17]_0 [6]));
  FDCE \oData_reg[7] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[7] ),
        .Q(\oData_reg[17]_0 [7]));
  FDCE \oData_reg[8] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[8] ),
        .Q(\oData_reg[17]_0 [8]));
  FDCE \oData_reg[9] 
       (.C(SysClk),
        .CE(SyncAsyncPushT_n_1),
        .CLR(in0),
        .D(\iData_int_reg_n_0_[9] ),
        .Q(\oData_reg[17]_0 [9]));
  FDCE oPushTBack_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT_q_reg_n_0),
        .Q(oPushTBack_reg_n_0));
  FDCE oPushT_q_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(oPushT),
        .Q(oPushT_q_reg_n_0));
  FDCE oValid_reg
       (.C(SysClk),
        .CE(1'b1),
        .CLR(in0),
        .D(SyncAsyncPushT_n_1),
        .Q(E));
endmodule

(* CHECK_LICENSE_TYPE = "RX_FIFO,fifo_generator_v13_2_4,{}" *) (* ORIG_REF_NAME = "RX_FIFO" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "fifo_generator_v13_2_4,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_RX_FIFO
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    almost_empty,
    valid,
    rd_data_count,
    wr_rst_busy,
    rd_rst_busy);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ ALMOST_EMPTY" *) output almost_empty;
  output valid;
  output [7:0]rd_data_count;
  output wr_rst_busy;
  output rd_rst_busy;

  wire almost_empty;
  wire almost_full;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [6:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [7:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "7" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "1" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "8" *) 
  (* C_RD_DEPTH = "128" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "7" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "8" *) 
  (* C_WR_DEPTH = "128" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "7" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4 U0
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[6:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[7:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge
   (sZmodControllerRst_n,
    sInitDone_n_0,
    SR,
    \oSyncStages_reg[0] ,
    sInitDone_n,
    SysClk);
  output sZmodControllerRst_n;
  output [0:0]sInitDone_n_0;
  output [0:0]SR;
  input \oSyncStages_reg[0] ;
  input sInitDone_n;
  input SysClk;

  wire [0:0]SR;
  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire sInitDone_n;
  wire [0:0]sInitDone_n_0;
  wire sZmodControllerRst_n;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_41 SyncAsyncx
       (.AR(aRst_int),
        .SR(SR),
        .SysClk(SysClk),
        .sInitDone_n(sInitDone_n),
        .sInitDone_n_0(sInitDone_n_0),
        .sZmodControllerRst_n(sZmodControllerRst_n));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge_13
   (out,
    SR,
    \oSyncStages_reg[1] ,
    \oSyncStages_reg[0] ,
    xsTvalidDisable_reg,
    AxiStreamClk);
  output [0:0]out;
  output [0:0]SR;
  output \oSyncStages_reg[1] ;
  input \oSyncStages_reg[0] ;
  input xsTvalidDisable_reg;
  input AxiStreamClk;

  wire AxiStreamClk;
  wire [0:0]SR;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire \oSyncStages_reg[1] ;
  wire [0:0]out;
  wire xsTvalidDisable_reg;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync_40 SyncAsyncx
       (.AR(aRst_int),
        .AxiStreamClk(AxiStreamClk),
        .SR(SR),
        .\oSyncStages_reg[1]_0 (\oSyncStages_reg[1] ),
        .out(out),
        .xsTvalidDisable_reg(xsTvalidDisable_reg));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_100
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_101 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_110
   (out,
    AR,
    SysClk);
  output [0:0]out;
  input [0:0]AR;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_111 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_114
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_115 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_118
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_119 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_122
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_123 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_126
   (out,
    \oSyncStages_reg[0] ,
    AxiStreamClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input AxiStreamClk;

  wire AxiStreamClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_127 SyncAsyncx
       (.AS(aRst_int),
        .AxiStreamClk(AxiStreamClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_130
   (out,
    \oSyncStages_reg[0] ,
    AxiStreamClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input AxiStreamClk;

  wire AxiStreamClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_131 SyncAsyncx
       (.AS(aRst_int),
        .AxiStreamClk(AxiStreamClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_21
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_22 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_25
   (out,
    SysClk);
  input out;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;

  assign aRst_int = out;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_26 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_29
   (out,
    SysClk);
  input out;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;

  assign aRst_int = out;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_30 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_38
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_39 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_44
   (out,
    \oSyncStages_reg[0] ,
    SysClk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input SysClk;

  wire SysClk;
  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_45 SyncAsyncx
       (.AS(aRst_int),
        .SysClk(SysClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_48
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_49 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_52
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_53 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_56
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_57 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_60
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_61 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_64
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_65 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_68
   (out,
    \oSyncStages_reg[0] ,
    s00_axi_aclk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_69 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_72
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_73 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_76
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_77 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_80
   (out,
    \oSyncStages_reg[0] ,
    s00_axi_aclk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_81 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_84
   (out,
    \oSyncStages_reg[0] ,
    s00_axi_aclk);
  output [0:0]out;
  input \oSyncStages_reg[0] ;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = \oSyncStages_reg[0] ;
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_85 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_88
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_89 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_92
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_93 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module design_1_AXI_ZmodADC1410_1_0_ResetBridge__parameterized1_96
   (out,
    AR,
    s00_axi_aclk);
  output [0:0]out;
  input [0:0]AR;
  input s00_axi_aclk;

  (* RTL_KEEP = "true" *) wire aRst_int;
  wire [0:0]out;
  wire s00_axi_aclk;

  assign aRst_int = AR[0];
  design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_97 SyncAsyncx
       (.AS(aRst_int),
        .out(out),
        .s00_axi_aclk(s00_axi_aclk));
endmodule

(* ORIG_REF_NAME = "SPI_Adapter" *) 
module design_1_AXI_ZmodADC1410_1_0_SPI_Adapter
   (dout,
    sSPI_TxDout,
    sSPI_TxValid,
    sSPI_TxRdEnRdy,
    lTxFifoRdEn,
    lTxDoneSet,
    Q,
    \lRxFifoCounter_reg[6]_0 ,
    lTxDoneSetR,
    \lRegisters[0]_0 ,
    SysClk,
    s00_axi_aclk,
    sSPI_RxDin,
    sSPI_RxWrEn,
    rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    wr_en,
    sSPI_TxRdEn,
    SR,
    sADC_SPI_CmdDone,
    E);
  output [7:0]dout;
  output [23:0]sSPI_TxDout;
  output sSPI_TxValid;
  output sSPI_TxRdEnRdy;
  output lTxFifoRdEn;
  output lTxDoneSet;
  output [6:0]Q;
  output [6:0]\lRxFifoCounter_reg[6]_0 ;
  output lTxDoneSetR;
  input [0:0]\lRegisters[0]_0 ;
  input SysClk;
  input s00_axi_aclk;
  input [7:0]sSPI_RxDin;
  input sSPI_RxWrEn;
  input rd_en;
  input [23:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input wr_en;
  input sSPI_TxRdEn;
  input [0:0]SR;
  input sADC_SPI_CmdDone;
  input [0:0]E;

  wire [23:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire InstAdcCmdDoneEmptyHandshake_n_0;
  wire InstRxFifoWrEnHandshake_n_0;
  wire InstRxFifoWrEnHandshake_n_1;
  wire InstTxFifoRdEnHandshake_n_2;
  wire [6:0]Q;
  wire [0:0]SR;
  wire SysClk;
  wire [7:0]dout;
  wire iRdy;
  wire [0:0]\lRegisters[0]_0 ;
  wire \lRxFifoCounter[0]_i_1_n_0 ;
  wire [6:0]\lRxFifoCounter_reg[6]_0 ;
  wire lTxDoneSet;
  wire lTxDoneSetR;
  wire lTxDoneSetR_i_1_n_0;
  wire lTxDoneSet_i_2_n_0;
  wire \lTxFifoCounter[0]_i_1_n_0 ;
  wire lTxFifoRdEn;
  wire p_0_out__15_carry__0_i_1_n_0;
  wire p_0_out__15_carry__0_i_2_n_0;
  wire p_0_out__15_carry__0_n_3;
  wire p_0_out__15_carry__0_n_6;
  wire p_0_out__15_carry__0_n_7;
  wire p_0_out__15_carry_i_1_n_0;
  wire p_0_out__15_carry_i_2_n_0;
  wire p_0_out__15_carry_i_3_n_0;
  wire p_0_out__15_carry_i_4_n_0;
  wire p_0_out__15_carry_n_0;
  wire p_0_out__15_carry_n_1;
  wire p_0_out__15_carry_n_2;
  wire p_0_out__15_carry_n_3;
  wire p_0_out__15_carry_n_4;
  wire p_0_out__15_carry_n_5;
  wire p_0_out__15_carry_n_6;
  wire p_0_out__15_carry_n_7;
  wire p_0_out_carry__0_i_1_n_0;
  wire p_0_out_carry__0_i_2_n_0;
  wire p_0_out_carry__0_n_3;
  wire p_0_out_carry__0_n_6;
  wire p_0_out_carry__0_n_7;
  wire p_0_out_carry_i_1_n_0;
  wire p_0_out_carry_i_2_n_0;
  wire p_0_out_carry_i_3_n_0;
  wire p_0_out_carry_i_4_n_0;
  wire p_0_out_carry_n_0;
  wire p_0_out_carry_n_1;
  wire p_0_out_carry_n_2;
  wire p_0_out_carry_n_3;
  wire p_0_out_carry_n_4;
  wire p_0_out_carry_n_5;
  wire p_0_out_carry_n_6;
  wire p_0_out_carry_n_7;
  wire rd_en;
  wire s00_axi_aclk;
  wire sADC_SPI_CmdDone;
  wire sPushTxFifoEmpty;
  wire sPushTxFifoEmpty0__0;
  wire [7:0]sSPI_RxDin;
  wire sSPI_RxWrEn;
  wire [23:0]sSPI_TxDout;
  wire sSPI_TxRdEn;
  wire sSPI_TxRdEnRdy;
  wire sSPI_TxValid;
  wire sSetPushTxFifoEmpty;
  wire sSetPushTxFifoEmpty_i_1_n_0;
  wire sTxFifoEmpty;
  wire sTxFifoEmptyR;
  wire wr_en;
  wire NLW_RECEIVE_FIFO_almost_empty_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_almost_full_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_empty_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_full_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_rd_rst_busy_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_valid_UNCONNECTED;
  wire NLW_RECEIVE_FIFO_wr_rst_busy_UNCONNECTED;
  wire [7:0]NLW_RECEIVE_FIFO_rd_data_count_UNCONNECTED;
  wire NLW_TRANSMIT_FIFO_almost_empty_UNCONNECTED;
  wire NLW_TRANSMIT_FIFO_almost_full_UNCONNECTED;
  wire NLW_TRANSMIT_FIFO_full_UNCONNECTED;
  wire NLW_TRANSMIT_FIFO_rd_rst_busy_UNCONNECTED;
  wire NLW_TRANSMIT_FIFO_wr_rst_busy_UNCONNECTED;
  wire [7:0]NLW_TRANSMIT_FIFO_wr_data_count_UNCONNECTED;
  wire [3:1]NLW_p_0_out__15_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_p_0_out__15_carry__0_O_UNCONNECTED;
  wire [3:1]NLW_p_0_out_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_p_0_out_carry__0_O_UNCONNECTED;

  design_1_AXI_ZmodADC1410_1_0_HandshakeData_14 InstAdcCmdDoneEmptyHandshake
       (.Q(Q[6:4]),
        .SysClk(SysClk),
        .\lRegisters[0]_0 (\lRegisters[0]_0 ),
        .lTxDoneSet_reg(lTxDoneSet_i_2_n_0),
        .oValid_reg_0(InstAdcCmdDoneEmptyHandshake_n_0),
        .s00_axi_aclk(s00_axi_aclk),
        .sADC_SPI_CmdDone(sADC_SPI_CmdDone));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_15 InstRxFifoWrEnHandshake
       (.E(InstRxFifoWrEnHandshake_n_1),
        .Q(\lRxFifoCounter_reg[6]_0 [1]),
        .S(InstRxFifoWrEnHandshake_n_0),
        .SysClk(SysClk),
        .\lRegisters[0]_0 (\lRegisters[0]_0 ),
        .rd_en(rd_en),
        .s00_axi_aclk(s00_axi_aclk),
        .sSPI_RxWrEn(sSPI_RxWrEn));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_16 InstTxFifoEmptyHandshake
       (.SysClk(SysClk),
        .iRdy(iRdy),
        .\lRegisters[0]_0 (\lRegisters[0]_0 ),
        .s00_axi_aclk(s00_axi_aclk),
        .sPushTxFifoEmpty(sPushTxFifoEmpty));
  design_1_AXI_ZmodADC1410_1_0_HandshakeData_17 InstTxFifoRdEnHandshake
       (.Q(Q[1]),
        .S(InstTxFifoRdEnHandshake_n_2),
        .SysClk(SysClk),
        .\lRegisters[0]_0 (\lRegisters[0]_0 ),
        .lTxFifoRdEn(lTxFifoRdEn),
        .s00_axi_aclk(s00_axi_aclk),
        .sSPI_TxRdEn(sSPI_TxRdEn),
        .sSPI_TxRdEnRdy(sSPI_TxRdEnRdy),
        .wr_en(wr_en));
  (* CHECK_LICENSE_TYPE = "RX_FIFO,fifo_generator_v13_2_4,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_4,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_RX_FIFO RECEIVE_FIFO
       (.almost_empty(NLW_RECEIVE_FIFO_almost_empty_UNCONNECTED),
        .almost_full(NLW_RECEIVE_FIFO_almost_full_UNCONNECTED),
        .din(sSPI_RxDin),
        .dout(dout),
        .empty(NLW_RECEIVE_FIFO_empty_UNCONNECTED),
        .full(NLW_RECEIVE_FIFO_full_UNCONNECTED),
        .rd_clk(s00_axi_aclk),
        .rd_data_count(NLW_RECEIVE_FIFO_rd_data_count_UNCONNECTED[7:0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_RECEIVE_FIFO_rd_rst_busy_UNCONNECTED),
        .rst(\lRegisters[0]_0 ),
        .valid(NLW_RECEIVE_FIFO_valid_UNCONNECTED),
        .wr_clk(SysClk),
        .wr_en(sSPI_RxWrEn),
        .wr_rst_busy(NLW_RECEIVE_FIFO_wr_rst_busy_UNCONNECTED));
  (* CHECK_LICENSE_TYPE = "TX_FIFO,fifo_generator_v13_2_4,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_4,Vivado 2019.1.3" *) 
  design_1_AXI_ZmodADC1410_1_0_TX_FIFO TRANSMIT_FIFO
       (.almost_empty(NLW_TRANSMIT_FIFO_almost_empty_UNCONNECTED),
        .almost_full(NLW_TRANSMIT_FIFO_almost_full_UNCONNECTED),
        .din(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .dout(sSPI_TxDout),
        .empty(sTxFifoEmpty),
        .full(NLW_TRANSMIT_FIFO_full_UNCONNECTED),
        .rd_clk(SysClk),
        .rd_en(sSPI_TxRdEn),
        .rd_rst_busy(NLW_TRANSMIT_FIFO_rd_rst_busy_UNCONNECTED),
        .rst(\lRegisters[0]_0 ),
        .valid(sSPI_TxValid),
        .wr_clk(s00_axi_aclk),
        .wr_data_count(NLW_TRANSMIT_FIFO_wr_data_count_UNCONNECTED[7:0]),
        .wr_en(wr_en),
        .wr_rst_busy(NLW_TRANSMIT_FIFO_wr_rst_busy_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    \lRxFifoCounter[0]_i_1 
       (.I0(\lRxFifoCounter_reg[6]_0 [0]),
        .O(\lRxFifoCounter[0]_i_1_n_0 ));
  FDRE \lRxFifoCounter_reg[0] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(\lRxFifoCounter[0]_i_1_n_0 ),
        .Q(\lRxFifoCounter_reg[6]_0 [0]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[1] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry_n_7),
        .Q(\lRxFifoCounter_reg[6]_0 [1]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[2] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry_n_6),
        .Q(\lRxFifoCounter_reg[6]_0 [2]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[3] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry_n_5),
        .Q(\lRxFifoCounter_reg[6]_0 [3]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[4] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry_n_4),
        .Q(\lRxFifoCounter_reg[6]_0 [4]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[5] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry__0_n_7),
        .Q(\lRxFifoCounter_reg[6]_0 [5]),
        .R(\lRegisters[0]_0 ));
  FDRE \lRxFifoCounter_reg[6] 
       (.C(s00_axi_aclk),
        .CE(InstRxFifoWrEnHandshake_n_1),
        .D(p_0_out__15_carry__0_n_6),
        .Q(\lRxFifoCounter_reg[6]_0 [6]),
        .R(\lRegisters[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    lTxDoneSetR_i_1
       (.I0(lTxDoneSet),
        .I1(\lRegisters[0]_0 ),
        .O(lTxDoneSetR_i_1_n_0));
  FDRE lTxDoneSetR_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(lTxDoneSetR_i_1_n_0),
        .Q(lTxDoneSetR),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    lTxDoneSet_i_2
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(lTxDoneSet_i_2_n_0));
  FDRE lTxDoneSet_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(InstAdcCmdDoneEmptyHandshake_n_0),
        .Q(lTxDoneSet),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \lTxFifoCounter[0]_i_1 
       (.I0(Q[0]),
        .O(\lTxFifoCounter[0]_i_1_n_0 ));
  FDRE \lTxFifoCounter_reg[0] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(\lTxFifoCounter[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[1] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry_n_7),
        .Q(Q[1]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[2] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry_n_6),
        .Q(Q[2]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[3] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry_n_5),
        .Q(Q[3]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[4] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry_n_4),
        .Q(Q[4]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[5] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry__0_n_7),
        .Q(Q[5]),
        .R(\lRegisters[0]_0 ));
  FDRE \lTxFifoCounter_reg[6] 
       (.C(s00_axi_aclk),
        .CE(E),
        .D(p_0_out_carry__0_n_6),
        .Q(Q[6]),
        .R(\lRegisters[0]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out__15_carry
       (.CI(1'b0),
        .CO({p_0_out__15_carry_n_0,p_0_out__15_carry_n_1,p_0_out__15_carry_n_2,p_0_out__15_carry_n_3}),
        .CYINIT(\lRxFifoCounter_reg[6]_0 [0]),
        .DI({\lRxFifoCounter_reg[6]_0 [3:1],p_0_out__15_carry_i_1_n_0}),
        .O({p_0_out__15_carry_n_4,p_0_out__15_carry_n_5,p_0_out__15_carry_n_6,p_0_out__15_carry_n_7}),
        .S({p_0_out__15_carry_i_2_n_0,p_0_out__15_carry_i_3_n_0,p_0_out__15_carry_i_4_n_0,InstRxFifoWrEnHandshake_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out__15_carry__0
       (.CI(p_0_out__15_carry_n_0),
        .CO({NLW_p_0_out__15_carry__0_CO_UNCONNECTED[3:1],p_0_out__15_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\lRxFifoCounter_reg[6]_0 [4]}),
        .O({NLW_p_0_out__15_carry__0_O_UNCONNECTED[3:2],p_0_out__15_carry__0_n_6,p_0_out__15_carry__0_n_7}),
        .S({1'b0,1'b0,p_0_out__15_carry__0_i_1_n_0,p_0_out__15_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__15_carry__0_i_1
       (.I0(\lRxFifoCounter_reg[6]_0 [5]),
        .I1(\lRxFifoCounter_reg[6]_0 [6]),
        .O(p_0_out__15_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__15_carry__0_i_2
       (.I0(\lRxFifoCounter_reg[6]_0 [4]),
        .I1(\lRxFifoCounter_reg[6]_0 [5]),
        .O(p_0_out__15_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out__15_carry_i_1
       (.I0(\lRxFifoCounter_reg[6]_0 [1]),
        .O(p_0_out__15_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__15_carry_i_2
       (.I0(\lRxFifoCounter_reg[6]_0 [3]),
        .I1(\lRxFifoCounter_reg[6]_0 [4]),
        .O(p_0_out__15_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__15_carry_i_3
       (.I0(\lRxFifoCounter_reg[6]_0 [2]),
        .I1(\lRxFifoCounter_reg[6]_0 [3]),
        .O(p_0_out__15_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__15_carry_i_4
       (.I0(\lRxFifoCounter_reg[6]_0 [1]),
        .I1(\lRxFifoCounter_reg[6]_0 [2]),
        .O(p_0_out__15_carry_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry
       (.CI(1'b0),
        .CO({p_0_out_carry_n_0,p_0_out_carry_n_1,p_0_out_carry_n_2,p_0_out_carry_n_3}),
        .CYINIT(Q[0]),
        .DI({Q[3:1],p_0_out_carry_i_1_n_0}),
        .O({p_0_out_carry_n_4,p_0_out_carry_n_5,p_0_out_carry_n_6,p_0_out_carry_n_7}),
        .S({p_0_out_carry_i_2_n_0,p_0_out_carry_i_3_n_0,p_0_out_carry_i_4_n_0,InstTxFifoRdEnHandshake_n_2}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__0
       (.CI(p_0_out_carry_n_0),
        .CO({NLW_p_0_out_carry__0_CO_UNCONNECTED[3:1],p_0_out_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[4]}),
        .O({NLW_p_0_out_carry__0_O_UNCONNECTED[3:2],p_0_out_carry__0_n_6,p_0_out_carry__0_n_7}),
        .S({1'b0,1'b0,p_0_out_carry__0_i_1_n_0,p_0_out_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_1
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(p_0_out_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_2
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(p_0_out_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out_carry_i_1
       (.I0(Q[1]),
        .O(p_0_out_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_2
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(p_0_out_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_3
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(p_0_out_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_4
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(p_0_out_carry_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h08)) 
    sPushTxFifoEmpty0
       (.I0(iRdy),
        .I1(sSetPushTxFifoEmpty),
        .I2(sPushTxFifoEmpty),
        .O(sPushTxFifoEmpty0__0));
  FDRE sPushTxFifoEmpty_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sPushTxFifoEmpty0__0),
        .Q(sPushTxFifoEmpty),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h6F66)) 
    sSetPushTxFifoEmpty_i_1
       (.I0(sTxFifoEmptyR),
        .I1(sTxFifoEmpty),
        .I2(sPushTxFifoEmpty),
        .I3(sSetPushTxFifoEmpty),
        .O(sSetPushTxFifoEmpty_i_1_n_0));
  FDRE sSetPushTxFifoEmpty_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sSetPushTxFifoEmpty_i_1_n_0),
        .Q(sSetPushTxFifoEmpty),
        .R(SR));
  FDRE sTxFifoEmptyR_reg
       (.C(SysClk),
        .CE(1'b1),
        .D(sTxFifoEmpty),
        .Q(sTxFifoEmptyR),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync
   (out,
    \oSyncStages_reg[1]_0 ,
    oValid_reg,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  output \oSyncStages_reg[1]_0 ;
  input oValid_reg;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire oValid_reg;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__6
       (.I0(oSyncStages[1]),
        .I1(oValid_reg),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_108
   (out,
    E,
    \oData_reg[0] ,
    AxiStreamClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input AxiStreamClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]D;
  wire [0:0]E;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__4
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_109
   (iRdy0,
    D,
    out,
    sOutAddrCntStartPush,
    SysClk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input sOutAddrCntStartPush;
  input SysClk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire sOutAddrCntStartPush;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__1
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(sOutAddrCntStartPush),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_112
   (out,
    \iData_int_reg[0] ,
    \oSyncStages_reg[1]_0 ,
    \oData_reg[0] ,
    \oData_reg[0]_0 ,
    \oData_reg[0]_1 ,
    AxiStreamClk,
    AR,
    D);
  output [0:0]out;
  output \iData_int_reg[0] ;
  output \oSyncStages_reg[1]_0 ;
  input \oData_reg[0] ;
  input \oData_reg[0]_0 ;
  input \oData_reg[0]_1 ;
  input AxiStreamClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]D;
  wire \iData_int_reg[0] ;
  wire \oData_reg[0] ;
  wire \oData_reg[0]_0 ;
  wire \oData_reg[0]_1 ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;

  assign out[0] = oSyncStages[1];
  LUT4 #(
    .INIT(16'hEB28)) 
    \oData[0]_i_1__0 
       (.I0(\oData_reg[0] ),
        .I1(oSyncStages[1]),
        .I2(\oData_reg[0]_0 ),
        .I3(\oData_reg[0]_1 ),
        .O(\iData_int_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__3
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0]_0 ),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_113
   (iRdy0,
    D,
    out,
    sOutAddrCntEnPush,
    SysClk,
    \oSyncStages_reg[1]_0 ,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input sOutAddrCntEnPush;
  input SysClk;
  input \oSyncStages_reg[1]_0 ;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]D;
  wire SysClk;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire \oSyncStages_reg[1]_0 ;
  wire [0:0]out;
  wire sOutAddrCntEnPush;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__3
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(sOutAddrCntEnPush),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_116
   (out,
    oPushTChanged,
    oPushT_q,
    AxiStreamClk,
    AR,
    D);
  output [0:0]out;
  output oPushTChanged;
  input oPushT_q;
  input AxiStreamClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]D;
  wire oPushTChanged;
  wire oPushT_q;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1
       (.I0(oSyncStages[1]),
        .I1(oPushT_q),
        .O(oPushTChanged));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_117
   (iRdy0,
    D,
    out,
    sBufferFull,
    SysClk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input sBufferFull;
  input SysClk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire sBufferFull;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(sBufferFull),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_120
   (out,
    \oSyncStages_reg[1]_0 ,
    oValid_reg,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  output \oSyncStages_reg[1]_0 ;
  input oValid_reg;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire oValid_reg;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__2
       (.I0(oSyncStages[1]),
        .I1(oValid_reg),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_121
   (iRdy0,
    D,
    out,
    sSetStop,
    SysClk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input sSetStop;
  input SysClk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire sSetStop;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__2
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(sSetStop),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_124
   (out,
    \oSyncStages_reg[1]_0 ,
    oValid_reg,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  output \oSyncStages_reg[1]_0 ;
  input oValid_reg;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire oValid_reg;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__0
       (.I0(oSyncStages[1]),
        .I1(oValid_reg),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_125
   (iRdy0,
    D,
    out,
    iRdy_reg,
    AxiStreamClk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input iRdy_reg;
  input AxiStreamClk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]D;
  wire iRdy0;
  wire iRdy_reg;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__0
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(iRdy_reg),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_128
   (out,
    \iData_int_reg[0] ,
    \oSyncStages_reg[1]_0 ,
    \oData_reg[0] ,
    \oData_reg[0]_0 ,
    sBufEmpty,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output \iData_int_reg[0] ;
  output \oSyncStages_reg[1]_0 ;
  input \oData_reg[0] ;
  input \oData_reg[0]_0 ;
  input sBufEmpty;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  wire \iData_int_reg[0] ;
  wire \oData_reg[0] ;
  wire \oData_reg[0]_0 ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire sBufEmpty;

  assign out[0] = oSyncStages[1];
  LUT4 #(
    .INIT(16'hEB28)) 
    \oData[0]_i_1 
       (.I0(\oData_reg[0] ),
        .I1(oSyncStages[1]),
        .I2(\oData_reg[0]_0 ),
        .I3(sBufEmpty),
        .O(\iData_int_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__1
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0]_0 ),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_129
   (xsBufEmptyPush_reg,
    xsBufEmptyPush,
    D,
    out,
    AxiStreamClk,
    \oSyncStages_reg[1]_0 ,
    \oSyncStages_reg[0]_0 );
  output xsBufEmptyPush_reg;
  input xsBufEmptyPush;
  input [0:0]D;
  input [0:0]out;
  input AxiStreamClk;
  input \oSyncStages_reg[1]_0 ;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire AxiStreamClk;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire \oSyncStages_reg[1]_0 ;
  wire [0:0]out;
  wire xsBufEmptyPush;
  wire xsBufEmptyPush_reg;

  LUT4 #(
    .INIT(16'h0041)) 
    iRdy_i_1__19
       (.I0(xsBufEmptyPush),
        .I1(D),
        .I2(oSyncStages[1]),
        .I3(out),
        .O(xsBufEmptyPush_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_18
   (out,
    SysClk,
    AR,
    D);
  output [0:0]out;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_19
   (out,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_20
   (out,
    SysClk,
    \oSyncStages_reg[0]_0 ,
    D);
  output [0:0]out;
  input SysClk;
  input \oSyncStages_reg[0]_0 ;
  input [0:0]D;

  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[0]_0 ;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_23
   (out,
    \oSyncStages_reg[1]_0 ,
    oValid_reg,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  output \oSyncStages_reg[1]_0 ;
  input oValid_reg;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire oValid_reg;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__7
       (.I0(oSyncStages[1]),
        .I1(oValid_reg),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_24
   (SysClk,
    out,
    D);
  input SysClk;
  input out;
  input [0:0]D;

  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(out),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(out),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_27
   (out,
    oPushTChanged,
    oValid_reg,
    s00_axi_aclk,
    AR,
    D);
  output [0:0]out;
  output oPushTChanged;
  input oValid_reg;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire oPushTChanged;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire oValid_reg;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__5
       (.I0(oSyncStages[1]),
        .I1(oValid_reg),
        .O(oPushTChanged));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_28
   (SysClk,
    out,
    D);
  input SysClk;
  input out;
  input [0:0]D;

  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(out),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(out),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_36
   (out,
    E,
    oPushT_q,
    AxiStreamClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input oPushT_q;
  input AxiStreamClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]D;
  wire [0:0]E;
  wire oPushT_q;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__18
       (.I0(oSyncStages[1]),
        .I1(oPushT_q),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_37
   (iRdy0,
    D,
    out,
    lIpushTL,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input lIpushTL;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire iRdy0;
  wire lIpushTL;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__4
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(lIpushTL),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_40
   (out,
    SR,
    \oSyncStages_reg[1]_0 ,
    xsTvalidDisable_reg,
    AxiStreamClk,
    AR);
  output [0:0]out;
  output [0:0]SR;
  output \oSyncStages_reg[1]_0 ;
  input xsTvalidDisable_reg;
  input AxiStreamClk;
  input [0:0]AR;

  wire [0:0]AR;
  wire AxiStreamClk;
  wire [0:0]SR;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire xsTvalidDisable_reg;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \s_axis_s2mm_tdata[31]_i_1 
       (.I0(oSyncStages[1]),
        .O(SR));
  LUT2 #(
    .INIT(4'h2)) 
    xsTvalidDisable_i_3
       (.I0(oSyncStages[1]),
        .I1(xsTvalidDisable_reg),
        .O(\oSyncStages_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_41
   (sZmodControllerRst_n,
    sInitDone_n_0,
    SR,
    sInitDone_n,
    SysClk,
    AR);
  output sZmodControllerRst_n;
  output [0:0]sInitDone_n_0;
  output [0:0]SR;
  input sInitDone_n;
  input SysClk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]SR;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire sInitDone_n;
  wire [0:0]sInitDone_n_0;

  assign sZmodControllerRst_n = oSyncStages[1];
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_sCurrentState[3]_i_1 
       (.I0(sInitDone_n),
        .I1(oSyncStages[1]),
        .O(sInitDone_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \sRegisters[3][26]_i_1 
       (.I0(oSyncStages[1]),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_42
   (out,
    \iData_int_reg[0] ,
    \oData_reg[0] ,
    \oData_reg[0]_0 ,
    \oData_reg[0]_1 ,
    s00_axi_aclk,
    \oSyncStages_reg[1]_0 ,
    D);
  output [0:0]out;
  output \iData_int_reg[0] ;
  input \oData_reg[0] ;
  input \oData_reg[0]_0 ;
  input \oData_reg[0]_1 ;
  input s00_axi_aclk;
  input \oSyncStages_reg[1]_0 ;
  input [0:0]D;

  wire [0:0]D;
  wire \iData_int_reg[0] ;
  wire \oData_reg[0] ;
  wire \oData_reg[0]_0 ;
  wire \oData_reg[0]_1 ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[1]_0 ;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  LUT4 #(
    .INIT(16'hEB28)) 
    \oData[0]_i_1__1 
       (.I0(\oData_reg[0] ),
        .I1(oSyncStages[1]),
        .I2(\oData_reg[0]_0 ),
        .I3(\oData_reg[0]_1 ),
        .O(\iData_int_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[1]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_43
   (out,
    SysClk,
    \oSyncStages_reg[0]_0 ,
    D);
  output [0:0]out;
  input SysClk;
  input \oSyncStages_reg[0]_0 ;
  input [0:0]D;

  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[0]_0 ;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_46
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__13
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_47
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__14
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_50
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__12
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_51
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__13
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_54
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__11
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_55
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__12
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_58
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__10
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_59
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__11
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_62
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__9
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_63
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__10
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_66
   (out,
    SysClk,
    AR,
    D);
  output [0:0]out;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_67
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    \oSyncStages_reg[0]_0 ,
    \oSyncStages_reg[0]_1 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input \oSyncStages_reg[0]_0 ;
  input [0:0]\oSyncStages_reg[0]_1 ;

  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[0]_0 ;
  wire [0:0]\oSyncStages_reg[0]_1 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__9
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(\oSyncStages_reg[0]_1 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_70
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__8
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_71
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__8
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_74
   (out,
    E,
    \oData_reg[2] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[2] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[2] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__19
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[2] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_75
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__7
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_78
   (out,
    SysClk,
    AR,
    D);
  output [0:0]out;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_79
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    \oSyncStages_reg[0]_0 ,
    \oSyncStages_reg[0]_1 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input \oSyncStages_reg[0]_0 ;
  input [0:0]\oSyncStages_reg[0]_1 ;

  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[0]_0 ;
  wire [0:0]\oSyncStages_reg[0]_1 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__6
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(\oSyncStages_reg[0]_1 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_82
   (out,
    SysClk,
    AR,
    D);
  output [0:0]out;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_83
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    \oSyncStages_reg[0]_0 ,
    \oSyncStages_reg[0]_1 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input \oSyncStages_reg[0]_0 ;
  input [0:0]\oSyncStages_reg[0]_1 ;

  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire \oSyncStages_reg[0]_0 ;
  wire [0:0]\oSyncStages_reg[0]_1 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__18
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(\oSyncStages_reg[0]_1 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(\oSyncStages_reg[0]_0 ),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_86
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__16
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_87
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__17
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_90
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__15
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_91
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__16
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_94
   (out,
    E,
    \oData_reg[0] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[0] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[0] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__14
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_95
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__15
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_98
   (out,
    E,
    \oData_reg[1] ,
    SysClk,
    AR,
    D);
  output [0:0]out;
  output [0:0]E;
  input \oData_reg[1] ;
  input SysClk;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire SysClk;
  wire \oData_reg[1] ;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
  LUT2 #(
    .INIT(4'h6)) 
    oValid_i_1__17
       (.I0(oSyncStages[1]),
        .I1(\oData_reg[1] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync_99
   (iRdy0,
    D,
    out,
    Q,
    s00_axi_aclk,
    AR,
    \oSyncStages_reg[0]_0 );
  output iRdy0;
  input [0:0]D;
  input [0:0]out;
  input [0:0]Q;
  input s00_axi_aclk;
  input [0:0]AR;
  input [0:0]\oSyncStages_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]Q;
  wire iRdy0;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire [0:0]\oSyncStages_reg[0]_0 ;
  wire [0:0]out;
  wire s00_axi_aclk;

  LUT4 #(
    .INIT(16'h0009)) 
    iRdy_i_1__5
       (.I0(D),
        .I1(oSyncStages[1]),
        .I2(out),
        .I3(Q),
        .O(iRdy0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\oSyncStages_reg[0]_0 ),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(oSyncStages[0]),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_101
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_111
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_115
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_119
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_123
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_127
   (out,
    AxiStreamClk,
    AS);
  output [0:0]out;
  input AxiStreamClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire AxiStreamClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_131
   (out,
    AxiStreamClk,
    AS);
  output [0:0]out;
  input AxiStreamClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire AxiStreamClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(AxiStreamClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_22
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_26
   (SysClk,
    AS);
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_30
   (SysClk,
    AS);
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_39
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_45
   (out,
    SysClk,
    AS);
  output [0:0]out;
  input SysClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire SysClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(SysClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(SysClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_49
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_53
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_57
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_61
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_65
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_69
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_73
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_77
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_81
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_85
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_89
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_93
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module design_1_AXI_ZmodADC1410_1_0_SyncAsync__parameterized0_97
   (out,
    s00_axi_aclk,
    AS);
  output [0:0]out;
  input s00_axi_aclk;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) wire [1:0]oSyncStages;
  wire s00_axi_aclk;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* CHECK_LICENSE_TYPE = "TX_FIFO,fifo_generator_v13_2_4,{}" *) (* ORIG_REF_NAME = "TX_FIFO" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "fifo_generator_v13_2_4,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_TX_FIFO
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    almost_empty,
    valid,
    wr_data_count,
    wr_rst_busy,
    rd_rst_busy);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [23:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [23:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ ALMOST_EMPTY" *) output almost_empty;
  output valid;
  output [7:0]wr_data_count;
  output wr_rst_busy;
  output rd_rst_busy;

  wire almost_empty;
  wire almost_full;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [6:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [7:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "7" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "24" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "24" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "1" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "8" *) 
  (* C_RD_DEPTH = "128" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "7" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "8" *) 
  (* C_WR_DEPTH = "128" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "7" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4__parameterized1 U0
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[6:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[7:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__1
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__1 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__10
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__10 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__11
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__11 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__12
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__12 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__13
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__13 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__14
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__14 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__15
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__15 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__16
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__16 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__17
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__17 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__18
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__18 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__19
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__19 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__2
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__2 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__20
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__20 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__21
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__21 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__22
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__22 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__23
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__23 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__24
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__24 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__25
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__25 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__26
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__26 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__27
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__27 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__3
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__3 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__4
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__4 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__5
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__5 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__6
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__6 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__7
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__7 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__8
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__8 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_3,{}" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "blk_mem_gen_v8_4_3,Vivado 2019.1.3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_0__9
   (clka,
    ena,
    wea,
    addra,
    dina,
    clkb,
    enb,
    addrb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [13:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [0:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [13:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [0:0]doutb;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_douta_UNCONNECTED;
  wire [13:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [13:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "14" *) 
  (* C_ADDRB_WIDTH = "14" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "1" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "16384" *) 
  (* C_READ_DEPTH_B = "16384" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "NONE" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "16384" *) 
  (* C_WRITE_DEPTH_B = "16384" *) 
  (* C_WRITE_MODE_A = "NO_CHANGE" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__9 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb(1'b0),
        .douta(NLW_U0_douta_UNCONNECTED[0]),
        .doutb(doutb),
        .eccpipece(1'b0),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[13:0]),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[13:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__4
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__5
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__6
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__4
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__5
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__6
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_134
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_135 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_139
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_140 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_144
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_145 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_149
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_150 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_154
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_155 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_159
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_160 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_164
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_165 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_169
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_170 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_174
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_175 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_179
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_180 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_184
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_185 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_189
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_190 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_194
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_195 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_199
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_200 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_204
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_205 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_209
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_210 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_214
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_215 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_219
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_220 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_224
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_225 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_229
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_230 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_234
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_235 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_239
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_240 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_244
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_245 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_249
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_250 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_254
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_255 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_259
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_260 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_264
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_265 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr__parameterized0
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [7:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [7:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width__parameterized0 \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr__parameterized1
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [23:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [23:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width__parameterized1 \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_135
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_136 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_140
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_141 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_145
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_146 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_150
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_151 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_155
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_156 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_160
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_161 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_165
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_166 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_170
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_171 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_175
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_176 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_180
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_181 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_185
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_186 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_190
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_191 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_195
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_196 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_200
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_201 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_205
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_206 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_210
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_211 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_215
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_216 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_220
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_221 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_225
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_226 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_230
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_231 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_235
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_236 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_240
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_241 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_245
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_246 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_250
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_251 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_255
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_256 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_260
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_261 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width_265
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_266 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width__parameterized0
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [7:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire [0:0]SR;
  wire [7:0]din;
  wire out;
  wire p_1_out;
  wire p_3_out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(p_3_out),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(p_3_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .S(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(p_1_out),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/RECEIVE_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rd_clk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .Q(Q),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_width__parameterized1
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [23:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire [0:0]SR;
  wire [23:0]din;
  wire out;
  wire p_1_out;
  wire p_3_out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(p_3_out),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(p_3_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .S(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(p_1_out),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "\U0/SPI_Adapter_inst/TRANSMIT_FIFO /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rd_clk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .Q(Q),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_136
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_141
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_146
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_151
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_156
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_161
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_166
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_171
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_176
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_181
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_186
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_191
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_196
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_201
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_206
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_211
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_216
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_221
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_226
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_231
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_236
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_241
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_246
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_251
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_256
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_261
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper_266
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:1]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(1),
    .READ_WIDTH_B(1),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(1),
    .WRITE_WIDTH_B(1)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR(addra),
        .ADDRBWRADDR(addrb),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:1],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper__parameterized0
   (D,
    rd_clk,
    wr_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din,
    E,
    ENA_dly_D,
    out,
    wr_en);
  output [7:0]D;
  input rd_clk;
  input wr_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [7:0]din;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_12 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_13 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_20 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_21 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_28 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_29 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_4 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_5 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire [6:0]Q;
  wire [7:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[3:2],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[1:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[5:4]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_4 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_5 ,D[3:2],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_11 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_12 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_13 ,D[1:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_20 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_21 ,D[7:6],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_28 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_29 ,D[5:4]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(ram_rstram_b),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(wr_en),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_prim_wrapper__parameterized1
   (D,
    rd_clk,
    wr_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din,
    E,
    ENA_dly_D,
    out,
    wr_en);
  output [23:0]D;
  input rd_clk;
  input wr_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [23:0]din;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire [6:0]Q;
  wire [23:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI({1'b0,1'b0,din[11:6],1'b0,1'b0,din[5:0]}),
        .DIBDI({1'b0,1'b0,din[23:18],1'b0,1'b0,din[17:12]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,D[11:6],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ,D[5:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,D[23:18],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,D[17:12]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(ram_rstram_b),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(wr_en),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_133
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_134 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_138
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_139 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_143
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_144 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_148
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_149 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_153
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_154 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_158
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_159 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_163
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_164 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_168
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_169 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_173
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_174 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_178
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_179 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_183
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_184 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_188
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_189 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_193
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_194 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_198
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_199 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_203
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_204 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_208
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_209 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_213
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_214 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_218
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_219 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_223
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_224 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_228
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_229 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_233
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_234 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_238
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_239 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_243
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_244 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_248
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_249 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_253
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_254 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_258
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_259 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_263
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr_264 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top__parameterized0
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [7:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [7:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr__parameterized0 \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top__parameterized1
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [23:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [23:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_generic_cstr__parameterized1 \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__1
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_262 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__10
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_217 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__11
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_212 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__12
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_207 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__13
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_202 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__14
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_197 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__15
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_192 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__16
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_187 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__17
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_182 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__18
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_177 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__19
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_172 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__2
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_257 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__20
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_167 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__21
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_162 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__22
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_157 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__23
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_152 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__24
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_147 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__25
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_142 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__26
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_137 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__27
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_132 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__3
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_252 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__4
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_247 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__5
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_242 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__6
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_237 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__7
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_232 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__8
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_227 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "14" *) (* C_ADDRB_WIDTH = "14" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.25395 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "16384" *) (* C_READ_DEPTH_B = "16384" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "1" *) (* C_READ_WIDTH_B = "1" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "NONE" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "16384" *) 
(* C_WRITE_DEPTH_B = "16384" *) (* C_WRITE_MODE_A = "NO_CHANGE" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "1" *) (* C_WRITE_WIDTH_B = "1" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) (* downgradeipidentifiedwarnings = "yes" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__9
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [13:0]addra;
  input [0:0]dina;
  output [0:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [13:0]addrb;
  input [0:0]dinb;
  output [0:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [13:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [0:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [13:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  assign dbiterr = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[13] = \<const0> ;
  assign rdaddrecc[12] = \<const0> ;
  assign rdaddrecc[11] = \<const0> ;
  assign rdaddrecc[10] = \<const0> ;
  assign rdaddrecc[9] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign rsta_busy = \<const0> ;
  assign rstb_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[13] = \<const0> ;
  assign s_axi_rdaddrecc[12] = \<const0> ;
  assign s_axi_rdaddrecc[11] = \<const0> ;
  assign s_axi_rdaddrecc[10] = \<const0> ;
  assign s_axi_rdaddrecc[9] = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
  GND GND
       (.G(\<const0> ));
  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_222 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__parameterized1
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [7:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [7:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth__parameterized0 inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__parameterized3
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [23:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [23:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth__parameterized1 inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_132
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_133 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_137
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_138 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_142
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_143 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_147
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_148 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_152
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_153 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_157
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_158 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_162
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_163 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_167
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_168 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_172
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_173 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_177
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_178 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_182
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_183 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_187
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_188 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_192
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_193 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_197
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_198 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_202
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_203 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_207
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_208 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_212
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_213 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_217
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_218 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_222
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_223 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_227
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_228 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_232
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_233 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_237
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_238 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_242
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_243 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_247
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_248 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_252
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_253 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_257
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_258 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth_262
   (doutb,
    clka,
    clkb,
    ena,
    enb,
    addra,
    addrb,
    dina,
    wea);
  output [0:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input [13:0]addra;
  input [13:0]addrb;
  input [0:0]dina;
  input [0:0]wea;

  wire [13:0]addra;
  wire [13:0]addrb;
  wire clka;
  wire clkb;
  wire [0:0]dina;
  wire [0:0]doutb;
  wire ena;
  wire enb;
  wire [0:0]wea;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top_263 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth__parameterized0
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [7:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [7:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [7:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top__parameterized0 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_3_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3_synth__parameterized1
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en);
  output [23:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [23:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [23:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_top__parameterized1 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module design_1_AXI_ZmodADC1410_1_0_clk_x_pntrs
   (ram_full_fb_i_reg,
    comp2,
    RD_PNTR_WR,
    comp3,
    WR_PNTR_RD,
    FULL_FB,
    wr_en,
    out,
    Q,
    \gaf.ram_almost_full_i_i_3_0 ,
    \gaf.ram_almost_full_i_i_2_0 ,
    wr_clk,
    \src_gray_ff_reg[6] ,
    rd_clk,
    \src_gray_ff_reg[6]_0 );
  output ram_full_fb_i_reg;
  output comp2;
  output [6:0]RD_PNTR_WR;
  output comp3;
  output [6:0]WR_PNTR_RD;
  input FULL_FB;
  input wr_en;
  input out;
  input [6:0]Q;
  input [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  input [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  input wr_clk;
  input [6:0]\src_gray_ff_reg[6] ;
  input rd_clk;
  input [6:0]\src_gray_ff_reg[6]_0 ;

  wire FULL_FB;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire [6:0]WR_PNTR_RD;
  wire comp2;
  wire comp3;
  wire [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  wire [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  wire \gaf.ram_almost_full_i_i_4_n_0 ;
  wire \gaf.ram_almost_full_i_i_5_n_0 ;
  wire \gaf.ram_almost_full_i_i_6_n_0 ;
  wire \gaf.ram_almost_full_i_i_7_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire ram_full_i_i_3_n_0;
  wire ram_full_i_i_4_n_0;
  wire rd_clk;
  wire [6:0]\src_gray_ff_reg[6] ;
  wire [6:0]\src_gray_ff_reg[6]_0 ;
  wire wr_clk;
  wire wr_en;

  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_2 
       (.I0(\gaf.ram_almost_full_i_i_4_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_5_n_0 ),
        .O(comp3));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_3 
       (.I0(\gaf.ram_almost_full_i_i_6_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_7_n_0 ),
        .O(comp2));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_4 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_2_0 [3]),
        .O(\gaf.ram_almost_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_5 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [5]),
        .I3(RD_PNTR_WR[5]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [4]),
        .I5(RD_PNTR_WR[4]),
        .O(\gaf.ram_almost_full_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_6 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_3_0 [3]),
        .O(\gaf.ram_almost_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_7 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [5]),
        .I3(RD_PNTR_WR[5]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [4]),
        .I5(RD_PNTR_WR[4]),
        .O(\gaf.ram_almost_full_i_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(FULL_FB),
        .I2(wr_en),
        .I3(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ),
        .I4(out),
        .O(ram_full_fb_i_reg));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_2
       (.I0(ram_full_i_i_3_n_0),
        .I1(RD_PNTR_WR[0]),
        .I2(Q[0]),
        .I3(RD_PNTR_WR[1]),
        .I4(Q[1]),
        .I5(ram_full_i_i_4_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_3
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(Q[3]),
        .O(ram_full_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_full_i_i_4
       (.I0(RD_PNTR_WR[6]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(RD_PNTR_WR[5]),
        .I4(Q[4]),
        .I5(RD_PNTR_WR[4]),
        .O(ram_full_i_i_4_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[6]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__6 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[6] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module design_1_AXI_ZmodADC1410_1_0_clk_x_pntrs__xdcDup__1
   (S,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[6] ,
    ram_full_fb_i_reg,
    comp2,
    comp3,
    comp0,
    plusOp,
    Q,
    out,
    wr_en,
    ram_full_fb_i_reg_0,
    ram_full_i_i_2_0,
    \gaf.ram_almost_full_i_i_3_0 ,
    \gaf.ram_almost_full_i_i_2_0 ,
    diff_wr_rd__0,
    wr_clk,
    \src_gray_ff_reg[6] ,
    rd_clk);
  output [3:0]S;
  output [6:0]WR_PNTR_RD;
  output [2:0]\dest_out_bin_ff_reg[6] ;
  output ram_full_fb_i_reg;
  output comp2;
  output comp3;
  output comp0;
  output [6:0]plusOp;
  input [6:0]Q;
  input out;
  input wr_en;
  input ram_full_fb_i_reg_0;
  input [6:0]ram_full_i_i_2_0;
  input [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  input [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  input [5:0]diff_wr_rd__0;
  input wr_clk;
  input [6:0]\src_gray_ff_reg[6] ;
  input rd_clk;

  wire [6:0]Q;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire comp0;
  wire comp2;
  wire comp3;
  wire [2:0]\dest_out_bin_ff_reg[6] ;
  wire [5:0]diff_wr_rd__0;
  wire [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  wire [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  wire \gaf.ram_almost_full_i_i_4_n_0 ;
  wire \gaf.ram_almost_full_i_i_5_n_0 ;
  wire \gaf.ram_almost_full_i_i_6_n_0 ;
  wire \gaf.ram_almost_full_i_i_7_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ;
  wire out;
  wire [6:0]p_25_out;
  wire [6:0]plusOp;
  wire ram_empty_i_i_4_n_0;
  wire ram_empty_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [6:0]ram_full_i_i_2_0;
  wire ram_full_i_i_3_n_0;
  wire ram_full_i_i_4_n_0;
  wire rd_clk;
  wire [6:0]\src_gray_ff_reg[6] ;
  wire wr_clk;
  wire wr_en;

  LUT1 #(
    .INIT(2'h1)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .I1(diff_wr_rd__0[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[0]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[0]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[0]),
        .I3(diff_wr_rd__0[2]),
        .I4(diff_wr_rd__0[4]),
        .I5(diff_wr_rd__0[5]),
        .O(plusOp[5]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_2 
       (.I0(diff_wr_rd__0[5]),
        .I1(diff_wr_rd__0[3]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[0]),
        .I4(diff_wr_rd__0[2]),
        .I5(diff_wr_rd__0[4]),
        .O(plusOp[6]));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_2 
       (.I0(\gaf.ram_almost_full_i_i_4_n_0 ),
        .I1(p_25_out[0]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [0]),
        .I3(p_25_out[1]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_5_n_0 ),
        .O(comp3));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_3 
       (.I0(\gaf.ram_almost_full_i_i_6_n_0 ),
        .I1(p_25_out[0]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [0]),
        .I3(p_25_out[1]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_7_n_0 ),
        .O(comp2));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_4 
       (.I0(p_25_out[2]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [2]),
        .I2(p_25_out[3]),
        .I3(\gaf.ram_almost_full_i_i_2_0 [3]),
        .O(\gaf.ram_almost_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_5 
       (.I0(p_25_out[6]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [5]),
        .I3(p_25_out[5]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [4]),
        .I5(p_25_out[4]),
        .O(\gaf.ram_almost_full_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_6 
       (.I0(p_25_out[2]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [2]),
        .I2(p_25_out[3]),
        .I3(\gaf.ram_almost_full_i_i_3_0 [3]),
        .O(\gaf.ram_almost_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_7 
       (.I0(p_25_out[6]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [5]),
        .I3(p_25_out[5]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [4]),
        .I5(p_25_out[4]),
        .O(\gaf.ram_almost_full_i_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\dest_out_bin_ff_reg[6] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\dest_out_bin_ff_reg[6] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\dest_out_bin_ff_reg[6] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(S[0]));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_2
       (.I0(ram_empty_i_i_4_n_0),
        .I1(WR_PNTR_RD[0]),
        .I2(Q[0]),
        .I3(WR_PNTR_RD[1]),
        .I4(Q[1]),
        .I5(ram_empty_i_i_5_n_0),
        .O(comp0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(ram_empty_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_5
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(WR_PNTR_RD[5]),
        .I4(Q[4]),
        .I5(WR_PNTR_RD[4]),
        .O(ram_empty_i_i_5_n_0));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_2
       (.I0(ram_full_i_i_3_n_0),
        .I1(p_25_out[0]),
        .I2(ram_full_i_i_2_0[0]),
        .I3(p_25_out[1]),
        .I4(ram_full_i_i_2_0[1]),
        .I5(ram_full_i_i_4_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_3
       (.I0(p_25_out[2]),
        .I1(ram_full_i_i_2_0[2]),
        .I2(p_25_out[3]),
        .I3(ram_full_i_i_2_0[3]),
        .O(ram_full_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_full_i_i_4
       (.I0(p_25_out[6]),
        .I1(ram_full_i_i_2_0[6]),
        .I2(ram_full_i_i_2_0[5]),
        .I3(p_25_out[5]),
        .I4(ram_full_i_i_2_0[4]),
        .I5(p_25_out[4]),
        .O(ram_full_i_i_4_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__5 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(p_25_out),
        .src_clk(rd_clk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_gray__4 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[6] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_ramfifo
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    rd_data_count,
    almost_full,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [7:0]dout;
  output [7:0]rd_data_count;
  output almost_full;
  input wr_clk;
  input rd_clk;
  input rst;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [6:1]diff_wr_rd__0;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_1 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_11 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_2 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire \gras.rsts/comp0 ;
  wire \gwas.wsts/comp2 ;
  wire \gwas.wsts/comp3 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire [6:0]p_0_out;
  wire [6:0]p_13_out;
  wire [6:0]p_14_out;
  wire p_20_out;
  wire [6:0]p_24_out;
  wire p_6_out;
  wire [7:1]plusOp;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire [6:0]wr_pntr_plus2;
  wire [6:0]wr_pntr_plus3;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_clk_x_pntrs__xdcDup__1 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(p_0_out),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .WR_PNTR_RD(p_24_out),
        .comp0(\gras.rsts/comp0 ),
        .comp2(\gwas.wsts/comp2 ),
        .comp3(\gwas.wsts/comp3 ),
        .\dest_out_bin_ff_reg[6] ({\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 }),
        .diff_wr_rd__0(diff_wr_rd__0),
        .\gaf.ram_almost_full_i_i_2_0 (wr_pntr_plus3),
        .\gaf.ram_almost_full_i_i_3_0 (wr_pntr_plus2),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .plusOp(plusOp),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_14 ),
        .ram_full_fb_i_reg_0(rst_full_gen_i),
        .ram_full_i_i_2_0(p_14_out),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[6] (p_13_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.E(p_6_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(p_0_out),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .WR_PNTR_RD(p_24_out),
        .almost_empty(almost_empty),
        .comp0(\gras.rsts/comp0 ),
        .diff_wr_rd__0(diff_wr_rd__0),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_11 ,\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 }),
        .plusOp(plusOp),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .valid(valid));
  design_1_AXI_ZmodADC1410_1_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_20_out),
        .Q(wr_pntr_plus3),
        .almost_full(almost_full),
        .comp2(\gwas.wsts/comp2 ),
        .comp3(\gwas.wsts/comp3 ),
        .full(full),
        .\gaf.ram_almost_full_i_reg (rst_full_gen_i),
        .\gic0.gc1.count_d1_reg[6] (wr_pntr_plus2),
        .\gic0.gc1.count_d2_reg[6] (p_14_out),
        .\gic0.gc1.count_d3_reg[0] (rstblk_n_0),
        .\gic0.gc1.count_d3_reg[6] (p_13_out),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_14 ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_13_out),
        .E(p_20_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .Q(p_0_out),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[7]_0 (p_6_out),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_reset_blk_ramfifo__xdcDup__1 rstblk
       (.POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_ramfifo__parameterized0
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [23:0]dout;
  output almost_full;
  output [7:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [23:0]din;
  input wr_en;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire \gwas.wsts/comp2 ;
  wire \gwas.wsts/comp3 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire [6:0]p_0_out;
  wire [6:0]p_13_out;
  wire [6:0]p_14_out;
  wire p_20_out;
  wire [6:0]p_24_out;
  wire [6:0]p_25_out;
  wire p_6_out;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [6:0]wr_pntr_plus2;
  wire [6:0]wr_pntr_plus3;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.FULL_FB(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .Q(p_14_out),
        .RD_PNTR_WR(p_25_out),
        .WR_PNTR_RD(p_24_out),
        .comp2(\gwas.wsts/comp2 ),
        .comp3(\gwas.wsts/comp3 ),
        .\gaf.ram_almost_full_i_i_2_0 (wr_pntr_plus3),
        .\gaf.ram_almost_full_i_i_3_0 (wr_pntr_plus2),
        .out(rst_full_gen_i),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[6] (p_13_out),
        .\src_gray_ff_reg[6]_0 (p_0_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_rd_logic__parameterized0 \gntv_or_sync_fifo.gl0.rd 
       (.E(p_6_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(p_0_out),
        .SS(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .WR_PNTR_RD(p_24_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .valid(valid));
  design_1_AXI_ZmodADC1410_1_0_wr_logic__parameterized0 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .almost_full(almost_full),
        .comp2(\gwas.wsts/comp2 ),
        .comp3(\gwas.wsts/comp3 ),
        .full(full),
        .\gaf.ram_almost_full_i_reg (rst_full_gen_i),
        .\gic0.gc1.count_d1_reg[6] (wr_pntr_plus2),
        .\gic0.gc1.count_d2_reg[1] (rstblk_n_0),
        .\gic0.gc1.count_d2_reg[6] (p_14_out),
        .\gic0.gc1.count_reg[6] (wr_pntr_plus3),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_13_out),
        .E(p_20_out),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .Q(p_0_out),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[23]_0 (p_6_out),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_reset_blk_ramfifo rstblk
       (.POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_top
   (SR,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    rd_data_count,
    almost_full,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output [0:0]SR;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [7:0]dout;
  output [7:0]rd_data_count;
  output almost_full;
  input wr_clk;
  input rd_clk;
  input rst;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]SR;
  wire almost_empty;
  wire almost_full;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_fifo_generator_ramfifo \grf.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (SR),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_top__parameterized0
   (SS,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output [0:0]SS;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [23:0]dout;
  output almost_full;
  output [7:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [23:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]SS;
  wire almost_empty;
  wire almost_full;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (SS),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "7" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "1" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "8" *) 
(* C_RD_DEPTH = "128" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "7" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "8" *) 
(* C_WR_DEPTH = "128" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "7" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_4" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [6:0]prog_empty_thresh;
  input [6:0]prog_empty_thresh_assert;
  input [6:0]prog_empty_thresh_negate;
  input [6:0]prog_full_thresh;
  input [6:0]prog_full_thresh_assert;
  input [6:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [6:0]data_count;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_empty;
  wire almost_full;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4_synth inst_fifo_gen
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "7" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "24" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "24" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "1" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "8" *) 
(* C_RD_DEPTH = "128" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "7" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "8" *) 
(* C_WR_DEPTH = "128" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "7" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_4" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4__parameterized1
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [23:0]din;
  input wr_en;
  input rd_en;
  input [6:0]prog_empty_thresh;
  input [6:0]prog_empty_thresh_assert;
  input [6:0]prog_empty_thresh_negate;
  input [6:0]prog_full_thresh;
  input [6:0]prog_full_thresh_assert;
  input [6:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [23:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [6:0]data_count;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_empty;
  wire almost_full;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4_synth__parameterized0 inst_fifo_gen
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_4_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4_synth
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    rd_data_count,
    almost_full,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [7:0]dout;
  output [7:0]rd_data_count;
  output almost_full;
  input wr_clk;
  input rd_clk;
  input rst;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_fifo_generator_top \gconvfifo.rf 
       (.SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_4_synth" *) 
module design_1_AXI_ZmodADC1410_1_0_fifo_generator_v13_2_4_synth__parameterized0
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [23:0]dout;
  output almost_full;
  output [7:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [23:0]din;
  input wr_en;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [23:0]din;
  wire [23:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  design_1_AXI_ZmodADC1410_1_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.SS(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module design_1_AXI_ZmodADC1410_1_0_memory
   (POR_B,
    ENB_dly_D,
    dout,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en,
    \goreg_bm.dout_i_reg[7]_0 );
  output POR_B;
  output ENB_dly_D;
  output [7:0]dout;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;
  input [0:0]\goreg_bm.dout_i_reg[7]_0 ;

  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[7]_0 ;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__parameterized1 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[7]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module design_1_AXI_ZmodADC1410_1_0_memory__parameterized0
   (POR_B,
    ENB_dly_D,
    dout,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    E,
    SR,
    out,
    wr_en,
    \goreg_bm.dout_i_reg[23]_0 );
  output POR_B;
  output ENB_dly_D;
  output [23:0]dout;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [23:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;
  input [0:0]\goreg_bm.dout_i_reg[23]_0 ;

  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [23:0]din;
  wire [23:0]dout;
  wire [23:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[23]_0 ;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_blk_mem_gen_v8_4_3__parameterized3 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[23]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_bin_cntr
   (ram_empty_fb_i0__1,
    Q,
    out,
    rd_en,
    ram_empty_i_reg,
    WR_PNTR_RD,
    SS,
    E,
    rd_clk);
  output ram_empty_fb_i0__1;
  output [6:0]Q;
  input out;
  input rd_en;
  input [1:0]ram_empty_i_reg;
  input [6:0]WR_PNTR_RD;
  input [0:0]SS;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SS;
  wire [6:0]WR_PNTR_RD;
  wire \gc1.count[6]_i_2_n_0 ;
  wire \gras.rsts/comp0 ;
  wire \gras.rsts/comp1 ;
  wire out;
  wire [6:0]plusOp__1;
  wire ram_empty_fb_i0__1;
  wire ram_empty_i_i_4_n_0;
  wire ram_empty_i_i_5_n_0;
  wire ram_empty_i_i_6_n_0;
  wire ram_empty_i_i_7_n_0;
  wire [1:0]ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  wire [6:0]rd_pntr_plus1;
  wire [6:0]rd_pntr_plus2;

  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp__1[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[6]_i_2_n_0 ),
        .I1(rd_pntr_plus2[5]),
        .I2(rd_pntr_plus2[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gc1.count[6]_i_2 
       (.I0(rd_pntr_plus2[4]),
        .I1(rd_pntr_plus2[2]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[1]),
        .I4(rd_pntr_plus2[3]),
        .O(\gc1.count[6]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .Q(rd_pntr_plus1[0]),
        .S(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[1]),
        .Q(rd_pntr_plus1[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[2]),
        .Q(rd_pntr_plus1[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[3]),
        .Q(rd_pntr_plus1[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[4]),
        .Q(rd_pntr_plus1[4]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[5]),
        .Q(rd_pntr_plus1[5]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[6]),
        .Q(rd_pntr_plus1[6]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus2[0]),
        .R(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus2[1]),
        .S(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus2[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus2[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus2[4]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus2[5]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus2[6]),
        .R(SS));
  LUT6 #(
    .INIT(64'hBABBBBBBAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(\gras.rsts/comp0 ),
        .I1(out),
        .I2(rd_en),
        .I3(ram_empty_i_reg[1]),
        .I4(ram_empty_i_reg[0]),
        .I5(\gras.rsts/comp1 ),
        .O(ram_empty_fb_i0__1));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_2
       (.I0(ram_empty_i_i_4_n_0),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(Q[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_5_n_0),
        .O(\gras.rsts/comp0 ));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_3
       (.I0(ram_empty_i_i_6_n_0),
        .I1(rd_pntr_plus1[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_7_n_0),
        .O(\gras.rsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(Q[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(Q[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_5
       (.I0(Q[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(Q[4]),
        .O(ram_empty_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_6
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_6_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_7
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(rd_pntr_plus1[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(rd_pntr_plus1[4]),
        .O(ram_empty_i_i_7_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_bin_cntr_35
   (comp1,
    Q,
    WR_PNTR_RD,
    SR,
    E,
    rd_clk);
  output comp1;
  output [6:0]Q;
  input [6:0]WR_PNTR_RD;
  input [0:0]SR;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [6:0]WR_PNTR_RD;
  wire comp1;
  wire \gc1.count[6]_i_2_n_0 ;
  wire [6:0]plusOp__1;
  wire ram_empty_i_i_6_n_0;
  wire ram_empty_i_i_7_n_0;
  wire rd_clk;
  wire [6:0]rd_pntr_plus1;
  wire [6:0]rd_pntr_plus2;

  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp__1[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[6]_i_2_n_0 ),
        .I1(rd_pntr_plus2[5]),
        .I2(rd_pntr_plus2[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gc1.count[6]_i_2 
       (.I0(rd_pntr_plus2[4]),
        .I1(rd_pntr_plus2[2]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[1]),
        .I4(rd_pntr_plus2[3]),
        .O(\gc1.count[6]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .Q(rd_pntr_plus1[0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[1]),
        .Q(rd_pntr_plus1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[2]),
        .Q(rd_pntr_plus1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[3]),
        .Q(rd_pntr_plus1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[4]),
        .Q(rd_pntr_plus1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[5]),
        .Q(rd_pntr_plus1[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[6]),
        .Q(rd_pntr_plus1[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus2[0]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus2[1]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus2[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus2[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus2[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus2[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus2[6]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_3
       (.I0(ram_empty_i_i_6_n_0),
        .I1(rd_pntr_plus1[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_7_n_0),
        .O(comp1));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_6
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_6_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_7
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(rd_pntr_plus1[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(rd_pntr_plus1[4]),
        .O(ram_empty_i_i_7_n_0));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_dc_fwft_ext_as
   (rd_data_count,
    diff_wr_rd__0,
    O,
    rd_dc_i,
    plusOp,
    rd_clk,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[0]_0 );
  output [7:0]rd_data_count;
  output [5:0]diff_wr_rd__0;
  output [0:0]O;
  input [0:0]rd_dc_i;
  input [6:0]plusOp;
  input rd_clk;
  input [5:0]WR_PNTR_RD;
  input [3:0]S;
  input [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;

  wire [0:0]O;
  wire [3:0]S;
  wire [5:0]WR_PNTR_RD;
  wire [5:0]diff_wr_rd__0;
  wire \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;
  wire [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire [6:0]plusOp;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire [0:0]rd_dc_i;
  wire [3:2]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__0_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[0]_0 ),
        .Q(rd_data_count[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(rd_data_count[1]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(rd_data_count[2]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(rd_data_count[3]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(rd_data_count[4]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(rd_data_count[5]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(rd_data_count[6]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(rd_data_count[7]),
        .R(rd_dc_i));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(WR_PNTR_RD[3:0]),
        .O({diff_wr_rd__0[2:0],O}),
        .S(S));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3:2],minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,WR_PNTR_RD[5:4]}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[3],diff_wr_rd__0[5:3]}),
        .S({1'b0,\g_rd.gvalid_low.rd_dc_i_reg[7]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_fwft
   (out,
    almost_empty,
    empty,
    valid,
    ENB_I,
    E,
    ram_empty_fb_i_reg,
    SS,
    rd_clk,
    ENB_dly_D,
    rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram );
  output [1:0]out;
  output almost_empty;
  output empty;
  output valid;
  output ENB_I;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  input [0:0]SS;
  input rd_clk;
  input ENB_dly_D;
  input rd_en;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]SS;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire [1:0]next_fwft_state;
  wire [0:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign almost_empty = aempty_fwft_i;
  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  assign valid = user_valid;
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFEFFF)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(SS),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .O(ENB_I));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(SS));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(SS));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(SS));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc1.count_d1[6]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[23]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_fwft_33
   (almost_empty,
    empty,
    valid,
    ENB_I,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    ram_empty_fb_i0__1,
    E,
    ram_empty_fb_i_reg,
    rd_dc_i,
    SR,
    rd_clk,
    ENB_dly_D,
    rd_en,
    out,
    O,
    comp0,
    comp1);
  output almost_empty;
  output empty;
  output valid;
  output ENB_I;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output ram_empty_fb_i0__1;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output [0:0]rd_dc_i;
  input [0:0]SR;
  input rd_clk;
  input ENB_dly_D;
  input rd_en;
  input out;
  input [0:0]O;
  input comp0;
  input comp1;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  wire [0:0]SR;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  wire comp0;
  wire comp1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire out;
  wire ram_empty_fb_i0__1;
  wire [0:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire [0:0]rd_dc_i;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign almost_empty = aempty_fwft_i;
  assign empty = empty_fwft_i;
  assign valid = user_valid;
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFEFFF)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(SR),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(out),
        .O(ENB_I));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(out),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'h00D0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(O),
        .I2(user_valid),
        .I3(SR),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(SR),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(rd_dc_i));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc1.count_d1[6]_i_1 
       (.I0(out),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(SR));
  LUT6 #(
    .INIT(64'hBABBBBBBAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(out),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .I5(comp1),
        .O(ram_empty_fb_i0__1));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_logic
   (almost_empty,
    empty,
    valid,
    rd_data_count,
    diff_wr_rd__0,
    ENB_I,
    E,
    Q,
    SR,
    rd_clk,
    plusOp,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    ENB_dly_D,
    rd_en,
    comp0);
  output almost_empty;
  output empty;
  output valid;
  output [7:0]rd_data_count;
  output [5:0]diff_wr_rd__0;
  output ENB_I;
  output [0:0]E;
  output [6:0]Q;
  input [0:0]SR;
  input rd_clk;
  input [6:0]plusOp;
  input [6:0]WR_PNTR_RD;
  input [3:0]S;
  input [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input ENB_dly_D;
  input rd_en;
  input comp0;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [6:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire [6:0]WR_PNTR_RD;
  wire almost_empty;
  wire comp0;
  wire comp1;
  wire [0:0]diff_wr_rd;
  wire [5:0]diff_wr_rd__0;
  wire empty;
  wire [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire \gr1.gr1_int.rfwft_n_4 ;
  wire p_2_out;
  wire p_8_out;
  wire [6:0]plusOp;
  wire ram_empty_fb_i0__1;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire [7:7]rd_dc_i;
  wire rd_en;
  wire valid;

  design_1_AXI_ZmodADC1410_1_0_rd_fwft_33 \gr1.gr1_int.rfwft 
       (.E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .O(diff_wr_rd),
        .SR(SR),
        .almost_empty(almost_empty),
        .comp0(comp0),
        .comp1(comp1),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .out(p_2_out),
        .ram_empty_fb_i0__1(ram_empty_fb_i0__1),
        .ram_empty_fb_i_reg(p_8_out),
        .rd_clk(rd_clk),
        .rd_dc_i(rd_dc_i),
        .rd_en(rd_en),
        .valid(valid));
  design_1_AXI_ZmodADC1410_1_0_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.O(diff_wr_rd),
        .S(S),
        .WR_PNTR_RD(WR_PNTR_RD[5:0]),
        .diff_wr_rd__0(diff_wr_rd__0),
        .\g_rd.gvalid_low.rd_dc_i_reg[0]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .plusOp(plusOp),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_dc_i(rd_dc_i));
  design_1_AXI_ZmodADC1410_1_0_rd_status_flags_as_34 \gras.rsts 
       (.SR(SR),
        .out(p_2_out),
        .ram_empty_fb_i0__1(ram_empty_fb_i0__1),
        .rd_clk(rd_clk));
  design_1_AXI_ZmodADC1410_1_0_rd_bin_cntr_35 rpntr
       (.E(p_8_out),
        .Q(Q),
        .SR(SR),
        .WR_PNTR_RD(WR_PNTR_RD),
        .comp1(comp1),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_logic__parameterized0
   (almost_empty,
    empty,
    valid,
    ENB_I,
    Q,
    E,
    SS,
    rd_clk,
    ENB_dly_D,
    rd_en,
    WR_PNTR_RD);
  output almost_empty;
  output empty;
  output valid;
  output ENB_I;
  output [6:0]Q;
  output [0:0]E;
  input [0:0]SS;
  input rd_clk;
  input ENB_dly_D;
  input rd_en;
  input [6:0]WR_PNTR_RD;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [6:0]Q;
  wire [0:0]SS;
  wire [6:0]WR_PNTR_RD;
  wire almost_empty;
  wire empty;
  wire \gr1.gr1_int.rfwft_n_0 ;
  wire [0:0]p_0_in;
  wire p_2_out;
  wire p_8_out;
  wire ram_empty_fb_i0__1;
  wire rd_clk;
  wire rd_en;
  wire valid;

  design_1_AXI_ZmodADC1410_1_0_rd_fwft \gr1.gr1_int.rfwft 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_2_out),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .SS(SS),
        .almost_empty(almost_empty),
        .empty(empty),
        .out({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .ram_empty_fb_i_reg(p_8_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .valid(valid));
  design_1_AXI_ZmodADC1410_1_0_rd_status_flags_as \gras.rsts 
       (.SS(SS),
        .out(p_2_out),
        .ram_empty_fb_i0__1(ram_empty_fb_i0__1),
        .rd_clk(rd_clk));
  design_1_AXI_ZmodADC1410_1_0_rd_bin_cntr rpntr
       (.E(p_8_out),
        .Q(Q),
        .SS(SS),
        .WR_PNTR_RD(WR_PNTR_RD),
        .out(p_2_out),
        .ram_empty_fb_i0__1(ram_empty_fb_i0__1),
        .ram_empty_i_reg({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_status_flags_as
   (out,
    SS,
    ram_empty_fb_i0__1,
    rd_clk);
  output out;
  input [0:0]SS;
  input ram_empty_fb_i0__1;
  input rd_clk;

  wire [0:0]SS;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i0__1;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i0__1),
        .Q(ram_empty_fb_i),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i0__1),
        .Q(ram_empty_i),
        .S(SS));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module design_1_AXI_ZmodADC1410_1_0_rd_status_flags_as_34
   (out,
    SR,
    ram_empty_fb_i0__1,
    rd_clk);
  output out;
  input [0:0]SR;
  input ram_empty_fb_i0__1;
  input rd_clk;

  wire [0:0]SR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i0__1;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i0__1),
        .Q(ram_empty_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i0__1),
        .Q(ram_empty_i),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module design_1_AXI_ZmodADC1410_1_0_reset_blk_ramfifo
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    SR,
    wr_rst_busy,
    out,
    ram_rstram_b,
    rst,
    wr_clk,
    rd_clk,
    POR_B);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output [0:0]SR;
  output wr_rst_busy;
  output out;
  output ram_rstram_b;
  input rst;
  input wr_clk;
  input rd_clk;
  input POR_B;

  wire POR_B;
  wire [0:0]SR;
  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire ram_rstram_b;
  wire rd_clk;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy_i;
  wire [1:0]wr_rst_rd_ext;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i;
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_3 
       (.I0(SR),
        .I1(POR_B),
        .O(ram_rstram_b));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy_i),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(SR),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(SR),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .I3(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0F0D0D0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(rd_rst_wr_ext[3]),
        .I1(rd_rst_wr_ext[2]),
        .I2(wr_rst_busy_i),
        .I3(rd_rst_wr_ext[0]),
        .I4(rd_rst_wr_ext[1]),
        .I5(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .Q(wr_rst_busy_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__6 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(rd_clk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(rst));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__6 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(wr_clk),
        .dest_rst(dest_rst),
        .src_rst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module design_1_AXI_ZmodADC1410_1_0_reset_blk_ramfifo__xdcDup__1
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    SR,
    wr_rst_busy,
    out,
    ram_rstram_b,
    rst,
    wr_clk,
    rd_clk,
    POR_B);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output [0:0]SR;
  output wr_rst_busy;
  output out;
  output ram_rstram_b;
  input rst;
  input wr_clk;
  input rd_clk;
  input POR_B;

  wire POR_B;
  wire [0:0]SR;
  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire ram_rstram_b;
  wire rd_clk;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy_i;
  wire [1:0]wr_rst_rd_ext;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i;
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_3 
       (.I0(SR),
        .I1(POR_B),
        .O(ram_rstram_b));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy_i),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(SR),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(SR),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .I3(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0F0D0D0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(rd_rst_wr_ext[3]),
        .I1(rd_rst_wr_ext[2]),
        .I2(wr_rst_busy_i),
        .I3(rd_rst_wr_ext[0]),
        .I4(rd_rst_wr_ext[1]),
        .I5(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .Q(wr_rst_busy_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__5 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_single__4 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__5 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(rd_clk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(rst));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_AXI_ZmodADC1410_1_0_xpm_cdc_sync_rst__4 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(wr_clk),
        .dest_rst(dest_rst),
        .src_rst(rst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_bin_cntr
   (S,
    Q,
    \gic0.gc1.count_d3_reg[6]_0 ,
    \gic0.gc1.count_reg[6]_0 ,
    D,
    \gic0.gc1.count_d1_reg[6]_0 ,
    \gic0.gc1.count_d2_reg[6]_0 ,
    RD_PNTR_WR,
    diff_wr_rd__0,
    \gic0.gc1.count_d2_reg[1]_0 ,
    E,
    wr_clk);
  output [3:0]S;
  output [6:0]Q;
  output [2:0]\gic0.gc1.count_d3_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_reg[6]_0 ;
  output [6:0]D;
  output [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  input [6:0]RD_PNTR_WR;
  input [5:0]diff_wr_rd__0;
  input \gic0.gc1.count_d2_reg[1]_0 ;
  input [0:0]E;
  input wr_clk;

  wire [6:0]D;
  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire [3:0]S;
  wire [5:0]diff_wr_rd__0;
  wire \gic0.gc1.count[6]_i_2_n_0 ;
  wire [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  wire \gic0.gc1.count_d2_reg[1]_0 ;
  wire [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  wire [2:0]\gic0.gc1.count_d3_reg[6]_0 ;
  wire [6:0]\gic0.gc1.count_reg[6]_0 ;
  wire [6:0]plusOp__0;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .I2(\gic0.gc1.count_reg[6]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [1]),
        .I1(\gic0.gc1.count_reg[6]_0 [0]),
        .I2(\gic0.gc1.count_reg[6]_0 [2]),
        .I3(\gic0.gc1.count_reg[6]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [2]),
        .I1(\gic0.gc1.count_reg[6]_0 [0]),
        .I2(\gic0.gc1.count_reg[6]_0 [1]),
        .I3(\gic0.gc1.count_reg[6]_0 [3]),
        .I4(\gic0.gc1.count_reg[6]_0 [4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [3]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .I2(\gic0.gc1.count_reg[6]_0 [0]),
        .I3(\gic0.gc1.count_reg[6]_0 [2]),
        .I4(\gic0.gc1.count_reg[6]_0 [4]),
        .I5(\gic0.gc1.count_reg[6]_0 [5]),
        .O(plusOp__0[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[6]_i_2_n_0 ),
        .I1(\gic0.gc1.count_reg[6]_0 [5]),
        .I2(\gic0.gc1.count_reg[6]_0 [6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gic0.gc1.count[6]_i_2 
       (.I0(\gic0.gc1.count_reg[6]_0 [4]),
        .I1(\gic0.gc1.count_reg[6]_0 [2]),
        .I2(\gic0.gc1.count_reg[6]_0 [0]),
        .I3(\gic0.gc1.count_reg[6]_0 [1]),
        .I4(\gic0.gc1.count_reg[6]_0 [3]),
        .O(\gic0.gc1.count[6]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [0]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [0]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [1]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [1]),
        .S(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [0]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [0]),
        .S(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [1]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [1]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [0]),
        .Q(Q[0]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [1]),
        .Q(Q[1]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [2]),
        .Q(Q[2]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [3]),
        .Q(Q[3]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [4]),
        .Q(Q[4]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [5]),
        .Q(Q[5]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [6]),
        .Q(Q[6]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gic0.gc1.count_reg[6]_0 [0]),
        .S(\gic0.gc1.count_d2_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gic0.gc1.count_reg[6]_0 [1]),
        .S(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gic0.gc1.count_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gic0.gc1.count_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gic0.gc1.count_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(\gic0.gc1.count_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(\gic0.gc1.count_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d2_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .I1(diff_wr_rd__0[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(diff_wr_rd__0[0]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[0]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[0]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[0]),
        .I3(diff_wr_rd__0[2]),
        .I4(diff_wr_rd__0[4]),
        .I5(diff_wr_rd__0[5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[7]_i_1 
       (.I0(diff_wr_rd__0[5]),
        .I1(diff_wr_rd__0[3]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[0]),
        .I4(diff_wr_rd__0[2]),
        .I5(diff_wr_rd__0[4]),
        .O(D[6]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_bin_cntr_32
   (Q,
    \gic0.gc1.count_d1_reg[6]_0 ,
    \gic0.gc1.count_d2_reg[6]_0 ,
    \gic0.gc1.count_d3_reg[6]_0 ,
    \gic0.gc1.count_d3_reg[0]_0 ,
    E,
    wr_clk);
  output [6:0]Q;
  output [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_d3_reg[6]_0 ;
  input \gic0.gc1.count_d3_reg[0]_0 ;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [6:0]Q;
  wire \gic0.gc1.count[6]_i_2_n_0 ;
  wire [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  wire [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  wire \gic0.gc1.count_d3_reg[0]_0 ;
  wire [6:0]\gic0.gc1.count_d3_reg[6]_0 ;
  wire [6:0]plusOp__0;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__0[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[6]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gic0.gc1.count[6]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .O(\gic0.gc1.count[6]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [0]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[1]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [1]),
        .S(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[2]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[3]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[4]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[5]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[6]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [0]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [0]),
        .S(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [1]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [1]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [0]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [0]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [1]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [1]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [2]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [3]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [4]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [5]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d2_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d3_reg[6]_0 [6]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(Q[0]),
        .S(\gic0.gc1.count_d3_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(Q[1]),
        .S(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(Q[2]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(Q[3]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(Q[4]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(Q[5]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(Q[6]),
        .R(\gic0.gc1.count_d3_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_dc_fwft_ext_as
   (diff_wr_rd__0,
    wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[7]_0 ,
    \wr_data_count_i_reg[0]_0 ,
    D,
    wr_clk);
  output [5:0]diff_wr_rd__0;
  output [7:0]wr_data_count;
  input [5:0]Q;
  input [3:0]S;
  input [2:0]\wr_data_count_i_reg[7]_0 ;
  input \wr_data_count_i_reg[0]_0 ;
  input [6:0]D;
  input wr_clk;

  wire [6:0]D;
  wire [5:0]Q;
  wire [3:0]S;
  wire [0:0]diff_wr_rd;
  wire [5:0]diff_wr_rd__0;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire \wr_data_count_i_reg[0]_0 ;
  wire [2:0]\wr_data_count_i_reg[7]_0 ;
  wire [3:2]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__0_O_UNCONNECTED;

  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({diff_wr_rd__0[2:0],diff_wr_rd}),
        .S(S));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3:2],minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[5:4]}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[3],diff_wr_rd__0[5:3]}),
        .S({1'b0,\wr_data_count_i_reg[7]_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_wr_rd),
        .Q(wr_data_count[0]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(wr_data_count[1]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(wr_data_count[2]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(wr_data_count[3]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(wr_data_count[4]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(wr_data_count[5]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(wr_data_count[6]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(wr_data_count[7]),
        .R(\wr_data_count_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_logic
   (full,
    out,
    E,
    Q,
    almost_full,
    \gic0.gc1.count_d1_reg[6] ,
    \gic0.gc1.count_d2_reg[6] ,
    \gic0.gc1.count_d3_reg[6] ,
    \gic0.gc1.count_d3_reg[0] ,
    ram_full_fb_i_reg,
    wr_clk,
    wr_en,
    comp3,
    comp2,
    \gaf.ram_almost_full_i_reg );
  output full;
  output out;
  output [0:0]E;
  output [6:0]Q;
  output almost_full;
  output [6:0]\gic0.gc1.count_d1_reg[6] ;
  output [6:0]\gic0.gc1.count_d2_reg[6] ;
  output [6:0]\gic0.gc1.count_d3_reg[6] ;
  input \gic0.gc1.count_d3_reg[0] ;
  input ram_full_fb_i_reg;
  input wr_clk;
  input wr_en;
  input comp3;
  input comp2;
  input \gaf.ram_almost_full_i_reg ;

  wire [0:0]E;
  wire [6:0]Q;
  wire almost_full;
  wire comp2;
  wire comp3;
  wire full;
  wire \gaf.ram_almost_full_i_reg ;
  wire [6:0]\gic0.gc1.count_d1_reg[6] ;
  wire [6:0]\gic0.gc1.count_d2_reg[6] ;
  wire \gic0.gc1.count_d3_reg[0] ;
  wire [6:0]\gic0.gc1.count_d3_reg[6] ;
  wire out;
  wire ram_full_fb_i_reg;
  wire wr_clk;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_wr_status_flags_as_31 \gwas.wsts 
       (.E(E),
        .almost_full(almost_full),
        .comp2(comp2),
        .comp3(comp3),
        .full(full),
        .\gaf.ram_almost_full_i_reg_0 (\gaf.ram_almost_full_i_reg ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc1.count_d3_reg[0] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_wr_bin_cntr_32 wpntr
       (.E(E),
        .Q(Q),
        .\gic0.gc1.count_d1_reg[6]_0 (\gic0.gc1.count_d1_reg[6] ),
        .\gic0.gc1.count_d2_reg[6]_0 (\gic0.gc1.count_d2_reg[6] ),
        .\gic0.gc1.count_d3_reg[0]_0 (\gic0.gc1.count_d3_reg[0] ),
        .\gic0.gc1.count_d3_reg[6]_0 (\gic0.gc1.count_d3_reg[6] ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_logic__parameterized0
   (full,
    out,
    Q,
    E,
    \gic0.gc1.count_reg[6] ,
    almost_full,
    \gic0.gc1.count_d1_reg[6] ,
    \gic0.gc1.count_d2_reg[6] ,
    wr_data_count,
    \gic0.gc1.count_d2_reg[1] ,
    ram_full_fb_i_reg,
    wr_clk,
    RD_PNTR_WR,
    wr_en,
    comp3,
    comp2,
    \gaf.ram_almost_full_i_reg );
  output full;
  output out;
  output [6:0]Q;
  output [0:0]E;
  output [6:0]\gic0.gc1.count_reg[6] ;
  output almost_full;
  output [6:0]\gic0.gc1.count_d1_reg[6] ;
  output [6:0]\gic0.gc1.count_d2_reg[6] ;
  output [7:0]wr_data_count;
  input \gic0.gc1.count_d2_reg[1] ;
  input ram_full_fb_i_reg;
  input wr_clk;
  input [6:0]RD_PNTR_WR;
  input wr_en;
  input comp3;
  input comp2;
  input \gaf.ram_almost_full_i_reg ;

  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire almost_full;
  wire comp2;
  wire comp3;
  wire [6:1]diff_wr_rd__0;
  wire full;
  wire \gaf.ram_almost_full_i_reg ;
  wire [6:0]\gic0.gc1.count_d1_reg[6] ;
  wire \gic0.gc1.count_d2_reg[1] ;
  wire [6:0]\gic0.gc1.count_d2_reg[6] ;
  wire [6:0]\gic0.gc1.count_reg[6] ;
  wire out;
  wire [7:1]plusOp;
  wire ram_full_fb_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_11;
  wire wpntr_n_12;
  wire wpntr_n_13;
  wire wpntr_n_2;
  wire wpntr_n_3;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;

  design_1_AXI_ZmodADC1410_1_0_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.D(plusOp),
        .Q(Q[5:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .diff_wr_rd__0(diff_wr_rd__0),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[0]_0 (\gic0.gc1.count_d2_reg[1] ),
        .\wr_data_count_i_reg[7]_0 ({wpntr_n_11,wpntr_n_12,wpntr_n_13}));
  design_1_AXI_ZmodADC1410_1_0_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .almost_full(almost_full),
        .comp2(comp2),
        .comp3(comp3),
        .full(full),
        .\gaf.ram_almost_full_i_reg_0 (\gaf.ram_almost_full_i_reg ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc1.count_d2_reg[1] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  design_1_AXI_ZmodADC1410_1_0_wr_bin_cntr wpntr
       (.D(plusOp),
        .E(E),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .diff_wr_rd__0(diff_wr_rd__0),
        .\gic0.gc1.count_d1_reg[6]_0 (\gic0.gc1.count_d1_reg[6] ),
        .\gic0.gc1.count_d2_reg[1]_0 (\gic0.gc1.count_d2_reg[1] ),
        .\gic0.gc1.count_d2_reg[6]_0 (\gic0.gc1.count_d2_reg[6] ),
        .\gic0.gc1.count_d3_reg[6]_0 ({wpntr_n_11,wpntr_n_12,wpntr_n_13}),
        .\gic0.gc1.count_reg[6]_0 (\gic0.gc1.count_reg[6] ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_status_flags_as
   (full,
    out,
    E,
    almost_full,
    ram_full_fb_i_reg_0,
    ram_full_fb_i_reg_1,
    wr_clk,
    wr_en,
    comp3,
    comp2,
    \gaf.ram_almost_full_i_reg_0 );
  output full;
  output out;
  output [0:0]E;
  output almost_full;
  input ram_full_fb_i_reg_0;
  input ram_full_fb_i_reg_1;
  input wr_clk;
  input wr_en;
  input comp3;
  input comp2;
  input \gaf.ram_almost_full_i_reg_0 ;

  wire [0:0]E;
  wire almost_full;
  wire comp2;
  wire comp3;
  wire \gaf.ram_almost_full_i_i_1_n_0 ;
  wire \gaf.ram_almost_full_i_reg_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_4 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(comp3),
        .I1(wr_en),
        .I2(comp2),
        .I3(\gaf.ram_almost_full_i_reg_0 ),
        .I4(ram_full_fb_i),
        .I5(almost_full),
        .O(\gaf.ram_almost_full_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.ram_almost_full_i_i_1_n_0 ),
        .Q(almost_full),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_1),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_1),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module design_1_AXI_ZmodADC1410_1_0_wr_status_flags_as_31
   (full,
    out,
    E,
    almost_full,
    ram_full_fb_i_reg_0,
    ram_full_fb_i_reg_1,
    wr_clk,
    wr_en,
    comp3,
    comp2,
    \gaf.ram_almost_full_i_reg_0 );
  output full;
  output out;
  output [0:0]E;
  output almost_full;
  input ram_full_fb_i_reg_0;
  input ram_full_fb_i_reg_1;
  input wr_clk;
  input wr_en;
  input comp3;
  input comp2;
  input \gaf.ram_almost_full_i_reg_0 ;

  wire [0:0]E;
  wire almost_full;
  wire comp2;
  wire comp3;
  wire \gaf.ram_almost_full_i_i_1_n_0 ;
  wire \gaf.ram_almost_full_i_reg_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_4 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(comp3),
        .I1(wr_en),
        .I2(comp2),
        .I3(\gaf.ram_almost_full_i_reg_0 ),
        .I4(ram_full_fb_i),
        .I5(almost_full),
        .O(\gaf.ram_almost_full_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.ram_almost_full_i_i_1_n_0 ),
        .Q(almost_full),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_1),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_1),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
